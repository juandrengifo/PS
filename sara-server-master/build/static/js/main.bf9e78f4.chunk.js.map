{"version":3,"sources":["components/shared/SInfoPanel/SInfoPanel.module.css","components/shared/SPassword/SPPassButton/SPPassButton.module.css","components/therapist/STField/STField.module.css","components/shared/SComments/SComments.module.css","components/shared/SPasswordRecover/SPasswordRecover.module.css","components/shared/SFooterBar/SFooterBar.module.css","pages/patient/SPCollectionsPage/SPCollectionsPage.module.css","components/patient/SPCollection/SPCollection.module.css","components/therapist/STField/STOption/STOption.module.css","components/shared/SSearch/SSearch.module.css","pages/admin/SAUsersPage/SAUsersPage.module.css","pages/admin/SAUpdateUserPage/SAUpdateUserPage.module.css","components/shared/SModal/SModal.module.css","components/shared/SVideo/SVideo.module.css","components/landing/SFeatures/SFeatures.module.css","components/layout/STLayout/STLayout.module.css","components/layout/SPLayout/SPLayout.module.css","components/shared/SPassword/SPassword.module.css","components/therapist/STHistorical/STMechanics/STMechanics.module.css","components/shared/SEmpty/SEmpty.module.css","components/therapist/STAvatarPanel/STAvatarPanel.module.css","components/shared/SCarousel/SCarousel.module.css","components/shared/SCarousel/SAvatarIem/SAvatarItem.module.css","pages/patient/SPActivitiesPage/SPActivitiesPage.module.css","pages/therapist/STFeedbackPage/STFeedbackPage.module.css","components/shared/SDatePicker/SDatePicker.module.css","components/shared/SMenuLink/SMenuLink.module.css","pages/patient/SPPlayPage/SPPlayPage.module.css","components/therapist/STEvolution/STEvolution.module.css","components/therapist/STEvolution/STSessions/STSessions.module.css","components/therapist/STHistorical/STHistorical.module.css","components/therapist/charts/Charts.module.css","components/therapist/STPatient/STPatient.module.css","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.module.css","pages/therapist/STActivitiesPage/STActivitiesPage.module.css","components/landing/SHero/SHero.module.css","components/therapist/STActivity/STActivity.module.css","store/actions/types.js","store/actions/ui.js","store/actions/connection.js","utils/Speaker.js","utils/Messenger.js","utils/ServerStatus.js","components/shared/SAvatar/SAvatar.jsx","components/shared/SAvatar/index.js","components/shared/SBubbleNotification/SBubbleNotification.jsx","components/shared/SBubbleNotification/index.js","components/shared/SHeaderBar/SNav/SNav.jsx","components/shared/SHeaderBar/SNav/index.js","data/roles.js","components/shared/SMenuHeader/SMenuHeader.jsx","components/shared/SMenuHeader/index.js","store/actions/auth.js","components/shared/SMenuLink/SMenuLink.jsx","components/shared/SMenuLink/index.js","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.jsx","components/shared/SHeaderBar/SUserNav/SMenu/index.js","components/shared/SHeaderBar/SUserNav/SUserNav.jsx","components/shared/SHeaderBar/SUserNav/index.js","components/shared/SHeaderBar/SHeaderBar.jsx","components/shared/SHeaderBar/index.js","components/mobile/SMobileAvatar/SMobileAvatar.jsx","components/mobile/SMobileAvatar/index.js","components/mobile/SMobileMenu/SMobileMenu.jsx","components/mobile/SMobileMenu/index.js","utils/date&time.js","components/shared/SEmpty/SEmpty.jsx","components/shared/SEmpty/index.js","components/shared/SSpinner/SSpinner.jsx","components/shared/SSpinner/index.js","components/shared/SComments/SComments.jsx","components/shared/SComments/index.js","store/actions/activity.js","store/actions/plugin.js","components/shared/form/SSubmitField/SSubmitField.jsx","components/shared/form/SSubmitField/index.js","components/shared/SModal/SNewComment/SNewComment.jsx","components/shared/SModal/SNewComment/index.js","store/actions/user.js","utils/user.js","components/shared/form/SInputField/SInputField.jsx","components/shared/form/SInputField/index.js","components/shared/SPasswordRecover/SPasswordRecover.jsx","components/shared/SPasswordRecover/index.js","components/shared/SVideo/SVideo.jsx","components/shared/SVideo/index.js","components/shared/SModal/SModal.jsx","components/shared/SModal/index.js","components/SProtectedRoute/SProtectedRoute.jsx","components/SProtectedRoute/index.js","components/landing/SAvatarInfo/SAvatarInfo.jsx","components/landing/SAvatarInfo/index.js","components/landing/SDevelop/SDevelop.jsx","components/landing/SDevelop/index.js","components/landing/SFeatures/SFeature/SFeature.jsx","components/landing/SFeatures/SFeature/index.js","components/landing/SFeatures/SFeatures.jsx","components/landing/SFeatures/index.js","components/shared/SFooterBar/SFooterBar.jsx","components/shared/SFooterBar/index.js","components/landing/SHero/SHero.jsx","components/landing/SHero/index.js","components/landing/SMobile/SMobile.jsx","components/landing/SMobile/index.js","data/features.js","pages/shared/SLandingPage/SLandingPage.jsx","pages/shared/SLandingPage/index.js","store/actions/avatar.js","components/shared/SInfoPanel/SInfoPanel.jsx","components/shared/SInfoPanel/index.js","components/shared/SSecurityPanel/SSecurityPanel.jsx","components/shared/SSecurityPanel/index.js","components/shared/SCarousel/SAvatarIem/SAvatarItem.jsx","components/shared/SCarousel/SAvatarIem/index.js","store/actions/collection.js","components/shared/SCarousel/SSkinItem/SSkinItem.jsx","components/shared/SCarousel/SSkinItem/index.js","components/shared/SCarousel/SCarousel.jsx","components/shared/SCarousel/index.js","components/shared/SContainer/SContainer.jsx","components/shared/SContainer/index.js","data/customizer.js","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.jsx","components/therapist/STAvatarPanel/STACustomizer/index.js","components/therapist/STAvatarPanel/STAvatarPanel.jsx","components/therapist/STAvatarPanel/index.js","components/layout/STLayout/index.js","components/layout/STLayout/STLayout.jsx","components/shared/SUserHero/index.js","components/shared/SUserHero/SUserHero.jsx","pages/shared/SProfilePage/SProfilePage.jsx","pages/shared/SProfilePage/index.js","components/patient/SPActivity/SPActivity.jsx","components/patient/SPActivity/index.js","components/layout/SPLayout/SPLayout.jsx","components/layout/SPLayout/index.js","data/messages.js","pages/patient/SPActivitiesPage/SPActivitiesPage.jsx","pages/patient/SPActivitiesPage/index.js","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.jsx","pages/patient/SPCollectableInfoPage/index.js","components/patient/SPCollection/SPCollectable/SPCollectable.jsx","components/patient/SPCollection/SPCollectable/index.js","components/patient/SPCollection/index.js","components/patient/SPCollection/SPCollection.jsx","pages/patient/SPCollectionsPage/SPCollectionsPage.jsx","pages/patient/SPCollectionsPage/index.js","components/shared/SPassword/SPPassButton/index.js","components/shared/SPassword/SPPassButton/SPPassButton.jsx","components/shared/SPassword/index.js","components/shared/SPassword/SPassword.jsx","components/patient/SPLogin/SPLogin.jsx","components/patient/SPLogin/index.js","pages/patient/SPLandingPage/SPLandingPage.jsx","pages/patient/SPLandingPage/index.js","components/shared/SFullScreen/index.js","components/shared/SFullScreen/SFullScreen.jsx","pages/patient/SPPlayPage/SPPlayPage.jsx","pages/patient/SPPlayPage/index.js","store/actions/patient.js","components/therapist/STActivity/STActivityButtons/STActivityButtons.jsx","components/therapist/STActivity/STActivityButtons/index.js","components/therapist/STActivity/STSyntacticCircle/SSyntacticCircle.jsx","components/therapist/STActivity/STSyntacticCircle/index.js","components/therapist/STActivity/index.js","components/therapist/STActivity/STActivity.jsx","pages/therapist/STActivitiesPage/STActivitiesPage.jsx","pages/therapist/STActivitiesPage/index.js","components/therapist/STField/STOption/STOption.jsx","components/therapist/STField/STOption/index.js","components/therapist/STField/STField.jsx","components/therapist/STField/index.js","components/therapist/STDynamic/STDynamicField/STDynamicField.jsx","store/actions/dynamic.js","components/therapist/STDynamic/STDynamicField/index.js","components/therapist/STDynamic/STDynamic.jsx","components/therapist/STDynamic/index.js","store/actions/static.js","components/therapist/STStatic/STStaticField/STStaticField.jsx","components/therapist/STStatic/STStaticField/index.js","components/therapist/STStatic/STStatic.jsx","components/therapist/STStatic/index.js","pages/therapist/STConfigurationPage/STConfigurationPage.jsx","store/actions/configuration.js","pages/therapist/STConfigurationPage/index.js","store/actions/feedback.js","components/shared/SDatePicker/SDatePicker.jsx","components/shared/SDatePicker/index.js","utils/feedback.js","data/charts.js","components/therapist/charts/STDoughnut.jsx","components/therapist/charts/STLevel.jsx","components/therapist/charts/STLine.jsx","components/therapist/charts/STPhrases.jsx","components/therapist/charts/STStackBar.jsx","components/therapist/feedback/STInGame.jsx","components/therapist/feedback/STLevels.jsx","components/therapist/feedback/STTimes.jsx","components/therapist/feedback/STVocalization.jsx","data/mechanics.js","components/therapist/feedback/STFeedOptions/STFeedOptions.jsx","components/therapist/feedback/STFeedOptions/index.js","components/therapist/STEvolution/STSessions/STSession/STSession.jsx","components/therapist/STEvolution/STSessions/STSession/index.js","components/therapist/STEvolution/STSessions/STSessions.jsx","components/therapist/STEvolution/STSessions/index.js","components/therapist/STEvolution/STEvolution.jsx","components/therapist/STEvolution/index.js","components/therapist/STHistorical/STMechanics/index.js","components/therapist/STHistorical/STMechanics/STMechanics.jsx","components/therapist/STHistorical/STHistorical.jsx","components/therapist/STHistorical/index.js","pages/therapist/STFeedbackPage/STFeedbackPage.jsx","pages/therapist/STFeedbackPage/index.js","components/therapist/STLogin/STLogin.jsx","components/therapist/STLogin/index.js","pages/therapist/STLandingPage/STLandingPage.jsx","pages/therapist/STLandingPage/index.js","components/shared/SSearch/SSearch.jsx","components/shared/SSearch/index.js","components/therapist/STPatient/STPatient.jsx","components/therapist/STPatient/index.js","pages/therapist/STPatientsPage/STPatientsPage.jsx","pages/therapist/STPatientsPage/index.js","components/admin/SAUser/SAUser.jsx","components/admin/SAUser/index.js","pages/admin/SAUsersPage/SAUsersPage.jsx","pages/admin/SAUsersPage/index.js","components/admin/SAImageLoader/index.js","components/admin/SAImageLoader/SAImageLoader.jsx","components/shared/form/SCheckField/index.js","components/shared/form/SCheckField/SCheckField.jsx","components/shared/form/SDateField/index.js","components/shared/form/SDateField/SDateField.jsx","components/shared/form/SSelectField/index.js","components/shared/form/SSelectField/SSelectField.jsx","data/form.js","components/admin/SAUserForm/index.js","components/admin/SAUserForm/SAUserForm.jsx","pages/admin/SAUpdateUserPage/SAUpdateUserPage.jsx","pages/admin/SAUpdateUserPage/index.js","App.js","store/reducers/activity.js","store/reducers/auth.js","store/reducers/avatar.js","store/reducers/collection.js","store/reducers/configuration.js","store/reducers/connection.js","store/reducers/dynamic.js","store/reducers/feedback.js","store/reducers/patient.js","store/reducers/static.js","store/reducers/ui.js","store/reducers/user.js","store/reducers/index.js","store/index.js","index.js","components/therapist/STActivity/STActivityButtons/STActivityButtons.module.css","components/therapist/feedback/STFeedOptions/STFeedOptions.module.css","components/shared/SHeaderBar/SUserNav/SUserNav.module.css","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.module.css","components/patient/SPCollection/SPCollectable/SPCollectable.module.css","pages/therapist/STConfigurationPage/STConfigurationPage.module.css","components/therapist/STEvolution/STSessions/STSession/STSession.module.css","components/therapist/feedback/Feedback.module.css","components/shared/SBubbleNotification/SBubbleNotification.module.css","components/mobile/SMobileAvatar/SMobileAvatar.module.css","components/landing/SAvatarInfo/SAvatarInfo.module.css","components/shared/SUserHero/SUserHero.module.css","components/patient/SPActivity/SPActivity.module.css","pages/therapist/STPatientsPage/STPatientsPage.module.css","components/admin/SAUser/SAUser.module.css","components/admin/SAImageLoader/SAImageLoader.module.css","components/shared/SAvatar/SAvatar.module.css","components/landing/SDevelop/SDevelop.module.css","pages/shared/SProfilePage/SProfilePage.module.css","components/shared/SCarousel/SSkinItem/SSkinItem.module.css","components/therapist/STLogin/STLogin.module.css","components/shared/SHeaderBar/SNav/SNav.module.css","components/shared/SMenuHeader/SMenuHeader.module.css","components/mobile/SMobileMenu/SMobileMenu.module.css","components/shared/SModal/SNewComment/SNewComment.module.css","components/landing/SMobile/SMobile.module.css","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.module.css","components/patient/SPLogin/SPLogin.module.css","components/shared/SHeaderBar/SHeaderBar.module.css","pages/shared/SLandingPage/SLandingPage.module.css","components/landing/SFeatures/SFeature/SFeature.module.css"],"names":["module","exports","REMOVE_ACTIVITY","SET_ACTIVITIES","SET_ACTIVITY","SET_SELECTED_SESSION","SET_SESSIONS","UPDATE_ACTIVITY","SET_PATIENT_TOKEN","SET_THERAPIST_TOKEN","SET_AVATAR_MESSAGE","SET_AVATAR_VARIATION","SET_AVATAR_VARIATIONS","RESET_CONFIGURATION","SET_CONFIGURATION","RESET_DYNAMIC_OPTIONS","SET_DYNAMIC_OPTIONS","SET_DYNAMIC_SELECTED_OPTIONS","ADD_STATIC_SELECTED_OPTION","RESET_STATIC_OPTIONS","SET_STATIC_OPTIONS","SET_STATIC_SELECTED_OPTIONS","SET_COLLECTIONS","SET_COLLECTABLE","SET_USER_SKINS_OWNED","SET_USER_SKIN_OWNED","SET_CHECK_SERVER_STATUS","SET_CONNECTED_ID","SET_CONNECT_SOCKET","SET_FEEDBACK_DATA","SET_FEEDBACK_DATE","REMOVE_PATIENT","SET_PATIENT","SET_PATIENTS","SET_SELECTED_PATIENT","SET_BAR","SET_FULLSCREEN","SET_MODAL","SET_NOTIFICATION","SET_PARALLAX","SET_V_OFFSET","SET_WINDOW_WIDTH","SHOW_AVATAR","SHOW_CREATE_ACTIVITY_BUTTON","SHOW_MOBILE_MENU","SET_USER","SET_USERS","SET_TO_UPDATE","setBar","bar","dispatch","type","payload","setFullScreen","fullScreen","setModal","modal","setNotification","notification","setParallax","parallax","showAvatar","show","showCreateActivityButton","showMobileMenu","gameServerURL","process","serverURL","setConnectedId","connectedId","Speaker","instance","this","synthesis","window","speechSynthesis","utterance","utteranceIndex","voice","lang","a","setVoices","voices","forEach","voiceS","speaking","Promise","resolve","timer","setInterval","getVoices","length","clearInterval","volume","cancel","remainingMessage","text","slice","speak","message","SpeechSynthesisUtterance","rate","pitch","onboundary","e","name","charIndex","SpeakerSingleton","Messenger","socketURL","socketClient","heartbeat","userId","context","socketIOClient","connect","reconnection","emit","handleSocketEvents","props","connectSocket","setConnectSocket","disconnect","connection","disconnectSocket","on","console","log","closeSocket","MessengerSingleton","ServerStatus","interval","check","game","ping","error","status","errorData","handleGameServerStatus","handleServerStatus","ui","serverStatus","slide","handleConnection","DEFAULT_AVATAR","SAvatar","state","avatar_img","soundEnabled","showMessage","onMessageClicked","bind","onRepeatClicked","onSoundClicked","avatarImage","auth","pacienteToken","className","styles","container","image","alt","src","buttons","Button","onClick","buttonIcon","avatar","setTherapistAvatar","prevProps","setState","isSpeaking","setVolume","user","Therapists","therapists","Object","values","avatarVariationImage","Avatar_Variation","img_path","Component","SBubbleNotification","windowWidth","faIcon","faDizzy","faGrinBeam","success","containerDesktop","containerMobile","finalSlide","border","style","iconContainer","icon","size","setTimeout","mapActionsToProps","SNav","useState","isOpen","setIsOpen","toggle","NavbarToggler","toggler","Collapse","collapse","navbar","Nav","nav","NavItem","navItem","link","to","PATIENT","THERAPIST","SMenuHeader","profile_img","thumb","backgroundColor","color","thumbnail_alias","last_name","email","apiURL","login","credentials","role","url","axios","post","response","data","headers","token","id","localStorage","setItem","SMenuLink","onLinkClicked","onLogout","children","logout","removeItem","SMenu","Role","Dropdown","DropdownToggle","DropdownMenu","menu","DropdownItem","header","divider","item","SUserNav","onMenuButtonClicked","is_admin","linksContainer","uimage","SHeaderBar","base","patientBar","standardBar","Navbar","expand","fixed","light","NavbarBrand","navbrand","logo","SMobileAvatar","buttonMargin","SMobileMenu","animation","menuAppear","onAnimatedCloseClicked","onSimpleCloseClicked","btn","menuDissapear","getDatesDifference","startDate","endDate","start","DateTime","fromISO","diff","toObject","getFormattedDate","date","setLocale","toLocaleString","DATE_FULL","getDateBoundaries","luxDate","startOf","toISODate","endOf","SEmpty","SSpinner","marginTop","padding","textAlign","width","Spinner","SComments","comments","loading","map","comment","i","split","commentContainer","audio","controls","controlsList","getCommentsFromSessions","sessions","session","date_end","trim","push","getActivity","get","activity","getActivities","patientId","activities","setActivity","setActivities","setSession","updateActivitySession","put","SSubmitField","FormGroup","minWidth","SNewComment","recording","onCancelClicked","onTextChanged","onRecordAudioClicked","onSaveClicked","recordState","recorded","notRecording","Form","Input","onChange","placeholder","rows","resize","invalid","FormFeedback","microphoneText","recorderContainer","microphone","URL","createObjectURL","marginLeft","justifyContent","target","value","audioChunks","navigator","mediaDevices","getUserMedia","stream","recorder","MediaRecorder","ondataavailable","blob","Blob","stop","getTracks","audioError","audioPath","uploadAudioFile","path","saveError","audioFile","form","FormData","append","getUser","toUpdate","getUsers","query","users","updateUser","setUser","setToUpdate","buildRandomColor","Math","floor","random","buildUserAlias","charAt","toUpperCase","checkEmail","test","SInputField","Label","FormText","disabled","SPasswordRecover","done","onEmailChange","onSendClicked","infoText","btnContainer","doneMessage","preventDefault","recoverPassword","errorMsg","SVideo","absolute","video","SModal","closeModal","Modal","centered","contentClassName","ModalHeader","title","ModalBody","body","videoUrl","SProtectedRoute","getRoleFromPath","hasToken","component","rest","render","checkServerStatus","computedMatch","letter","params","setCheckServerStatus","defaults","common","SAvatarInfo","innerContainer","sides","avatarSide","description","SDevelop","faHeart","logoContainer","logoImage","SFeature","Col","sm","md","feature","infoContainer","SFeatures","Row","noGutters","features","SFooterBar","copyright","SHero","outerContainer","subtitle","SMobile","imageContainer","featuresData","therapist","patient","SLandingPage","xs","mainPhrase","mainIdea","featuresTitle","setMessage","SInfoPanel","label","SSecurityPanel","password","fontSize","fontWeight","field","userData","SAvatarItem","avatarPath","getPatientSkin","skinData","skinId","single","setPatientSkins","skins","skin","SSkinItem","price","collectable","onBuyClicked","collectableImg","owned","checkPrice","cannotBuy","checkUserSkin","updatePrice","collectableId","collectionId","id_collection","buildData","newScore","score","_skins","Skins","is_default","buySkins","collection","SCarousel","activeIndex","animating","animateItem","buildItems","goToIndex","next","previous","kind","Carousel","CarouselControl","direction","onClickHandler","animate","items","CarouselItem","onExiting","onExited","newIndex","onCarouselChanged","nextIndex","index","selected","SContainer","undefined","borderRadius","boxShadow","options","eye","dbalias","hair","torso","colors","blue","button","colorHex","brown","black","blonde","green","purple","STACustomizer","option","onOptionClicked","onSectionOptionClicked","buildOptions","buildSections","styleClass","col","backgroundImage","backgroundSize","section","buildSectionsOptions","inStyle","names","sectionOpt","optionName","soption","onOptionSelected","STAvatarPanel","current","variations","carousel","getVariations","assign","keys","id_avatar","key","thumbnail_path","getAvatarVariation","variationData","id_avatar_variation","gender","getAvatarVariations","getVariation","variation","userAvatar","1","splice","unshift","v","STLayout","xlSize","page","mt","rowContainer","lg","xl","pt","SUserHero","userContainer","row","alias","uname","SProfilePage","btnAvatar","btnInfo","btnSecurity","optContainer","setAvatarVariations","SPActivity","onPlayClicked","onTutorialClicked","date_from","logo_path","Activity","gameImage","gameContainer","gameTitle","marginBottom","Syntactic_Structure","gameDescription","createActivitySession","Mechanic","tutorial_path","activityUserId","sessionData","date_start","Date","id_activity_user","SPactivity","SPLayout","vOffset","offset","messages","SPActivitiesPage","pid","match","listContainer","SPCollectableInfoPage","currentSkin","scoreIcon","descriptionTitle","summary","getCollectableInfo","setCollectable","cid","getCollectable","itemSelected","SPCollectable","info","points","btnBuy","buySkin","SPCollection","collectables","Collectables","collections","SPCollectionsPage","getCollectionsList","setCollections","getCollections","SPPassButton","btnInv","bgWhite","onDeletePassClicked","onPassButtonClicked","cursor","faTrash","SPassword","passwordOptions","optionsSelected","onDeleteButtonClicked","onPasswordOptionClicked","po","os","added","words","filter","setPassword","SPLogin","username","onInputChanged","onForgotClicked","onLogin","onLoginClicked","bsSize","btnForgot","join","landing","SPLandingPage","alignItems","height","SFullScreen","fullRef","React","createRef","onClosed","onKeyHandler","onKeyDown","ref","tabIndex","document","addEventListener","enterFullScreen","exitFullScreen","removeEventListener","requestFullRequest","mozRequestFullScreen","webkitRequestFullScreen","fullscreenElement","mozFullScreenElement","webkitFullScreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullScreen","event","keyCode","FILE_SERVER_URL","SPPlayPage","gamePath","sid","build_path","avatarURL","outerHeight","outerWidth","redirectBack","hideAvatar","aid","history","goBack","getPatient","getPatients","patients","STActivityButtons","onCommentsClicked","onDeleteClicked","onPDFClicked","onReassignClicked","Activities_Sessions","mr","faCommentAlt","ml","delete","faTimesCircle","removeActivity","pdf_path","file","open","today","weekLater","setDate","getDate","activityData","date_to","updateActivity","activityId","structures","2","3","STSyntacticCircle","structure","bgColor","display","STActivity","tid","aimage","rightContainer","nameContainer","syntContainer","btnEvolution","STActivitiesPage","createActivityEnabled","titleContainer","btnDisabled","setPatient","STOption","inner","faCheckCircle","STField","optionRow","optionCol","STDynamicField","first","getOptions","fieldId","resetDynamicOptions","reset","r","setDynamicSelectedOptions","optionId","dynamic","required","requiredIds","getRequiredIds","getDynamicOptions","rIds","rField","buildDynamic","fieldData","mechanicId","STDynamic","mechanic","situations","times","reader","STStaticField","resetStaticOptions","getNextOptions","multichoice","addStaticSelectedOption","checkMinimun","setStaticSelectedOptions","static","minimum","getStaticOptions","buildStatic","categoryId","subcategoryId","sintacticId","stid","optionData","STStatic","category","subcategory","sintactic","vocabulary","STConfigurationPage","redirect","onCreateActivityClicked","buttonStatic","btnSelected","buttonDynamic","outline","createContainer","create","resetConfiguration","fields","configuration","buildConfiguration","createActivity","prepareAndCreateActivity","fieldsData","getLevels","_data","historical","mid","feedData","getMatches","getPhrases","getSecuences","registerLocale","es","SDatePicker","pickerRef","onDateChanged","showMonthYear","showYearDropdown","input","dateFormat","completeInput","locale","popperPlacement","showMonthYearPicker","showFullMonthYearPicker","scrollableYearDropdown","withPortal","readOnly","feedDate","setFeedDate","feedback","structuresData","Pronombre","Sustantivo","Adjetivo","Verbo","Artículo","Conjunción","Preposición","buildRecord","hits","totalWords","percentage","sort","b","order_phrase","chartOptions","doughnut","legend","labels","boxWidth","usePointStyle","tooltips","enabled","mode","callbacks","tooltipItem","datasets","toLowerCase","line","metric","align","scales","xAxes","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepSize","max","yLabel","tooltipItems","xLabel","stackBar","stacked","datasetIndex","word","right","total","parseInt","part","round","charts","STDoughnut","chartData","groupedPhrases","phrase","totalPhrases","hitsPercentage","buildPhrasesSummary","STLevel","level","id_session","mt20","setLevelTime","minutes","STLine","matches","records","variable","occurrence","attempts","errors","record","is_good","borderColor","buildMatchErrorsData","buildTimes","STPhrases","phrases","wordsContainer","j","checked","phrasePercentage","STStackBar","feeds","feed","includes","misses","wordTotal","hitTotal","missesPercentage","buildWordHitsData","STInGame","matchesData","Matches_Feeds","getWords","STLevels","levels","setLevels","Levels_Feeds","STTimes","sessionsData","Sessions_Feeds","STVocalization","phrasesData","Phrases_Feeds","grouped","lastPhrase","shift","id_phrase","groupPhrases","getStructures","mechanics","semantic_description","STFeedOptions","btnVocal","btnMecha","btnLevel","btnTimes","contWidth","btnWidth","span","setStateValues","STSession","onClicked","sessionSelected","last","time","getDifference","STSessions","onSessionClicked","STEvolution","getFeedback","STMechanics","onMechanicClicked","UncontrolledTooltip","placement","STHistorical","prevState","toISOString","getSessions","STFeedbackPage","setFeedData","setSessions","setFirstSessions","STLogin","STLandingPage","SSearch","searchContainer","searchIcon","faSearch","search","STPatient","onAssignPatientClicked","uinfo","createdAt","setCheck","Therapists_Patients","id_therapist","stopPropagation","checkTherapist","removePatient","createPatient","btnActive","therapistId","association","_association","_id_therapist","_id_patient","STPatientsPage","buttonMy","buttonAll","getPatientsList","setPatients","SAUser","identification","btnEdit","faEdit","SAUsersPage","toolsContainer","btnCreate","admin","getAllUsers","setUsers","SAImageLoader","encodedImage","canvasRef","imageRef","onFileChanged","onFileReaderLoaded","onImageLoaded","faImage","hiddenImage","hidden","btnFile","for","files","fileReader","FileReader","readAsDataURL","onload","result","scale","getContext","drawImage","canvas","toDataURL","toBlob","SCheckField","SDateField","SSelectField","opt","genders","SAUserForm","active","birthday_date","id_role","update","hasErrors","checkPassword","wordsSet","notInSet","checkUserFields","buildUserData","onSave","SAUpdateUserPage","uid","formContainer","prepareUserForUpdate","getUserToUpdate","formData","uploadProfileImage","res","register","App","calculateVOffset","setWindowSize","Container","fluid","exact","innerWidth","init","setVOffset","setWindowWidth","initialState","activityReducer","action","activitiesForRemoval","updatedActivity","activitiesForUpdate","PATIENT_TOKEN","THERAPIST_TOKEN","getItem","authReducer","avatarReducer","collectionReducer","_skinId","_collectable","_Skins","configurationReducer","connectionReducer","dynamicReducer","feedbackReducer","patientReducer","_patient","_patients","_Therapists","id_patient","staticReducer","uiReducer","userReducer","allReducers","combineReducers","middleware","thunk","composedEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bf9e78f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SInfoPanel_container__9gJML\",\"infoText\":\"SInfoPanel_infoText__19t9A\",\"label\":\"SInfoPanel_label__2j784\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgWhite\":\"SPPassButton_bgWhite__5Ltrk\",\"btn\":\"SPPassButton_btn__194iE\",\"btnInv\":\"SPPassButton_btnInv__1o0Ms\",\"icon\":\"SPPassButton_icon__3VFz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STField_container__kHP5P\",\"optionCol\":\"STField_optionCol__2DSLX\",\"optionRow\":\"STField_optionRow__2-rBu\",\"title\":\"STField_title__2uhn3\",\"subtitle\":\"STField_subtitle__ZguRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"SComments_comment__2BuSV\",\"commentContainer\":\"SComments_commentContainer__2OKNy\",\"container\":\"SComments_container__3G_Ox\",\"date\":\"SComments_date__1ookR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"SPasswordRecover_btnContainer__3gMeU\",\"container\":\"SPasswordRecover_container__2-BNE\",\"doneMessage\":\"SPasswordRecover_doneMessage__O9IDS\",\"infoText\":\"SPasswordRecover_infoText__1bbvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFooterBar_container__1gSB7\",\"copyright\":\"SFooterBar_copyright__ESh8s\",\"innerContainer\":\"SFooterBar_innerContainer__1lM3b\",\"logo\":\"SFooterBar_logo__2D-6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectionsPage_container__3W7c6\",\"score\":\"SPCollectionsPage_score__3fwFX\",\"scoreIcon\":\"SPCollectionsPage_scoreIcon__1VAHF\",\"title\":\"SPCollectionsPage_title__auwrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"SPCollection_col__2K7XX\",\"container\":\"SPCollection_container__27A6j\",\"rowContainer\":\"SPCollection_rowContainer__29q42\",\"title\":\"SPCollection_title__3Uf03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STOption_container__2b_7b\",\"inner\":\"STOption_inner__1PEEH\",\"name\":\"STOption_name__oY1xP\",\"selected\":\"STOption_selected__14b_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marginTop\":\"SSearch_marginTop__lV0l0\",\"search\":\"SSearch_search__BEsUo\",\"searchContainer\":\"SSearch_searchContainer__3Dpat\",\"searchIcon\":\"SSearch_searchIcon__3B77W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnCreate\":\"SAUsersPage_btnCreate__3E2Im\",\"listContainer\":\"SAUsersPage_listContainer__KhrhP\",\"title\":\"SAUsersPage_title__ePhGC\",\"toolsContainer\":\"SAUsersPage_toolsContainer__2f4UM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAUpdateUserPage_container__33K79\",\"formContainer\":\"SAUpdateUserPage_formContainer__2_Iev\",\"title\":\"SAUpdateUserPage_title__zc6GE\",\"userData\":\"SAUpdateUserPage_userData__1NyED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SModal_body__KRael\",\"modal\":\"SModal_modal__EefRS\",\"title\":\"SModal_title__rzR2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"absolute\":\"SVideo_absolute__39LAH\",\"container\":\"SVideo_container__LFvgA\",\"video\":\"SVideo_video__2EZSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeatures_container__TuY4d\",\"innerContainer\":\"SFeatures_innerContainer__1T4yv\",\"title\":\"SFeatures_title__2D6NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STLayout_container__3lOal\",\"outerContainer\":\"STLayout_outerContainer__nbEQl\",\"rowContainer\":\"STLayout_rowContainer__ObmR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPLayout_container__3A-ua\",\"outerContainer\":\"SPLayout_outerContainer__1BQ8D\",\"rowContainer\":\"SPLayout_rowContainer__2WCxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"SPassword_btnContainer__1l-cK\",\"container\":\"SPassword_container__2IKTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STMechanics_btn__Tqd2i\",\"container\":\"STMechanics_container__1tM1K\",\"selected\":\"STMechanics_selected__2D98J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SEmpty_container__17HkQ\",\"text\":\"SEmpty_text__7_-8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel\":\"STAvatarPanel_carousel__13Etq\",\"container\":\"STAvatarPanel_container__1VzPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SCarousel_border__23GFp\",\"style\":\"SCarousel_style__4G1i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAvatarItem_container__SylU4\",\"image\":\"SAvatarItem_image__GThs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"SPActivitiesPage_listContainer__1zQ0g\",\"title\":\"SPActivitiesPage_title__st4Q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STFeedbackPage_container__3IMrm\",\"title\":\"STFeedbackPage_title__cOZYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completeInput\":\"SDatePicker_completeInput__3Qnnh\",\"input\":\"SDatePicker_input__186S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"SMenuLink_style__3mouR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnClose\":\"SPPlayPage_btnClose__3bovR\",\"closeContainer\":\"SPPlayPage_closeContainer__prnKn\",\"container\":\"SPPlayPage_container__1JXN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STEvolution_container__1JFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STSessions_container__tZ9Rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STHistorical_container__3XXqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3RhdX\",\"description\":\"Charts_description__2a5hw\",\"mt20\":\"Charts_mt20__3ckh6\",\"percentage\":\"Charts_percentage__bjF4d\",\"phrasePercentage\":\"Charts_phrasePercentage__vJ19C\",\"score\":\"Charts_score___ZO4Z\",\"subtitle\":\"Charts_subtitle__15rOk\",\"title\":\"Charts_title__3d5vo\",\"word\":\"Charts_word__2sd5u\",\"wordsContainer\":\"Charts_wordsContainer__1Nt_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STPatient_btn__2j08s\",\"btnActive\":\"STPatient_btnActive__1pd4a\",\"link\":\"STPatient_link__tNTSf\",\"container\":\"STPatient_container__2X2DS\",\"height\":\"STPatient_height__1E83-\",\"padding\":\"STPatient_padding__T-Vv2\",\"thumb\":\"STPatient_thumb__1_vlU\",\"uimage\":\"STPatient_uimage__3am3r\",\"uinfo\":\"STPatient_uinfo__2X0Mb\",\"uname\":\"STPatient_uname__v9FdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STACustomizer_btn__36HiN\",\"col\":\"STACustomizer_col__3fIsC\",\"container\":\"STACustomizer_container__3fiR_\",\"header\":\"STACustomizer_header__2M7hK\",\"rounded\":\"STACustomizer_rounded__3mSP5\",\"selected\":\"STACustomizer_selected__1PA7P\",\"title\":\"STACustomizer_title__90vX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivitiesPage_container__Dkttc\",\"btnDisabled\":\"STActivitiesPage_btnDisabled__2yMps\",\"listContainer\":\"STActivitiesPage_listContainer__3H82W\",\"link\":\"STActivitiesPage_link__Zp_iB\",\"title\":\"STActivitiesPage_title__3hloJ\",\"titleContainer\":\"STActivitiesPage_titleContainer__15GGo\",\"btn\":\"STActivitiesPage_btn__10Nfo\",\"btnContainer\":\"STActivitiesPage_btnContainer___q4t_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SHero_btn__ed6WQ\",\"btnContainer\":\"SHero_btnContainer__1PllE\",\"container\":\"SHero_container__3qLwg\",\"innerContainer\":\"SHero_innerContainer__1OoLy\",\"link\":\"SHero_link__2NUmS\",\"outerContainer\":\"SHero_outerContainer__3f7_s\",\"subtitle\":\"SHero_subtitle__eo5s7\",\"title\":\"SHero_title__qCU9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivity_container__r4OSJ\",\"date\":\"STActivity_date__IsoC9\",\"description\":\"STActivity_description__cO8RH\",\"btnEvolution\":\"STActivity_btnEvolution__3bVYL\",\"aimage\":\"STActivity_aimage__1FOej\",\"innerContainer\":\"STActivity_innerContainer__1b6Cz\",\"nameContainer\":\"STActivity_nameContainer__2xVy_\",\"rightContainer\":\"STActivity_rightContainer__3nmb0\",\"syntContainer\":\"STActivity_syntContainer__AsPHV\",\"title\":\"STActivity_title__1HtrQ\"};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Actividades */\r\nexport const REMOVE_ACTIVITY = 'REMOVE_ACTIVITY';\r\nexport const SET_ACTIVITIES = 'SET_ACTIVITIES';\r\nexport const SET_ACTIVITY = 'SET_ACTIVITY';\r\nexport const SET_SELECTED_SESSION = 'SET_SELECTED_SESSION';\r\nexport const SET_SESSIONS = 'SET_SESSIONS';\r\nexport const UPDATE_ACTIVITY = 'UPDATE_ACTIVITY';\r\n\r\n/** Auth */\r\nexport const SET_PATIENT_TOKEN = 'SET_PATIENT_TOKEN';\r\nexport const SET_THERAPIST_TOKEN = 'SET_THERAPIST_TOKEN';\r\n\r\n/** Avatar */\r\nexport const SET_AVATAR_MESSAGE = 'SET_AVATAR_MESSAGE';\r\nexport const SET_AVATAR_VARIATION = 'SET_AVATAR_VARIATION';\r\nexport const SET_AVATAR_VARIATIONS = 'SET_AVATAR_VARIATIONS';\r\n\r\n/** Configuración */\r\nexport const RESET_CONFIGURATION = 'RESET_CONFIGURATION';\r\nexport const SET_CONFIGURATION = 'SET_CONFIGURATION';\r\n\r\n/** Configuración dinámica */\r\nexport const RESET_DYNAMIC_OPTIONS = 'RESET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_OPTIONS = 'SET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_SELECTED_OPTIONS = 'SET_DYNAMIC_SELECTED_OPTIONS';\r\n\r\n/** Configuración estática */\r\nexport const ADD_STATIC_SELECTED_OPTION = 'ADD_STATIC_SELECTED_OPTION';\r\nexport const RESET_STATIC_OPTIONS = 'RESET_STATIC_OPTIONS';\r\nexport const SET_STATIC_OPTIONS = 'SET_STATIC_OPTIONS';\r\nexport const SET_STATIC_SELECTED_OPTIONS = 'SET_STATIC_SELECTED_OPTIONS';\r\n\r\n/** Colecciones */\r\nexport const SET_COLLECTIONS = 'SET_COLLECTIONS';\r\nexport const SET_COLLECTABLE = 'SET_COLLECTABLE';\r\nexport const SET_USER_SKINS_OWNED = 'SET_USER_SKINS_OWNED';\r\nexport const SET_USER_SKIN_OWNED = 'SET_USER_SKIN_OWNED';\r\n\r\n/** Conexión */\r\nexport const SET_CHECK_SERVER_STATUS = 'SET_CHECK_SERVER_STATUS';\r\nexport const SET_CONNECTED_ID = 'SET_CONNECTED_ID';\r\nexport const SET_CONNECT_SOCKET = 'SET_CONNECT_SOCKET';\r\n\r\n/** Feedback */\r\nexport const SET_FEEDBACK_DATA = 'SET_FEEDBACK_DATA';\r\nexport const SET_FEEDBACK_DATE = 'SET_FEEDBACK_DATE';\r\n\r\n/** Pacientes */\r\nexport const REMOVE_PATIENT = 'REMOVE_PATIENT';\r\nexport const SET_PATIENT = 'SET_PATIENT';\r\nexport const SET_PATIENTS = 'SET_PATIENTS';\r\nexport const SET_SELECTED_PATIENT = 'SET_SELECTED_PATIENT';\r\n\r\n/** UI */\r\nexport const SET_BAR = 'SET_BAR';\r\nexport const SET_FULLSCREEN = 'SET_FULLSCREEN';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\r\nexport const SET_PARALLAX = 'SET_PARALLAX';\r\nexport const SET_V_OFFSET = 'SET_V_OFFSET';\r\nexport const SET_WINDOW_WIDTH = 'SET_WINDOW_WIDTH';\r\nexport const SHOW_AVATAR = 'SHOW_AVATAR';\r\nexport const SHOW_CREATE_ACTIVITY_BUTTON = 'SHOW_CREATE_ACTIVITY_BUTTON';\r\nexport const SHOW_MOBILE_MENU = 'SHOW_MOBILE_MENU';\r\n\r\n/** User */\r\nexport const SET_USER = 'SET_USER';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_TO_UPDATE = 'SET_TO_UPDATE';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU\r\n} from './types';\r\n\r\n\r\nexport const setBar = (bar) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_BAR,\r\n        payload: { bar }\r\n    });\r\n}\r\n\r\nexport const setFullScreen = (fullScreen) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FULLSCREEN, \r\n        payload: { fullScreen }\r\n    });\r\n}\r\n\r\nexport const setModal = (modal) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_MODAL, \r\n        payload: { modal }\r\n    });\r\n}\r\n\r\nexport const setNotification = (notification) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_NOTIFICATION, \r\n        payload: { notification }\r\n    });\r\n}\r\n\r\nexport const setParallax = (parallax) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PARALLAX,\r\n        payload: { parallax }\r\n    });\r\n}\r\n\r\nexport const setVOffset = (vOffset) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_V_OFFSET, \r\n        payload: { vOffset }\r\n    });\r\n}\r\n\r\nexport const setWindowWidth = (width) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_WINDOW_WIDTH, \r\n        payload: { width }\r\n    });\r\n}\r\n\r\nexport const showAvatar = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_AVATAR, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showCreateActivityButton = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_CREATE_ACTIVITY_BUTTON, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showMobileMenu = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_MOBILE_MENU, \r\n        payload: { show }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from './types';\r\n\r\nconst gameServerURL = process.env.REACT_APP_FILE_SERVER;\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const ping = (game = false) => async () => {\r\n    const url = `${game ? gameServerURL : serverURL}/ping`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n        \r\n        return { error, message, status };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, status: 500 };\r\n    }\r\n}\r\n\r\nexport const setCheckServerStatus = (check) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CHECK_SERVER_STATUS, \r\n        payload: { check }\r\n    });\r\n}\r\n\r\nexport const setConnectedId = (connectedId) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECTED_ID, \r\n        payload: { connectedId }\r\n    });\r\n}\r\n\r\nexport const setConnectSocket = (connectSocket) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECT_SOCKET, \r\n        payload: { connectSocket }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Definición de la clase */\r\nclass Speaker {\r\n\r\n    /** Constructor */\r\n    constructor() {\r\n        if (Speaker.instance instanceof Speaker)\r\n            return Speaker.instance;\r\n\r\n        this.synthesis = window.speechSynthesis;\r\n        this.utterance = null;\r\n        this.utteranceIndex = 0;\r\n        this.voice = null;\r\n        Speaker.instance = this;\r\n    }\r\n\r\n    async init(lang) {\r\n        const { voices } = await this.setVoices();   \r\n        voices.forEach(voiceS => {\r\n            if (voiceS.lang === lang) {\r\n                this.voice = voiceS;\r\n            }\r\n        });\r\n    }\r\n\r\n    isSpeaking() {\r\n        return this.synthesis.speaking;\r\n    }\r\n\r\n    setVoices() {\r\n        return new Promise((resolve) => {\r\n            const timer = setInterval(() => {\r\n                const voices = this.synthesis.getVoices();\r\n                \r\n                if (voices.length !== 0) {\r\n                    resolve({ voices });\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    setVolume(volume) {\r\n        // Cancelar el utterance original\r\n        this.synthesis.cancel();\r\n        // Encontrar el espacio anterior\r\n        //const previousSpace = this.utterance.text.lastIndexOf(' ', this.utteranceIndex);\r\n        // Obtener del mensaje original el texto que hace falta por decir\r\n        const remainingMessage = this.utterance.text.slice(this.utteranceIndex);\r\n        // Hacer que el Speaker diga la parte del texto que falta\r\n        this.utterance = null;\r\n        this.speak(remainingMessage, volume);\r\n    }\r\n\r\n    speak(message, volume) {\r\n        if (!message)\r\n            return;\r\n        \r\n        this.utterance = new SpeechSynthesisUtterance(message);\r\n        this.utterance.lang = 'es-MX';\r\n        this.utterance.voice = this.voice;\r\n        this.utterance.rate = 1;\r\n        this.utterance.pitch = 1;\r\n        this.utterance.volume = volume;\r\n\r\n        this.utterance.onboundary = (e) => {\r\n            if (e.name === 'word') this.utteranceIndex = e.charIndex;\r\n        };\r\n\r\n        this.synthesis.speak(this.utterance, () => {\r\n            this.utterance = null;\r\n        });\r\n    }\r\n}\r\n\r\n/** Transforma la clase en un singleton */\r\nconst SpeakerSingleton = new Speaker();\r\nexport default SpeakerSingleton; ","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nclass Messenger {\r\n\r\n    constructor() {\r\n        /** Singleton */\r\n        if (Messenger.instance instanceof Messenger) \r\n            return Messenger.instance;\r\n\r\n        this.socketURL = process.env.REACT_APP_SOCKET_URL;\r\n        this.socketClient = null;\r\n        this.heartbeat = null;\r\n        Messenger.instance = this;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Conectar el socket al servidor */\r\n    connectSocket(userId, context) {\r\n        if (!this.socketClient) {\r\n            this.socketClient = socketIOClient.connect(this.socketURL, {\r\n                reconnection: false\r\n            });\r\n            /** Enviar un mensaje para registrar el usuario */\r\n            this.socketClient.emit('register', { userId });\r\n            this.handleSocketEvents(context);\r\n        }\r\n    }\r\n\r\n    closeSocket(context) {\r\n        if (this.socketClient) {\r\n            this.socketClient = null;\r\n            context.props.setConnectedId(null);\r\n            /** Cuado se presenta un error de conexión */\r\n            if (context.props.connectSocket)\r\n                context.props.setConnectSocket(false);\r\n        }\r\n    }\r\n\r\n    /** Desconectar el socket del servidor */\r\n    disconnectSocket(userId) {\r\n        if (this.socketClient) {\r\n            /** Enviar un mensaje para eliminar al usuario del registro */\r\n            this.socketClient.emit('unregister', { userId });\r\n            this.socketClient.disconnect();\r\n        }\r\n    }\r\n\r\n    /** Manejar la conexión del socket */\r\n    handleConnection(connection, context) {\r\n        const { connectSocket, connectedId } = connection;\r\n        if (connectSocket) \r\n            this.connectSocket(connectedId, context);\r\n        else\r\n            this.disconnectSocket(connectedId);\r\n    }\r\n\r\n    /** Manejar todos los eventos detectados por el socket */\r\n    handleSocketEvents(context) {\r\n        this.socketClient.on('disconnect', () => {\r\n            console.log('Socket desconectado!');\r\n            this.closeSocket(context);\r\n            clearInterval(this.heartbeat);\r\n        });\r\n\r\n        this.socketClient.on('error', () => {\r\n            this.closeSocket(context);\r\n        });\r\n\r\n        /** Eventos propios */\r\n        this.socketClient.on('avatar_message', (message) => {\r\n            console.log(message);\r\n        });\r\n\r\n        this.socketClient.on('beat', () => {\r\n            console.log('beat');\r\n        });\r\n\r\n        this.socketClient.on('exit_game', (message) => {\r\n            console.log(message);\r\n            context.props.setFullScreen(false);\r\n        });\r\n\r\n        this.socketClient.on('registered', () => {\r\n            this.heartbeat = setInterval(() => {\r\n                this.socketClient.emit('heart');\r\n            }, 3000);\r\n        });\r\n    }\r\n}\r\n\r\nconst MessengerSingleton = new Messenger();\r\nexport default MessengerSingleton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nclass ServerStatus {\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.interval = null;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Verificar el estado del servidor */\r\n    checkServerStatus(check, game, Messenger) {\r\n        if (check) {\r\n            /** Lanzar un intervalo de 3 segundos para verificar */\r\n            this.interval = setInterval(async () => {\r\n                const { error, status } = await this.context.props.ping(game);\r\n                const errorData = error ? { error, status } : null;\r\n\r\n                if (game) \r\n                    this.handleGameServerStatus();\r\n                else\r\n                    this.handleServerStatus(errorData, Messenger);\r\n            }, \r\n            3000);\r\n        }\r\n        else\r\n            this.clearInterval();\r\n    }\r\n\r\n    /** Detener el intervalo */\r\n    clearInterval() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = null;\r\n        }\r\n    }\r\n\r\n    handleServerStatus(error, Messenger) {\r\n        const { props } = this.context;\r\n        const { connection, ui } = props;\r\n\r\n        if (error) {\r\n            const { status } = error;\r\n                        \r\n            if (status === 500) {\r\n                const message = '¡El servidor está desconectado!';\r\n                if (!ui.notification)\r\n                    props.setNotification({ \r\n                        error: true, \r\n                        message, \r\n                        serverStatus: true, \r\n                        slide: false \r\n                    });\r\n            }\r\n            else if (status === 401)\r\n                console.log('¡Token inválido!');\r\n        }\r\n        else {\r\n            Messenger.handleConnection(connection, this.context);\r\n            if (ui.notification && ui.notification.serverStatus) \r\n                props.setNotification(null);\r\n        }\r\n    }\r\n\r\n    handleGameServerStatus() {\r\n\r\n    }\r\n}\r\n\r\nexport default ServerStatus;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAvatar.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nconst DEFAULT_AVATAR = process.env.REACT_APP_DEFAULT_AVATAR;\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SAvatar extends Component {\r\n    render() {\r\n        const { soundEnabled, showMessage } = this.state;\r\n        const avatarImage = this.props.auth.pacienteToken ? this.state.avatar_img : DEFAULT_AVATAR;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img \r\n                    className={styles.image}\r\n                    alt=''\r\n                    src={avatarImage} />\r\n                <div className={`flex ${styles.buttons}`}>\r\n                    <Button className='ghost-btn' onClick={this.onSoundClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/sound_${soundEnabled ? 'enabled' : 'disabled'}.png`} />\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onMessageClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/message_${showMessage ? 'enabled' : 'disabled'}.png`} />\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onRepeatClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={'/images/other/repeat.png'} />\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.message}>\r\n                    { showMessage && this.props.avatar.message }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { avatar_img: DEFAULT_AVATAR, soundEnabled: true, showMessage: true };\r\n\r\n        this.onMessageClicked = this.onMessageClicked.bind(this);\r\n        this.onRepeatClicked = this.onRepeatClicked.bind(this);\r\n        this.onSoundClicked = this.onSoundClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTherapistAvatar();\r\n        this.speak();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        this.setTherapistAvatar();\r\n        if (prevProps.avatar.message !== this.props.avatar.message) {\r\n            this.speak();\r\n        }\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMessageClicked() {\r\n        this.setState({ showMessage: !this.state.showMessage });\r\n    }\r\n\r\n    onRepeatClicked() {\r\n        this.speak();\r\n    }\r\n\r\n    onSoundClicked() {\r\n        this.setState({ soundEnabled: !this.state.soundEnabled }, () => {\r\n            if (Speaker.isSpeaking()) {\r\n                const volume = this.state.soundEnabled ? 1 : 0;\r\n                Speaker.setVolume(volume);\r\n            }\r\n        });\r\n    }\r\n\r\n    setTherapistAvatar() {\r\n        const { user } = this.props;\r\n        if (user && user.Therapists) {\r\n            const therapists = Object.values(user.Therapists);\r\n            if (therapists.length > 0) {\r\n                const therapist = therapists[0];\r\n                const avatarVariationImage = SERVER_URL + therapist.Avatar_Variation.img_path;\r\n                if (this.state.avatar_img !== avatarVariationImage) {\r\n                    this.setState({ avatar_img: avatarVariationImage });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    speak() {\r\n        const volume = this.state.soundEnabled ? 1 : 0;\r\n        Speaker.speak(this.props.avatar.message, volume);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        avatar: state.avatar,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SAvatar);","import SAvatar from './SAvatar';\r\nexport default SAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SBubbleNotification.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '@actions/ui';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDizzy, faGrinBeam } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SBubbleNotification extends Component {\r\n    render() {\r\n        const { error, message, slide } = this.props.notification;\r\n        const { parallax, windowWidth } = this.props;\r\n\r\n        const faIcon = error ? faDizzy : faGrinBeam;\r\n        const state = error ? styles.error : styles.success;\r\n\r\n        const container = windowWidth >= 768 ? \r\n                          styles.containerDesktop : styles.containerMobile;\r\n\r\n        let finalSlide = windowWidth >= 768 ? -368 : -200;\r\n        if (!slide)\r\n            finalSlide = windowWidth >= 768 ?  -1 : 0;\r\n        \r\n        const border = parallax ? '': styles.border;\r\n        \r\n        return(\r\n            <div \r\n                className={`${styles.container} ${container} ${border} flex`}\r\n                style={{ '--finalSlide': `${finalSlide}px`}}>\r\n                <div className={`flex ${styles.iconContainer} ${state}`}>\r\n                    <FontAwesomeIcon icon={faIcon} size='3x' />\r\n                </div>\r\n                <span className={styles.message}>\r\n                    { message }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { slide } = this.props.notification;\r\n        if (slide)\r\n            setTimeout(() => {\r\n                this.props.setNotification(null);\r\n            }, 6001);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setNotification\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.ui.notification,\r\n        parallax: state.ui.parallax,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(SBubbleNotification);","import SBubbleNotification from './SBubbleNotification';\r\nexport default SBubbleNotification;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styles from './SNav.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Nav,\r\n    NavbarToggler,\r\n    NavItem\r\n} from 'reactstrap';\r\n\r\nconst SNav = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () =>  {\r\n        if (props.windowWidth <= 768)\r\n            setIsOpen(!isOpen);\r\n    }\r\n\r\n    return(\r\n        <span className={styles.container}>\r\n            <NavbarToggler className={styles.toggler} onClick={toggle} />\r\n            <Collapse className={styles.collapse} isOpen={isOpen} navbar>\r\n                <Nav className={styles.nav} navbar>\r\n                    <NavItem className={styles.navItem}>\r\n                        <Link\r\n                            className={styles.link}\r\n                            onClick={toggle}\r\n                            to='/'>\r\n                            Inicio\r\n                        </Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SNav;","import SNav from './SNav';\r\nexport default SNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const PATIENT = 'paciente';\r\nexport const THERAPIST = 'terapeuta';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMenuHeader.module.css';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SMenuHeader = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            {\r\n                props.user.profile_img ?\r\n                <img\r\n                    alt='' \r\n                    className={styles.image}\r\n                    src={`${serverURL}${props.user.profile_img}`} />\r\n                :\r\n                <div \r\n                    className={`flex ${styles.image} ${styles.thumb}`} \r\n                    style={{ backgroundColor: props.user.color }}>\r\n                    { props.user.thumbnail_alias }\r\n                </div>\r\n            }\r\n            <span className={styles.name}>\r\n                { props.user.name } { props.user.last_name }\r\n            </span>\r\n            <span className={styles.email}>\r\n                { props.user.email }\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMenuHeader;","import SMenuHeader from './SMenuHeader';\r\nexport default SMenuHeader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from './types';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const login = (credentials, role) => async (dispatch) => {\r\n    const url = `${apiURL}/auth/login`;\r\n    credentials = { ...credentials, role };\r\n\r\n    try {\r\n        const response = await axios.post(url, { credentials });\r\n        const { data: { data, message, status }, headers } = response;\r\n\r\n        /** Obtener el token */\r\n        const token = status === 200 ? headers['auth-token'] : null;\r\n        const userId = status === 200 ? data.id : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n            payload: { token }\r\n        });\r\n        localStorage.setItem(`${role}Token`, token);\r\n            \r\n        return { error, message, userId };\r\n    }\r\n    catch (err) {\r\n        return { \r\n            error: true, \r\n            message: 'Hubo un error de conexión. Inténtalo más tarde...', \r\n            userId: null \r\n        };\r\n    }\r\n}\r\n\r\nexport const logout = (role) => (dispatch) => {\r\n    dispatch({\r\n        type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n        payload: { token: null }\r\n    });\r\n    localStorage.removeItem(`${role}Token`);\r\n}\r\n\r\nexport const register = (user) => async () => {\r\n    const url = `${apiURL}/auth/register`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { user });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenuLink.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '@actions/auth';\r\n\r\nclass SMenuLink extends Component {\r\n    render() {\r\n        return(\r\n            <Link\r\n                className={styles.style}\r\n                to={this.props.to}\r\n                onClick={this.onLinkClicked}>\r\n                {this.props.children}\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n        this.onLogout = this.onLogout.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        if (this.props.onClick)\r\n            this.props.onClick();\r\n        \r\n        if (this.props.type === 'logout')\r\n            this.onLogout();\r\n    }\r\n\r\n    onLogout() {\r\n        const { role } = this.props;\r\n        this.props.logout(role);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    logout,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SMenuLink);","import SMenuLink from './SMenuLink';\r\nexport default SMenuLink;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenu.module.css';\r\nimport {\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SMenu extends Component {\r\n    render() {\r\n        const { id, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <Dropdown\r\n                className={styles.container}\r\n                isOpen={this.state.isOpen}\r\n                toggle={this.toggle}>\r\n                <DropdownToggle className={`flex ghost-btn ${styles.toggle}`}>\r\n                    <span className={styles.name}>\r\n                        { this.props.user.name }\r\n                    </span>\r\n                    {\r\n                        this.props.user.profile_img ? \r\n                        <img \r\n                            alt=''\r\n                            className={styles.image}\r\n                            src={`${serverURL}${this.props.user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.image} ${styles.thumb}`}\r\n                            style={{ backgroundColor: this.props.user.color }}>\r\n                            { this.props.user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                </DropdownToggle>\r\n\r\n                <DropdownMenu className={styles.menu}>\r\n                    <DropdownItem header>\r\n                        <SMenuHeader user={this.props.user} />\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    {\r\n                        role === THERAPIST ?\r\n                        <span>\r\n                            <DropdownItem className={styles.item}>\r\n                                <SMenuLink to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                            </DropdownItem>\r\n                        </span>\r\n                        : null\r\n                    }\r\n                    <DropdownItem className={styles.item}>\r\n                        <SMenuLink \r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    toggle() {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMenu);","import SMenu from './SMenu';\r\nexport default SMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserNav.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SMenu from './SMenu';\r\n\r\nclass SUserNav extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.linksContainer}>\r\n                    {\r\n                        role === PATIENT ?\r\n                        <span>\r\n                            <Link\r\n                                className={styles.link} \r\n                                to={`/${role}/${id}/actividades`}>\r\n                                Actividades\r\n                            </Link>\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/colecciones`}>\r\n                                Colecciones\r\n                            </Link>\r\n                        </span>\r\n                        : \r\n                        <span>\r\n                            {is_admin && <Link\r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/admin`}>\r\n                                Administrar\r\n                            </Link>}\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/pacientes`}>\r\n                                Pacientes\r\n                            </Link>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.windowWidth >= 768 ?\r\n                    <SMenu />\r\n                    :\r\n                    <Button\r\n                        className='ghost-btn'\r\n                        onClick={this.onMenuButtonClicked}>\r\n                        {\r\n                            this.props.user.profile_img ? \r\n                            <div className={styles.uimage} />\r\n                            :\r\n                            <div\r\n                                className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                style={{ backgroundColor: this.props.user.color }}>\r\n                                { this.props.user.thumbnail_alias }\r\n                            </div>\r\n                        }\r\n                    </Button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onMenuButtonClicked = this.onMenuButtonClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMenuButtonClicked() {\r\n        this.props.showMobileMenu(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SUserNav);","import SUserNav from './SUserNav';\r\nexport default SUserNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SHeaderBar.module.css';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SNav from './SNav';\r\nimport SUserNav from './SUserNav';\r\n\r\nclass SHeaderBar extends Component {\r\n    render() {\r\n        const { bar } = this.props.ui;\r\n        let base = styles.bar;\r\n        if (bar === 'patient')\r\n            base = `${base} ${styles.patientBar}`;\r\n        else\r\n            base = `${base} ${styles.standardBar}`;\r\n\r\n        return(\r\n            <Navbar \r\n                className={base} \r\n                expand='lg'\r\n                fixed='top' \r\n                light>\r\n                <NavbarBrand className={styles.navbrand}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logo}\r\n                        src='/images/logo/logo.png' />\r\n                    SATReLO\r\n                </NavbarBrand>\r\n                {\r\n                    this.props.user !== null ?\r\n                    <SUserNav />\r\n                    :\r\n                    <SNav windowWidth={this.props.ui.windowWidth} />\r\n                }\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n/** Eementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SHeaderBar);","import SHeaderBar from './SHeaderBar';\r\nexport default SHeaderBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileAvatar.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nclass SMobileAvatar extends Component {\r\n    render() {\r\n        const { soundEnabled, showMessage } = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className='flex'>\r\n                    <div className={styles.image} />\r\n                    <p className={styles.message}>\r\n                        { showMessage && this.props.avatar.message }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className={`flex ${styles.buttons}`}>\r\n                    <Button className='ghost-btn' onClick={this.onSoundClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/sound_${soundEnabled ? 'enabled' : 'disabled'}.png`}/>\r\n                    </Button>\r\n                    <Button className={`ghost-btn ${styles.buttonMargin}`} onClick={this.onMessageClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/message_${showMessage ? 'enabled' : 'disabled'}.png`}/>\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onRepeatClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={styles.buttonIcon}\r\n                            src='/images/other/repeat.png' />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { soundEnabled: true, showMessage: true };\r\n        \r\n        this.onMessageClicked = this.onMessageClicked.bind(this);\r\n        this.onRepeatClicked = this.onRepeatClicked.bind(this);\r\n        this.onSoundClicked = this.onSoundClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.speak();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.avatar.message !== this.props.avatar.message)\r\n            this.speak();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMessageClicked() {\r\n        this.setState({ showMessage: !this.state.showMessage });\r\n    }\r\n\r\n    onRepeatClicked() {\r\n        this.speak();\r\n    }\r\n\r\n    onSoundClicked() {\r\n        this.setState({ soundEnabled: !this.state.soundEnabled });\r\n    }\r\n\r\n    speak() {\r\n        if (this.state.soundEnabled)\r\n            Speaker.speak(this.props.avatar.message);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        avatar: state.avatar\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMobileAvatar);","import SMobileAvatar from './SMobileAvatar';\r\nexport default SMobileAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileMenu.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nclass SMobileMenu extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Button\r\n                    onClick={this.onAnimatedCloseClicked}\r\n                    className={`ghost-btn ${styles.btn}`}>\r\n                </Button>\r\n\r\n                <div className={`${styles.menu} ${this.state.animation}`}>\r\n                    <SMenuHeader user={this.props.user} />\r\n                    <br/>\r\n                    <div className='h-delimiter'></div>\r\n                    <div className={styles.linksContainer}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/pacientes`}>\r\n                                    Pacientes\r\n                                </SMenuLink>\r\n                                {is_admin && <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/admin`}>\r\n                                    Administrar\r\n                                </SMenuLink>}\r\n                            </span>\r\n                            :\r\n                            <span>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked} \r\n                                    to={`/${role}/${id}/actividades`}>\r\n                                    Actividades\r\n                                </SMenuLink>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/colecciones`}>\r\n                                    Colecciones\r\n                                </SMenuLink>\r\n                            </span>\r\n                        }\r\n                        <SMenuLink\r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { animation: styles.menuAppear };\r\n        this.onAnimatedCloseClicked = this.onAnimatedCloseClicked.bind(this);\r\n        this.onSimpleCloseClicked = this.onSimpleCloseClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** \r\n     * Métodos encargados de cerrar el menú móvil\r\n     * Nota: Para el logout, el action showMobileMenu(false) se ubica\r\n     * en las páginas de login de cada rol debido a que el menú debe \r\n     * cerrarse antes de cambiar el usuario de la app a null, esto \r\n     * con el fin de evitar conflictos.\r\n     */\r\n    onAnimatedCloseClicked() {\r\n        this.setState({ animation: styles.menuDissapear }, () => {\r\n            setTimeout(() => {\r\n                this.props.showMobileMenu(false)\r\n            }, 210);\r\n        })\r\n    }\r\n\r\n    onSimpleCloseClicked() {\r\n        this.props.showMobileMenu(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SMobileMenu);","import SMobileMenu from './SMobileMenu';\r\nexport default SMobileMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nexport const getDatesDifference = (startDate, endDate) => {\r\n    const start = DateTime.fromISO(startDate);\r\n    const end = DateTime.fromISO(endDate);\r\n    const diff = end.diff(start, [ 'minutes' ]).toObject();\r\n\r\n    return diff;\r\n}\r\n\r\nexport const getFormattedDate = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    return luxDate.setLocale('co').toLocaleString(DateTime.DATE_FULL);\r\n}\r\n\r\nexport const getDateBoundaries = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    const startDate = luxDate.startOf('month').toISODate();\r\n    const endDate = luxDate.endOf('month').toISODate();\r\n    \r\n    return { startDate, endDate };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SEmpty.module.css';\r\n\r\nconst SEmpty = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <p className={styles.text} style={{ color: props.color ? props.color: 'darkgray' }}>\r\n                { props.children }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SEmpty;","import SEmpty from './SEmpty';\r\nexport default SEmpty;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst SSpinner = (props) => {\r\n    return(\r\n        <div\r\n            style={{\r\n                marginTop: '30px',\r\n                padding: '5px',\r\n                textAlign: 'center',\r\n                width: '100%' \r\n            }}>\r\n            <Spinner color={props.color} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSpinner;","import SSpinner from './SSpinner';\r\nexport default SSpinner;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SComments.module.css';\r\nimport  { getFormattedDate } from '@utils/date&time';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SComments extends Component {\r\n  render() {\r\n    return(\r\n      <div className={`${styles.container}`}>\r\n        {\r\n          this.state.loading ?\r\n          <SSpinner />\r\n          :\r\n          this.state.comments && this.state.comments.length > 0 ?\r\n          this.state.comments.map((comment, i) => {\r\n            const date = comment.date.split('T')[0];\r\n            return(\r\n              <div className={styles.commentContainer} key={i}>\r\n                <div className={styles.date}>\r\n                  Comentario enviado el {getFormattedDate(date)}\r\n                </div>\r\n                <div className={styles.comment}>\r\n                  {comment.comment}\r\n                </div>\r\n                { comment.audio && <audio src={`${SERVER_URL}${comment.audio}`} \r\n                                          type='video.webm'\r\n                                          controls\r\n                                          controlsList='nodownload' /> }\r\n              </div>\r\n            );\r\n          })\r\n          : \r\n          <SEmpty>\r\n            No se encontraron comentarios para esta actividad.\r\n          </SEmpty>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { comments: null, loading: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCommentsFromSessions();\r\n  }\r\n\r\n  /** Métodos extra */\r\n  getCommentsFromSessions() {\r\n    this.setState({ loading: true });\r\n\r\n    /** Obtener los mensajes a partir de las sesiones */\r\n    const sessions = Object.values(this.props.data);\r\n    let comments = [];\r\n    sessions.forEach(session => {\r\n      const { audio, comment, date_end } = session;\r\n      if (audio || (comment && comment.trim() !== ''))\r\n        comments.push({ audio, comment, date: date_end });\r\n    });\r\n\r\n    this.setState({ comments, loading: false });\r\n  }\r\n}\r\n\r\nexport default SComments;","import SComments from './SComments';\r\nexport default SComments;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    REMOVE_ACTIVITY,\r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY,\r\n    SET_SELECTED_SESSION, \r\n    SET_SESSIONS,\r\n    UPDATE_ACTIVITY,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear una actividad */\r\nexport const createActivity = (configuration) => async () => {\r\n    const url = `${apiURL}/assembler/`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { configuration });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Crear la sesion de una actividad */\r\nexport const createActivitySession = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/session`;\r\n    const sessionData = {\r\n        date_start: new Date(),\r\n        id_activity_user: activityUserId\r\n    };\r\n\r\n    try {\r\n        const response = await axios.post(url, { session: sessionData });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { data, error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la información de una actividad */\r\nexport const getActivity = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activity = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_ACTIVITY, \r\n            payload: { activity }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener actividades */\r\nexport const getActivities = (patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${patientId}/activities`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activities = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_ACTIVITIES, \r\n            payload: { activities }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener las sesiones de la actividad de un usuario */\r\nexport const getSessions = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activityUserId}/sessions`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const sessions = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SESSIONS, \r\n            payload: { sessions }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}\r\n\r\nexport const removeActivity = (activityId) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activityId}`;\r\n\r\n    try {\r\n        const response = await axios.delete(url);\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        if (!error) {\r\n            dispatch({\r\n                type: REMOVE_ACTIVITY,\r\n                payload: { id: activityId }\r\n            });\r\n        }\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setActivity = (activity) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_ACTIVITY, \r\n        payload: { activity }\r\n    });\r\n}\r\n\r\nexport const setActivities = (activities) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_ACTIVITIES,\r\n        payload: { activities }\r\n    });\r\n}\r\n\r\nexport const setSession = (session) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_SESSION, \r\n        payload: { session }\r\n    });\r\n}\r\n\r\nexport const setSessions = (sessions) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SESSIONS, \r\n        payload: { sessions }\r\n    });\r\n}\r\n\r\nexport const updateActivity = (activity) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activity.id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { activity });\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        if (!error) {\r\n            dispatch({\r\n                type: UPDATE_ACTIVITY,\r\n                payload: { activity: data }\r\n            });\r\n        }\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const updateActivitySession = (session) => async (dispatch) => {\r\n    const { id } = session;\r\n    const url = `${apiURL}/session/${id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { session });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Subir un audio */\r\nexport const uploadAudioFile = (audioFile, userId) => async() => {\r\n  const url = `${apiURL}/plugin/upload-audio`;\r\n\r\n  try {\r\n    const form = new FormData();\r\n    form.append('file', audioFile, userId);\r\n\r\n    const response = await axios.post(url, form, {\r\n      headers: { \"Content-Type\": 'multipart/form-data' }\r\n    });\r\n    const { data: { data, message, status }} = response;\r\n    const error = status !== 200;\r\n\r\n    return { data, error, message };\r\n  }\r\n  catch (err) {\r\n    return { error: true, message: err };\r\n  }\r\n}\r\n\r\n/** Subir una imagen */\r\nexport const uploadProfileImage = (image, name) => async () => {\r\n  const url = `${apiURL}/plugin/upload-profile-image`;\r\n\r\n  try {\r\n    const form = new FormData();\r\n    form.append('file', image, name);\r\n\r\n    const response = await axios.post(url, form, {\r\n      headers: { \"Content-Type\": 'multipart/form-data;' }\r\n    });\r\n    const { data: { data, message, status }} = response;\r\n    const error = status !== 200;\r\n\r\n    return { data, error, message };\r\n  }\r\n  catch (err) {\r\n    return { error: true, message: err };\r\n  }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Button, FormGroup, Spinner } from 'reactstrap';\r\n\r\nconst SSubmitField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Button\r\n                className={props.className}\r\n                style={{ minWidth: 90 }}\r\n                onClick={(e) => { props.onClick(e); }}>\r\n                {\r\n                    props.loading ?\r\n                    <Spinner color='light' size='sm' />\r\n                    :\r\n                    <span>{props.children}</span>\r\n                }\r\n            </Button>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSubmitField;","import SSubmitField from './SSubmitField';\r\nexport default SSubmitField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SNewComment.module.css';\r\nimport { Button, Form, FormFeedback, FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { updateActivitySession } from '@actions/activity';\r\nimport { uploadAudioFile } from '@actions/plugin';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SNewComment extends Component {\r\n    render() {\r\n        const recordState = this.state.audio ? styles.recorded : \r\n                            this.state.recording ? styles.recording : styles.notRecording;\r\n        return(\r\n            <Form>\r\n                <FormGroup className='mt-2'>\r\n                    <Input \r\n                        type='textarea'\r\n                        onChange={this.onTextChanged}\r\n                        placeholder='Escribe tu comentario aquí...' \r\n                        rows='8' \r\n                        style={{ resize: 'none' }}\r\n                        invalid={this.state.error !== null} />\r\n                    {this.state.error && \r\n                      <FormFeedback>{this.state.error}</FormFeedback>}\r\n                </FormGroup>\r\n                <p className={styles.microphoneText}>\r\n                    Si quieres puedes grabar tu comentario. Para hacerlo, presiona el micrófono y habla.\r\n                </p>\r\n                <div className={`flex ${styles.recorderContainer}`}>\r\n                    <Button className='ghost-btn' onClick={this.onRecordAudioClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={`${styles.microphone} ${recordState}`}\r\n                            src='/images/other/microphone.png' />\r\n                    </Button>\r\n                    { this.state.audio && <audio src={URL.createObjectURL(this.state.audio)}\r\n                                                 style={{ marginLeft: 7 }}\r\n                                                 type='video.webm'\r\n                                                 controls\r\n                                                 controlsList='nodownload' /> }\r\n                </div>\r\n                <div className='flex mt-4' style={{ justifyContent: 'center' }}>\r\n                    <SSubmitField\r\n                        className='primary-btn w-100'\r\n                        loading={this.state.loading}\r\n                        onClick={this.onSaveClicked}>\r\n                        Guardar\r\n                    </SSubmitField>\r\n                    <FormGroup>\r\n                        <Button \r\n                            className='simple-btn ml-2'\r\n                            onClick={this.onCancelClicked}>\r\n                            Cancelar\r\n                        </Button>\r\n                    </FormGroup>\r\n                </div>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audio: null,\r\n            comment: '',\r\n            error: null,\r\n            loading: false,\r\n            recording: false,\r\n        };\r\n\r\n        this.onCancelClicked = this.onCancelClicked.bind(this);\r\n        this.onTextChanged = this.onTextChanged.bind(this);\r\n        this.onRecordAudioClicked = this.onRecordAudioClicked.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onCancelClicked() {\r\n        this.props.onCancelClicked();\r\n    }\r\n\r\n    onTextChanged(e) {\r\n        this.setState({ comment: e.target.value, error: null });\r\n    }\r\n\r\n    async onRecordAudioClicked() {\r\n        if (!this.state.recording) {\r\n            this.setState({ audio: null });\r\n            /** Iniciar los componentes para obtener el audio */\r\n            this.audioChunks = [];\r\n            this.stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            this.recorder = new MediaRecorder(this.stream);\r\n            this.recorder.ondataavailable = e => {\r\n                this.audioChunks.push(e.data);\r\n            }\r\n            this.recorder.start(100);\r\n        }\r\n        else {\r\n            const blob = new Blob(this.audioChunks, { type: 'audio/mpeg' });\r\n            this.setState({ audio: blob });\r\n            this.recorder.stop();\r\n            this.stream.getTracks()[0].stop();\r\n        }\r\n\r\n        this.setState({ recording: !this.state.recording });\r\n    }\r\n\r\n    async onSaveClicked() {\r\n        if (this.state.comment.trim() === '' && !this.state.audio)\r\n            this.setState({ error: 'Escribe o graba un comentario para poder guardarlo.' });\r\n        else {\r\n            this.setState({ loading: true });\r\n\r\n            const { session, user } = this.props;\r\n            const { audio, comment } = this.state;\r\n\r\n            // Si el comentario tiene una grabación, enviar el archivo al servidor para\r\n            // obtener el path que se guardará en la sesión\r\n            let audioError = false;\r\n            let audioPath = null;\r\n            if (audio) {\r\n                const response = await this.props.uploadAudioFile(audio, user.id);\r\n                let audioError = response.error;\r\n                if (!audioError)\r\n                    audioPath = response.data.path;\r\n            }\r\n\r\n            // Guardar el comentario actualizando la sesión            \r\n            const { error } = await this.props.updateActivitySession({\r\n                id: session, audio: audioPath, comment\r\n            });\r\n            \r\n            const saveError = error || (audioError && comment.trim() === '');\r\n            // Mostrar notificación de la acción de guardar el comentario\r\n            const message = saveError ?\r\n                            'Error al realizar la acción: guardar el comentario' :\r\n                            'Se realizó exitosamente la acción: guardar el comentario';\r\n            this.props.setNotification({ error, message, slide: true });\r\n            // Cerrar la ventana modal\r\n            this.setState({ comment: '', loading: false });\r\n            this.props.onCancelClicked();\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  setNotification,\r\n  updateActivitySession,\r\n  uploadAudioFile,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  mapActionsToProps\r\n)(SNewComment);","import SNewComment from './SNewComment';\r\nexport default SNewComment;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getUser = (id, toUpdate = false) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const user = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({\r\n            type: toUpdate ? SET_TO_UPDATE : SET_USER,\r\n            payload: { user }\r\n        });\r\n\r\n        return { error, message, user };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, user: null };\r\n    }\r\n}\r\n\r\nexport const getUsers = (query = null) => async (dispatch) => {\r\n    let url = `${apiURL}/user`;\r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const users = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_USERS, \r\n            payload: { users }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const recoverPassword = (email, role) => async () => {\r\n    const url = `${apiURL}/user/recover/pwd`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { email, role });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message, status };\r\n    }\r\n    catch (err) {\r\n        return { \r\n            error: true, \r\n            message: 'Hubo un error de conexión. Inténtalo más tarde...' \r\n        };\r\n    }\r\n}\r\n\r\nexport const updateUser = (user, userId) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${user.id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { user });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        /** Actualizar en el store solamente si es el \r\n          * usuario logueado\r\n          */\r\n        if (!error && user.id === userId)\r\n            dispatch({ \r\n                type: SET_USER, \r\n                payload: { user: data }\r\n            });\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_USER, \r\n        payload: { user }\r\n    });\r\n}\r\n\r\nexport const setUsers = (users) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_USERS,\r\n        payload: { users }\r\n    });\r\n}\r\n\r\nexport const setToUpdate = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_TO_UPDATE, \r\n        payload: { user }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n * \r\n * @description Archivo encargado de realizar acciones relaionadas al usuario\r\n */\r\n\r\nexport const buildRandomColor = () => {\r\n    const hex = '0123456789ABCDEF'\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++)\r\n        color += hex[Math.floor(Math.random() * 16)];\r\n\r\n    return color;\r\n}\r\n\r\nexport const buildUserAlias = (name, last_name) => {\r\n    const firstLetter = name.charAt(0);\r\n    const secondLetter = last_name.charAt(0);\r\n    return (firstLetter + secondLetter).toUpperCase();\r\n}\r\n\r\nexport const checkEmail = (email) => {\r\n    const emailRegex = /[a-zA-Z0-9.+_-]+@[a-z]+\\.[a-z]+/;\r\n    return emailRegex.test(email);\r\n}\r\n\r\nexport const checkUserFields = (state, update) => {\r\n    let user = Object.assign({}, state);\r\n\r\n    let hasErrors = false;\r\n    /** Verificar que los campos no estén vacíos */\r\n    if (user.name.value.trim() === '') {\r\n        user.name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (user.last_name.value.trim() === '') {\r\n        user.last_name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.email.value.trim() === '') {\r\n        user.email.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.id.value.trim() === '') {\r\n        user.id.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.username.value.trim() === '') {\r\n        user.username.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    let checkPassword = true;\r\n    if (!update && user.password.value.trim() === '') {\r\n        user.password.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n        checkPassword= false;\r\n    }\r\n    \r\n    /** Verificar que el campo email sea un email correcto */\r\n    const emailRegex = /[a-zA-Z0-9.+_-]+@[a-z]+\\.[a-z]+/;\r\n    if (!emailRegex.test(user.email.value.trim())) {\r\n        user.email.error = 'Debes ingresar un email válido.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    /** Verificar el campo contraseña para el paciente */\r\n    if (checkPassword) {\r\n        if (user.password.value.trim() !== '' && user.id_role.value === 1) {\r\n            /** Verificar que la contraseña sólo contenga comas */\r\n            const pwdRegex = /[ `!@#$%^g*()_+\\-=[\\]{};':\"\\\\|.<>/?~]/;\r\n            if (pwdRegex.test(user.password.value.trim())) {\r\n                user.password.error = 'La contraseña del paciente no puede ' +\r\n                                      'tener ningún caracter especial exceptuando ' +\r\n                                      'la coma (,).';\r\n                hasErrors = true; \r\n            }\r\n            else {\r\n                /** Verificar que la contraseña tenga 4 palabras */\r\n                const words = user.password.value.trim().split(',');\r\n                if (words.length !== 4) {\r\n                    user.password.error = 'La contraseña del paciente debe tener ' +\r\n                                          '4 palabras separadas por coma (,).';\r\n                    hasErrors = true;\r\n                }\r\n                else {\r\n                    /** Verificar que las palabras pertenezcan al conjunto */\r\n                    const wordsSet = ['árbol', 'corazón', 'flor', 'nube', 'sol'];\r\n                    let notInSet = false;\r\n                    words.forEach(word => {\r\n                        if (!wordsSet.includes(word)) notInSet = true;\r\n                    });\r\n\r\n                    if (notInSet) {\r\n                        user.password.error = 'La contraseña del paciente debe ' + \r\n                                              'tener palabras pertenecientes ' + \r\n                                              'al conjunto descrito.';\r\n                        hasErrors = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return { hasErrors, user };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormFeedback, FormGroup, FormText, Input, Label } from 'reactstrap';\r\n\r\nconst SInputField = (props) => {\r\n    const type = props.name === 'email' ? 'email' : \r\n                 props.type ? props.type : 'text';\r\n    \r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            {props.form === 'admin' && props.name === 'password' && \r\n            <FormText>\r\n                Recuerda que la contraseña para el paciente debe \r\n                contener cuatro palabras del conjunto árbol, corazón,\r\n                flor, nube y sol, separadas por coma y sin espacios. Ej.: \r\n                árbol,flor,nube,sol.\r\n            </FormText>}\r\n            <Input\r\n                disabled={props.disabled}\r\n                type={type}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}\r\n                invalid={props.error !== null} />\r\n            {props.error && <FormFeedback>{props.error}</FormFeedback>}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SInputField;","import SInputField from './SInputField';\r\nexport default SInputField;","import React, { Component } from 'react';\r\nimport styles from './SPasswordRecover.module.css';\r\nimport { Form } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { recoverPassword } from '@actions/user';\r\nimport { checkEmail } from '@utils/user';\r\n\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SPasswordRecover extends Component {\r\n  render() {\r\n    return(\r\n      <div className={styles.container}>\r\n        <div className={styles.infoText}>\r\n          Para recuperar tu contraseña debes ingresar el correo electrónico \r\n          que tu administrador te asignó. En caso de no recordar tu correo \r\n          electrónico, o en caso de algún problema, comunícate con el \r\n          administrador del sistema.\r\n        </div>\r\n        <Form>\r\n          <SInputField \r\n            error={this.state.error} \r\n            onChange={this.onEmailChange}\r\n            type='email'\r\n            value={this.state.email}>\r\n              Ingresa aquí el correo electrónico\r\n          </SInputField>\r\n          <div className={`flex ${styles.btnContainer}`}>\r\n            {\r\n              this.state.done ?\r\n              <p className={styles.doneMessage}>\r\n                Se ha enviado un correo con una contraseña provisional. Recuerda que es \r\n                recomendable cambiarla lo antes posible. Ya puedes cerrar esta ventana.\r\n              </p>\r\n              :\r\n              <SSubmitField \r\n                className='primary-btn'\r\n                loading={this.state.loading}\r\n                onClick={this.onSendClicked}>\r\n                Enviar\r\n              </SSubmitField>\r\n            }\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { done: false, email: '', error: null, loading: false };\r\n\r\n    this.onEmailChange = this.onEmailChange.bind(this);\r\n    this.onSendClicked = this.onSendClicked.bind(this);\r\n  }\r\n\r\n  onEmailChange(e) {\r\n    this.setState({ email: e.target.value, error: null });\r\n  }\r\n\r\n  async onSendClicked(e) {\r\n    e.preventDefault();\r\n\r\n    // Verificar posibles errores\r\n    const { email } = this.state;\r\n    let error = null;\r\n    if (email.trim() === '')\r\n      error = 'El email es obligatorio.';\r\n    else if (!checkEmail(email))\r\n      error = 'Debes ingresar un email válido.';\r\n\r\n    // Si hay algún error, mostrarlo. Sino enviar petición al servidor\r\n    if (error)\r\n      this.setState({ error });\r\n    else {\r\n      this.setState({ loading: true });\r\n\r\n      const response = await this.props.recoverPassword(email, this.props.role);\r\n      const { error, status } = response;\r\n      let done = false;\r\n      let errorMsg = null;\r\n      if (error) \r\n        errorMsg = status === 404 ? 'El usuario con el email especificado no fue encontrado.' : \r\n                   'Se presentó un error al tratar de recuperar la contraseña. Inténtalo más tarde.';\r\n      else\r\n        done = true;\r\n\r\n      this.setState({ done, email: '', error: errorMsg, loading: false });\r\n    }\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  recoverPassword\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(SPasswordRecover);","import SPasswordRecover from './SPasswordRecover';\r\nexport default SPasswordRecover;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SVideo.module.css';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SVideo = (props) => {\r\n    const absolute = props.absolute ? styles.absolute : '';\r\n    const width = props.width ? props.width : '100%';\r\n\r\n    return(\r\n        <div \r\n            className={`${styles.container} ${absolute}`}\r\n            style={{'--width': width }}>\r\n            <video \r\n                src={`${serverURL}${props.src}`}\r\n                className={styles.video}\r\n                controls>\r\n\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SVideo;","import SVideo from './SVideo';\r\nexport default SVideo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SModal.module.css';\r\nimport { \r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport SComments from '@components/shared/SComments';\r\nimport SNewComment from './SNewComment';\r\nimport SPasswordRecover from '@components/shared/SPasswordRecover';\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nclass SModal extends Component {\r\n    render() {\r\n        return(\r\n            <Modal \r\n                centered={true}\r\n                contentClassName={styles.modal}\r\n                isOpen={this.props.ui.modal !== null}\r\n                size='lg'\r\n                toggle={this.closeModal}>\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    <span className={styles.title}>\r\n                        { this.props.ui.modal.title }\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody className={styles.body}>\r\n                    {\r\n                        this.props.ui.modal.type === 'comments' ?\r\n                        <SComments data={this.props.ui.modal.data} />\r\n                        :\r\n                        this.props.ui.modal.type === 'new_comment' ?\r\n                        <SNewComment \r\n                          onCancelClicked={this.closeModal}\r\n                          session={this.props.ui.modal.session} />\r\n                        :\r\n                        this.props.ui.modal.type === 'forgot_password' ? \r\n                        <SPasswordRecover \r\n                            role={this.props.ui.modal.role}\r\n                            type={this.props.ui.modal.type} />\r\n                        :\r\n                        <SVideo src={this.props.ui.modal.videoUrl} />\r\n                    }\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    closeModal() {\r\n        this.props.setModal(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SModal);","import SModal from './SModal';\r\nexport default SModal;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setNotification,\r\n    setParallax, \r\n    showAvatar \r\n} from '@actions/ui';\r\nimport { getUser } from '@actions/user';\r\nimport { \r\n    setCheckServerStatus, \r\n    setConnectedId, \r\n    setConnectSocket \r\n} from '@actions/connection';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nclass SProtectedRoute extends Component {\r\n    render() {\r\n        const { component: Component, ...rest } = this.props;\r\n        const { role } = this.state;\r\n\r\n        return(\r\n            <Route {...rest} render={(props) => (\r\n                this.hasToken(role) ?\r\n                <Component {...props} />\r\n                :\r\n                <Redirect to={`/${role}`} />\r\n            )} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { role: this.getRoleFromPath() };\r\n        this.hasToken = this.hasToken.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { role } = this.state;\r\n        this.showAvatar(role);\r\n        this.setBar(role);\r\n        this.setParallax(role);\r\n        this.checkServerStatus(true);\r\n                \r\n        if (this.hasToken(role) && this.props.user === null) {\r\n            /** \r\n             * Obtener el parámetro relacionado al id del usuario \r\n             * de acuerdo al rol\r\n             */\r\n            const { computedMatch } = this.props;\r\n            const letter = role === PATIENT ? 'p' : 't';\r\n            const id = computedMatch.params[`${letter}id`];\r\n            \r\n            const { error, user } = await this.props.getUser(id);\r\n            if (!error) this.connectSocket(role, user.id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disconnectSocket();\r\n        this.checkServerStatus(false);\r\n        this.props.setNotification(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    checkServerStatus(check) {\r\n        this.props.setCheckServerStatus(check);\r\n    }\r\n\r\n    connectSocket(role, userId) {\r\n        if (role === PATIENT) {\r\n            this.props.setConnectedId(userId);\r\n            this.props.setConnectSocket(true);\r\n        }\r\n    }\r\n\r\n    disconnectSocket() {\r\n        this.props.setConnectSocket(false);\r\n    }\r\n\r\n    getRoleFromPath() {\r\n        const { path } = this.props;\r\n        const role = path.split('/')[1];\r\n        return role;\r\n    }\r\n\r\n    hasToken(role) {\r\n        const token = this.props.auth[`${role}Token`];\r\n        if (token) {\r\n            if (!axios.defaults.headers.common['Auth-Token'])\r\n                axios.defaults.headers.common['Auth-Token'] = token;\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setBar(role) {\r\n        const bar = role === PATIENT ? 'patient' : 'standard';\r\n        this.props.setBar(bar);\r\n    }\r\n\r\n    setParallax(role) {\r\n        const parallax = role === PATIENT;\r\n        this.props.setParallax(parallax);\r\n    }\r\n\r\n    /** Mandar a mostrar avatar dependiendo del rol */\r\n    showAvatar(role) {\r\n        const show = role === PATIENT ? true : false;\r\n        this.props.showAvatar(show);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    setBar,\r\n    setCheckServerStatus,\r\n    setConnectedId,\r\n    setConnectSocket,\r\n    setNotification,\r\n    setParallax,\r\n    showAvatar\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProtectedRoute);","import SProtectedRoute from './SProtectedRoute';\r\nexport default SProtectedRoute;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarInfo.module.css';\r\n\r\nconst DEFAULT_AVATAR = process.env.REACT_APP_DEFAULT_AVATAR;\r\n\r\nconst SAvatarInfo = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <div className={`${styles.sides} ${styles.avatarSide}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src={DEFAULT_AVATAR} />                    \r\n                </div>\r\n                <div className={styles.sides}>\r\n                    <p className={styles.title}>\r\n                        ¡Avatar para apoyar las terapias!\r\n                    </p>\r\n                    <p className={styles.description}>\r\n                        Cómo terapeuta puedes personalizar un avatar con el que\r\n                        tu paciente podrá interactuar mientras realiza sus \r\n                        actividades asignadas\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarInfo;","import SAvatarInfo from './SAvatarInfo';\r\nexport default SAvatarInfo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SDevelop.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SDevelop = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <p className={styles.text}>\r\n                    Ideado y desarrollado con \r\n                    <FontAwesomeIcon \r\n                        className={styles.icon}\r\n                        icon={faHeart} />\r\n                    por un equipo interdisciplinar de\r\n                </p>\r\n                <div className={`flex ${styles.logoContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_incs.png' />\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_pujc.png' /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SDevelop;","import SDevelop from './SDevelop';\r\nexport default SDevelop;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeature.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst SFeature = (props) => {\r\n    return(\r\n        <Col sm='12' md='4'>\r\n            <div className={`flex ${styles.container}`}>\r\n                <img \r\n                    alt=''\r\n                    className={styles.logo}\r\n                    src={props.feature.logo} />\r\n                <div className={styles.infoContainer}>\r\n                    <div className={styles.title}>\r\n                        {props.feature.title}\r\n                    </div>\r\n                    <div className={styles.description}>\r\n                        {props.feature.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default SFeature;","import SFeature from './SFeature';\r\nexport default SFeature;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeatures.module.css';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport SFeature from './SFeature';\r\n\r\nconst SFeatures = (props) => {\r\n    return(\r\n        <div>\r\n            <div className={styles.title}>\r\n                Si eres {props.role}\r\n            </div>\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.innerContainer}>\r\n                    <Row noGutters>\r\n                        {\r\n                            props.features.map((feature) => {\r\n                                return(\r\n                                    <SFeature\r\n                                        feature={feature}\r\n                                        key={feature.id} />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFeatures;","import SFeatures from './SFeatures';\r\nexport default SFeatures;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFooterBar.module.css';\r\n\r\nconst SFooterBar = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.logo}>\r\n                    SATReLO 2<br />\r\n                    <span className={styles.copyright}>\r\n                        &copy; Copyright 2019-2020\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFooterBar;","import SFooterBar from './SFooterBar';\r\nexport default SFooterBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SHero.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nconst SHero = () => {\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.outerContainer}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={styles.title}>\r\n                        La Aplicación de Apoyo a la Rehabilitación \r\n                        del Lenguaje Oral\r\n                    </div>\r\n                    <div className={styles.subtitle}>\r\n                        Generación de actividades personalizadas para atender \r\n                        las necesidades particulares de los pacientes\r\n                    </div>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Link className={styles.link} to='/paciente'>\r\n                            <Button \r\n                                className={`secondary-btn ${styles.btn}`}\r\n                                size='lg'>\r\n                            \r\n                                Ingresa como paciente\r\n                            </Button>\r\n                        </Link>\r\n                        <Link className={styles.link} to='terapeuta'>\r\n                            <Button\r\n                                className={`primary-btn ${styles.btn}`} \r\n                                size='lg'>\r\n                                    Ingresa como terapeuta\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <SVideo absolute={true} width='700px' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SHero;","import SHero from './SHero';\r\nexport default SHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMobile.module.css';\r\n\r\nconst SMobile = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.title}>\r\n                    ¡En todos tus dispositivos!\r\n                </p>\r\n                <p className={styles.description}>\r\n                    SATReLO está cuidadosamente diseñado para que se vea y funcione\r\n                    bien en todos tus dispositivos, ya sean computadores, tablets o \r\n                    smartphones.\r\n                </p>\r\n                <div className={`flex ${styles.imageContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src='images/landing/mobile.png' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMobile;","import SMobile from './SMobile';\r\nexport default SMobile;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport let featuresData = {\r\n    therapist: {\r\n        role: 'terapeuta',\r\n        features: [\r\n            {\r\n                description: `Configura y genera actividades personalizadas\r\n                                de acuerdo a las necesidades del paciente`,\r\n                id: 1,\r\n                logo: '/images/landing/settings.png',\r\n                title: 'Configura actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Asigna las actividades generadas al paciente \r\n                                correspondiente`,\r\n                id: 2,\r\n                logo: '/images/landing/user.png',\r\n                title: 'Asígnalas al paciente',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Recibe retroalimentación del progreso del paciente\r\n                                en las actividades`,\r\n                id: 3,\r\n                logo: '/images/landing/feedback.png',\r\n                title: 'Recibe retroalimentación',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    },\r\n    patient: {\r\n        role: 'paciente',\r\n        features: [\r\n            {\r\n                description: `Realiza las actividades asignadas por el\r\n                                terapeuta`,\r\n                id: 1,\r\n                logo: '/images/landing/game.png',\r\n                title: 'Juega las actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Gana puntos a medida que completas las\r\n                                actividades asignadas`,\r\n                id: 2,\r\n                logo: '/images/landing/score.png',\r\n                title: 'Acumula puntos',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Intercambia los puntos en la tienda por\r\n                                coleccionables`,\r\n                id: 3,\r\n                logo: '/images/landing/collection.png',\r\n                title: 'Completa la colección',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SLandingPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SavatarInfo from '@components/landing/SAvatarInfo';\r\nimport SDevelop from '@components/landing/SDevelop';\r\nimport SFeatures from '@components/landing/SFeatures';\r\nimport SFooterBar from '@components/shared/SFooterBar';\r\nimport SHero from '@components/landing/SHero';\r\nimport SMobile from '@components/landing/SMobile';\r\n\r\nimport { featuresData } from '@data/features';\r\n\r\nclass SLandingPage extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12' className={styles.container}>\r\n                    <SHero />\r\n                    <div className={styles.mainPhrase}>\r\n                        ¿Cómo ayuda SATReLO en las terapias de\r\n                        rehabilitación?\r\n                        <p className={styles.mainIdea}>\r\n                            SATReLO ayuda en la mecanización de la \r\n                            estructuración del lenguaje oral y escrito\r\n                            por medio de la realización de actividades a \r\n                            modo de juegos\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.features}>\r\n                        <p className={styles.featuresTitle}>\r\n                            ¿Cómo funciona?\r\n                        </p>\r\n                        <SFeatures \r\n                            {...this.state.featuresData.therapist} />\r\n                        <SFeatures\r\n                            {...this.state.featuresData.patient} />\r\n                    </div>\r\n                    <SavatarInfo />\r\n                    <SMobile />\r\n                    <SDevelop />\r\n                    <SFooterBar />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = { ...this.state, featuresData };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setUser,\r\n    setBar,\r\n    setParallax,\r\n    showAvatar,\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SLandingPage);\r\n","import SLandingPage from './SLandingPage';\r\nexport default SLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getAvatarVariation = (variationData) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variation`;\r\n\r\n    try {\r\n        const response = await axios.get(url, { params: { ...variationData }});\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const variation = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATION, \r\n            payload: { variation }\r\n        });\r\n\r\n        return { data, error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getAvatarVariations = (gender, userAvatar) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variations/${gender}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, status, message }} = response;\r\n        \r\n        let variations = status === 200 ? data : { 1: { id: 1, id_avatar: 1 }};\r\n        const error = status !== 200;\r\n\r\n        if (!error && userAvatar) {\r\n            variations = Object.values(variations);\r\n            /** Buscar y eliminar el avatar con el mismo id \r\n              * del avatar del usuario\r\n              */\r\n            let index = 0;\r\n            variations.forEach((variation, i) => {\r\n                if (userAvatar.id === variation.id)\r\n                    index = i;\r\n            });\r\n            variations.splice(index, 1);\r\n            /** Reemplazar el avatar del usuario\r\n              * colocándolo en el primer lugar del arreglo  \r\n              */\r\n            variations.unshift(userAvatar);\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n        }\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATIONS, \r\n            payload: { variations }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };   \r\n    }\r\n}\r\n\r\nexport const setAvatarVariation = (variation) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_VARIATION, \r\n        payload: { variation }\r\n    });\r\n}\r\n\r\nexport const setAvatarVariations = (variations) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_AVATAR_VARIATIONS,\r\n        payload: { variations }\r\n    });\r\n}\r\n\r\nexport const setMessage = (message) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_MESSAGE, \r\n        payload: { message }\r\n    });\r\n}","import React from 'react';\r\nimport styles from './SInfoPanel.module.css';\r\n\r\nconst SInfoPanel = (props) => {\r\n  return(\r\n    <div className={styles.container}>\r\n      <div className={styles.label}>\r\n        Nombres y apellidos\r\n      </div>\r\n      <div className={styles.infoText}>\r\n        { props.user.name } { props.user.last_name }\r\n      </div>\r\n\r\n      <div className={styles.label}>\r\n        Correo electrónico\r\n      </div>\r\n      <div className={styles.infoText}>\r\n        { props.user.email }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SInfoPanel;","import SInfoPanel from './SInfoPanel';\r\nexport default SInfoPanel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis \r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Form } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '@actions/ui';\r\nimport { getUser, updateUser } from '@actions/user';\r\n\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SSecurityPanel extends Component {\r\n  render() {\r\n    return(\r\n      <div style={{ padding: 25 }}>\r\n        <p style={{ fontSize: 'large', fontWeight: 'bold' }}>\r\n          Cambio de contraseña\r\n        </p>\r\n        <Form>\r\n          <SInputField\r\n            error={this.state.password.error}\r\n            name='password'\r\n            onChange={this.onChange} \r\n            type='password'\r\n            value={this.state.password.value}>\r\n            Ingresa tu contraseña nueva  \r\n          </SInputField>\r\n          <SSubmitField\r\n            className='secondary-btn'\r\n            loading={this.state.password.loading}\r\n            onClick={this.onSaveClicked}>\r\n            Guardar\r\n          </SSubmitField>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      password: {\r\n        error: null, \r\n        loading: false,\r\n        value: ''\r\n      }\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSaveClicked = this.onSaveClicked.bind(this);\r\n  }\r\n\r\n  /** Métodos extra */\r\n  onChange(e) {\r\n    const { name, value } = e.target;\r\n    let field = this.state[name];\r\n    field.error = null;\r\n    field.value = value;\r\n    this.setState({ [name]: field });\r\n  }\r\n\r\n  async onSaveClicked(e) {\r\n    if (this.state.password.value.trim() === '')\r\n      this.setState({ password: { ...this.state.password, error: 'La contraseña es obligatoria' }});\r\n    else {\r\n      this.setState({ password: { ...this.state.password, loading: true }});\r\n\r\n      const { user } = this.props;\r\n      const userData = { id: user.id, password: this.state.password.value };\r\n      const response = await this.props.updateUser(userData, user.id);\r\n\r\n      const { error, message } = response;\r\n      if (!error) await this.props.getUser(user.id);\r\n\r\n      this.setState({ password: { ...this.state.password, loading: false }});\r\n      this.props.setNotification({ error, message, slide: true });\r\n    }\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  getUser, \r\n  setNotification, \r\n  updateUser\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(SSecurityPanel);","import SSecurityPanel from './SSecurityPanel';\r\nexport default SSecurityPanel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarItem.module.css';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SAvatarItem = (props) => {\r\n    const { item } = props;\r\n    const avatarPath = SERVER_URL + item.img_path;\r\n    \r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <img \r\n                alt=''\r\n                className={styles.image}\r\n                src={avatarPath} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarItem;","import SAvatarItem from './SAvatarItem';\r\nexport default SAvatarItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKINS_OWNED,\r\n    SET_USER_SKIN_OWNED,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getCollections = () => async (dispatch) => {\r\n    const url = `${apiURL}/collection`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collections = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTIONS, \r\n            payload: { collections }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getCollectable = (collectionId, collectableId) => async (dispatch) => {\r\n    const url = `${apiURL}/collection/${collectionId}/collectable/${collectableId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collectable = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTABLE, \r\n            payload: { collectable }\r\n        });\r\n        \r\n        return { data, error, message }; \r\n    }\r\n    catch (err) {\r\n        return { data: null, error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Función para verificar si un usuario tiene un aspecto o no */\r\nexport const getPatientSkin = (userId, skinData) => async (dispatch) => {\r\n    const { skinId } = skinData;\r\n    const url = `${apiURL}/patient/${userId}/skin/${skinId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const { single } = skinData;\r\n            dispatch({\r\n                type: single ? SET_USER_SKIN_OWNED : SET_USER_SKINS_OWNED, \r\n                payload: { data: skinData } \r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setCollections = (collections) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_COLLECTIONS, \r\n        payload: { collections }\r\n    });\r\n}\r\n\r\nexport const setCollectable = (collectable) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_COLLECTABLE,\r\n        payload: { collectable }\r\n    });\r\n}\r\n\r\n/** Función para asociar aspectos al usuario */\r\nexport const setPatientSkins = (userId, skinData) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${userId}/skin`;\r\n    const { skins } = skinData;\r\n\r\n    try {\r\n        const response = await axios.post(url, { skins });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            delete skinData.skins;\r\n            /** Agregar aspecto desde la lista de coleccionables */\r\n            if (skinData.single) {\r\n                dispatch({\r\n                    type: SET_USER_SKIN_OWNED, \r\n                    payload: { data: skinData }\r\n                });\r\n            }\r\n            /** Agregar aspectos desde la lista de aspectos */\r\n            else {\r\n                skins.forEach(skin => {\r\n                    skinData.skinId = skin.id;\r\n                    dispatch({\r\n                        type: SET_USER_SKINS_OWNED, \r\n                        payload: { data: skinData }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSkinItem.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\nimport { getUser, updateUser } from '@actions/user';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SSkinItem extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <img\r\n                    alt=''\r\n                    className={styles.collectableImg}\r\n                    src={SERVER_URL + this.props.img_path} />\r\n                <p className={styles.alt}>\r\n                    { this.props.name }\r\n                </p>\r\n                {\r\n                    this.props.owned ?\r\n                    <div className={styles.owned}>\r\n                        Ya tienes este ítem\r\n                    </div>\r\n                    :\r\n                    this.checkPrice() ?\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`primary-btn ${styles.btn}`}\r\n                            onClick={this.onBuyClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>\r\n                                    Comprar por { this.state.price } puntos\r\n                                </span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                    :\r\n                    <div className={styles.cannotBuy}>\r\n                        Necesitas { this.state.price } puntos.\r\n                        Aún no puedes comprar este ítem\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loading: false,\r\n            price: this.props.price + this.props.collectable.price \r\n        };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkUserSkin();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        /**\r\n         * Si el coleccionable cambió quiere decir que se detectó que\r\n         * uno de sus aspectos pertenece al usuario, por lo que el \r\n         * coleccionable en general es propiedad de usuario. Si esto\r\n         * es así el precio es solamente el del aspecto.\r\n         */\r\n        if (prevProps.collectable !== this.props.collectable)\r\n            this.updatePrice();       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        let data = {\r\n            collectableId: this.props.collectable.id,\r\n            collectionId: this.props.collectable.id_collection,\r\n            single: false,\r\n        }\r\n        if (check) data.skinId = this.props.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkins(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        /** Actualizar el puntaje del usuario para realizar la compra */\r\n        const { user } = this.props;\r\n        const newScore = user.score - this.state.price;\r\n        await this.props.updateUser({ id: user.id, score: newScore }, user.id);\r\n        await this.props.getUser(user.id); // Actualizar el usuario de forma confiable en el front\r\n\r\n        await this.props.setPatientSkins(this.props.userId, data);        \r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    checkPrice() {\r\n        return this.props.user.score >= this.state.price;\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        const { user } = this.props;\r\n        if (user.score >= this.state.price) {\r\n            let _skins = [{ id: this.props.id }];\r\n            /**\r\n             * Si el precio del aspecto es menor al precio calculado en el\r\n             * estado de este componente, entonces el coleccionable no es \r\n             * propiedad del usuario por lo que se debe agregar el aspecto\r\n             * por defecto a los aspectos para comprar.\r\n             */\r\n            if (this.props.price < this.state.price) {\r\n                const Skins = Object.values(this.props.collectable.Skins);\r\n                Skins.forEach(skin => {\r\n                    if (skin.is_default && skin.id !== this.props.id) {\r\n                        _skins.push({ id: skin.id });\r\n                    }\r\n                });\r\n            }\r\n            this.buySkins(_skins);\r\n        }\r\n    }\r\n\r\n    updatePrice() {\r\n        if (this.props.price !== this.state.price)\r\n            this.setState({ price: this.props.price });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable, \r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatientSkin, \r\n    getUser, \r\n    setPatientSkins, \r\n    updateUser, \r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SSkinItem);","import SSkinItem from './SSkinItem';\r\nexport default SSkinItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SCarousel.module.css';\r\nimport {\r\n    Carousel,\r\n    CarouselControl,\r\n    CarouselItem,\r\n} from 'reactstrap';\r\n\r\nimport SAvatarItem from './SAvatarIem';\r\nimport SSkinItem from './SSkinItem';\r\n\r\nclass SCarousel extends Component {\r\n    render() {\r\n        const { kind } = this.props;\r\n        let base = styles.style;\r\n        if (kind !== 'avatar')\r\n            base = `${base} ${styles.border}`;\r\n\r\n        return(\r\n            <Carousel\r\n                className={base}\r\n                activeIndex={this.state.activeIndex}\r\n                interval={false}\r\n                next={this.next}\r\n                previous={this.previous}>\r\n                \r\n                {this.buildItems()}\r\n\r\n                <CarouselControl\r\n                    direction='prev'\r\n                    onClickHandler={this.previous} />\r\n                <CarouselControl \r\n                    direction='next'\r\n                    onClickHandler={this.next} />\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0,\r\n            animating: false,\r\n        };\r\n        this.animateItem = this.animateItem.bind(this);\r\n        this.buildItems = this.buildItems.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    animateItem(animate) {\r\n        this.setState({ animating: animate });\r\n    }\r\n\r\n    /** Construir los items que component el Carousel */\r\n    buildItems() {\r\n        return this.props.items.map((item) => {\r\n            return(\r\n                <CarouselItem\r\n                    key={item.id}\r\n                    onExiting={() => { this.animateItem(true); }}\r\n                    onExited={() => { this.animateItem(false); }}>\r\n                    {\r\n                        this.props.kind === 'avatar' ?\r\n                        <SAvatarItem item={item} />\r\n                        :\r\n                        <SSkinItem \r\n                            {...item} \r\n                            userId={this.props.userId} />\r\n                    }\r\n                </CarouselItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    goToIndex(newIndex) {\r\n        if (this.state.animating)\r\n            return\r\n        this.setState({ activeIndex: newIndex });\r\n        this.onCarouselChanged(newIndex);\r\n    }\r\n\r\n    next() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === this.props.items.length - 1 ?\r\n                        0 : this.state.activeIndex + 1;\r\n        this.setState({ activeIndex : nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    previous() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === 0 ?\r\n                        this.props.items.length - 1 : this.state.activeIndex - 1;\r\n        this.setState({ activeIndex: nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    onCarouselChanged(index) {\r\n        const selected = this.props.items[index];\r\n        this.props.onCarouselChanged(selected);\r\n    }\r\n}\r\n\r\nexport default SCarousel;","import SCarousel from './SCarousel';\r\nexport default SCarousel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst SContainer = (props) => {\r\n    let padding = 20;\r\n    if (props.padding !== undefined) padding = props.padding;\r\n     \r\n    return(\r\n        <div style={{\r\n            border: '1px solid #E0E0E0',\r\n            borderRadius: '3px',\r\n            boxShadow: '3px 3px 10px -3px #E0E0E0',\r\n            padding: `15px ${padding}px`,\r\n            width: '100%'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SContainer;","import SContainer from './SContainer';\r\nexport default SContainer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const options = {\r\n    eye: { \r\n        id: 1,\r\n        name: 'Ojos', \r\n        dbalias: 'eye',\r\n        icon: '/images/other/eye_icon.png' \r\n    },\r\n    hair: { \r\n        id: 2, \r\n        name: 'Cabello', \r\n        dbalias: 'hair',\r\n        icon: '/images/other/hair_icon.png'\r\n    },\r\n    torso: { \r\n        id: 3,\r\n        name: 'Torso', \r\n        dbalias: 'torso',\r\n        icon: '/images/other/torso_icon.png'\r\n    },\r\n};\r\n\r\nexport const eye = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                colorHex: '#62ABDF',\r\n                name: 'Azul'\r\n            },\r\n            brown: {\r\n                id: 2,\r\n                button: 'brown',\r\n                colorHex: '#55392F',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de ojos'\r\n    }\r\n};\r\n\r\nexport const hair = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            black: {\r\n                id: 1,\r\n                button: 'black',\r\n                colorHex: '#030405',\r\n                name: 'Negro'\r\n            },\r\n            blonde: {\r\n                id: 2,\r\n                button: 'blonde',\r\n                colorHex: '#FCD860',\r\n                name: 'Rubio'\r\n            },\r\n            brown: {\r\n                id: 3,\r\n                button: 'brown',\r\n                colorHex: '#9D4427',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de cabello'\r\n    }\r\n};\r\n\r\nexport const torso = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                colorHex: '#1C3351',\r\n                name: 'Azul'\r\n            },\r\n            green: {\r\n                id: 2,\r\n                button: 'green',\r\n                colorHex: '#279599',\r\n                name: 'Verde'\r\n            },\r\n            purple: {\r\n                id: 3,\r\n                button: 'purple',\r\n                colorHex: '#612747',\r\n                name: 'Morado'\r\n            }\r\n        },\r\n        title: 'Color del torso'\r\n    }\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STACustomizer.module.css';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport { options, eye, hair, torso } from '@data/customizer';\r\n\r\nclass STACustomizer extends Component {\r\n    render() {\r\n        return(\r\n            <SContainer padding={0}>\r\n                <div className={`${styles.container} ${styles.header}`}>\r\n                    <Row noGutters>\r\n                        {this.buildOptions()}\r\n                    </Row>\r\n                </div>                \r\n                {this.buildSections()}\r\n            </SContainer>\r\n        );\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { options, eye, hair, torso, option: 'eye' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onSectionOptionClicked = this.onSectionOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Métodos de construcción de la UI */\r\n    buildOptions() {\r\n        const options = Object.values(this.state.options);\r\n        return options.map(option => {\r\n            let styleClass = `ghost-btn ${styles.btn}`;\r\n            if (option.dbalias === this.state.option)\r\n                styleClass = `${styleClass} ${styles.selected}`;\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={styleClass}\r\n                        name={option.dbalias}\r\n                        onClick={this.onOptionClicked}\r\n                        style={{ \r\n                            backgroundImage: `url(${option.icon})`, \r\n                            backgroundSize: 'contain' }}>                        \r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSections() {\r\n        const { option } = this.state;\r\n        const sections = Object.values(this.state[option]);\r\n        return sections.map((section, i) => {\r\n            return( \r\n                <div className={styles.container} key={i}>\r\n                    <div className={styles.title}>\r\n                        {section.title}\r\n                    </div>\r\n                    <Row noGutters>\r\n                        {this.buildSectionsOptions(section)}\r\n                    </Row>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSectionsOptions(section) {\r\n        const { kind, name } = section;\r\n        const options = Object.values(section.options);\r\n        return options.map(option => {\r\n            let styleClass = `ghost-btn ${styles.btn} ${styles[kind]}`;\r\n            if (option.selected) styleClass = `${styleClass} ${styles.selected}`;\r\n\r\n            let inStyle = {};\r\n            if (option.colorHex)\r\n                inStyle = { \"--btnColor\": option.colorHex, backgroundColor: option.colorHex };\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={styleClass}\r\n                        name={`${name}-${option.button}-${option.name}`}\r\n                        onClick={this.onSectionOptionClicked}\r\n                        style={inStyle}>\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    /** Eventos */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n\r\n    onSectionOptionClicked(e) {\r\n        const { name } = e.target;\r\n        /** Obtener el nombre de la sección y el nombre del botón */\r\n        const names = name.split('-');\r\n        const section = names[0];\r\n        const sectionOpt = names[1];\r\n        const optionName = names[2];\r\n\r\n        /** Marcar como seleccionado en el estado */\r\n        const { option } = this.state;\r\n        let options = this.state[option];\r\n        let soptions = Object.values(options[section].options);\r\n        soptions.forEach(soption => {\r\n            soption.selected = soption.button === sectionOpt ? true : false;\r\n        });\r\n\r\n        this.setState({ [option]: options });\r\n\r\n        /** Mandar a traer la imagen con las características seleccionadas */\r\n        this.props.onOptionSelected({ \r\n            option, section, selected: optionName \r\n        });\r\n    }\r\n}\r\n\r\nexport default STACustomizer;","import STACustomizer from './STACustomizer';\r\nexport default STACustomizer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STAvatarPanel.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getAvatarVariation, \r\n    getAvatarVariations\r\n} from '@actions/avatar';\r\nimport { getUser, updateUser } from '@actions/user';\r\n\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport STACustomizer from './STACustomizer';\r\n\r\nclass STAvatarPanel extends Component {\r\n    render() {\r\n        let { variations } = this.props;\r\n        variations = variations ? Object.values(variations) : [];\r\n        \r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                <Col className={styles.carousel} sm='12' md='7'>\r\n                    {variations && <SCarousel \r\n                        items={variations}\r\n                        kind='avatar'\r\n                        onCarouselChanged={this.onCarouselChanged} />}\r\n                </Col>\r\n                <Col sm='12' md='5'>\r\n                    <STACustomizer\r\n                        onOptionSelected={this.onOptionSelected} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { current: null, eye: null, hair: null, torso: null };\r\n        this.onCarouselChanged = this.onCarouselChanged.bind(this);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user) this.getVariations();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user && !this.props.variations) \r\n            this.getVariations();\r\n\r\n        if (this.props.variations) {\r\n            const variations = Object.values(this.props.variations);\r\n            if (this.state.current !== variations[0])\r\n                this.setState({ current: variations[0] });\r\n        }\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Obtener una variación determinada */\r\n    async getVariation() {\r\n        let state = Object.assign({}, this.state);\r\n        let current = Object.assign({}, state.current);\r\n        delete state.current;\r\n        /** Construir el data para el request */\r\n        const keys = Object.keys(state);\r\n        let data = { id_avatar: current.id_avatar };\r\n        keys.forEach(key => {\r\n            const value = this.state[key];\r\n            if (value) data[key] = value;\r\n        });\r\n        /** Borrar los valores que no se necesitan en current */\r\n        delete current.id;\r\n        delete current.img_path;\r\n        delete current.thumbnail_path;\r\n        data = { ...current, ...data };\r\n        /** Realizar el request para obtener la variación */\r\n        const response = await this.props.getAvatarVariation(data);\r\n        const variationData = response.data;\r\n\r\n        /** Guardar la variación del avatar en el usuario */\r\n        const userData = { \r\n            id: this.props.user.id,\r\n            id_avatar_variation: variationData.id \r\n        };\r\n        await this.props.updateUser(userData, this.props.user.id);\r\n        await this.props.getUser(this.props.user.id); // Actualizar el usuario de manera confiable\r\n    }\r\n\r\n    /** Obtener una variación dependiendo del género */\r\n    async getVariations() {\r\n        const { Avatar_Variation, gender } = this.props.user;\r\n        await this.props.getAvatarVariations(gender, Avatar_Variation);\r\n    }\r\n\r\n    onCarouselChanged(selected) {\r\n        if (selected !== this.state.current)\r\n            this.setState({ current: selected });\r\n    }\r\n\r\n    onOptionSelected(data) {\r\n        /** Actualizar el valor de la opción seleccionada en el estado */\r\n        const { option, section, selected } = data;\r\n        let current = this.state[option];\r\n        if (current) \r\n            current[section] = selected;\r\n        else\r\n            current = { [section]: selected };\r\n        \r\n        this.setState({ [option]: current }, () => {\r\n            this.getVariation();\r\n        });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        variations: state.avatar.variations\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getAvatarVariation,\r\n    getAvatarVariations,\r\n    getUser,\r\n    updateUser\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STAvatarPanel);","import STAvatarPanel from './STAvatarPanel';\r\nexport default STAvatarPanel;","import STLayout from './STLayout';\r\nexport default STLayout;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nconst STLayout = (props) => {\r\n    /** Calcular el tamaño del layout dependiendo del page */\r\n    const xlSize = props.page === 'feedback' ? '10' : '9';\r\n    const mt = props.mt ? props.mt : 62;\r\n\r\n    return(\r\n        <div className={`flex ${styles.outerContainer}`}>\r\n            <Row \r\n                className={`justify-content-center ${styles.rowContainer}`} \r\n                noGutters>\r\n                <Col\r\n                    xs='12' \r\n                    sm='12' \r\n                    md='12' \r\n                    lg='12' \r\n                    xl={xlSize}>\r\n                    <div \r\n                        className={styles.container}\r\n                        style={{ '--mt': `${mt}px`, '--pt': `${props.pt}px` }}>\r\n                        { props.children }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default STLayout;","import SUserHero from './SUserHero';\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserHero.module.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL; \r\n\r\nclass SUserHero extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n\r\n                </div>\r\n                <div className={`flex ${styles.userContainer}`}>\r\n                    <Row \r\n                        className={`justify-content-center ${styles.row}`} \r\n                        noGutters>\r\n                        <Col className={`flex ${styles.col}`} xs='12' xl='9'>\r\n                            {\r\n                                user && user.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${user.profile_img}`} />\r\n                                :\r\n                                user && user.thumbnail_alias ?\r\n                                <div \r\n                                    className={`flex ${styles.alias}`}\r\n                                    style={{ backgroundColor: user.color }}>\r\n                                    {user.thumbnail_alias}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div className={styles.uname}>\r\n                                {user && \r\n                                <span>{user.name} {user.last_name}</span>}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SProfilePage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setAvatarVariations } from '@actions/avatar';\r\n\r\nimport SInfoPanel from '@components/shared/SInfoPanel';\r\nimport SSecurityPanel from '@components/shared/SSecurityPanel';\r\nimport STAvatarPanel from '@components/therapist/STAvatarPanel';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nclass SProfilePage extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        let role = null;\r\n        if (user) role = user.Role.name;\r\n\r\n        /** Estilos de los botones */\r\n        const base = `ghost-btn ${styles.btn}`;\r\n        const { option } = this.state;\r\n\r\n        const btnAvatar = option === 'avatar' ? `${base} ${styles.selected}` : base;\r\n        const btnInfo = option === 'info' ? `${base} ${styles.selected}` : base;\r\n        const btnSecurity = option === 'security' ? `${base} ${styles.selected}` : base;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={user} />\r\n                <STLayout mt={298}>\r\n                    <div className={styles.options}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span className={`flex ${styles.optContainer}`}>\r\n                                <Button\r\n                                    className={btnInfo}\r\n                                    name='info'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Información\r\n                                </Button>\r\n                                <Button\r\n                                    className={btnAvatar}\r\n                                    name='avatar'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Avatar\r\n                                </Button>\r\n                                <Button\r\n                                    className={btnSecurity}\r\n                                    name='security'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Seguridad\r\n                                </Button>\r\n                            </span>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.state.option === 'avatar' ?\r\n                        <STAvatarPanel />\r\n                        :\r\n                        this.state.option === 'info' ?\r\n                        <SInfoPanel user={user} />\r\n                        :\r\n                        <SSecurityPanel user={user} />\r\n                    }\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { option: 'avatar' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAvatarVariations(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setAvatarVariations\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProfilePage);","import SProfilePage from './SProfilePage';\r\nexport default SProfilePage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivity.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createActivitySession, setActivity } from '@actions/activity';\r\nimport { setFullScreen, setModal, setNotification } from '@actions/ui';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPActivity extends Component {\r\n    render() {\r\n        const { activity, id } = this.props;\r\n        if (this.state.session) {\r\n            const path = `/paciente/${id}/actividades/${activity.id}` +\r\n                          `/sesiones/${this.state.session.id}`;\r\n            return <Redirect to={path} push />\r\n        }\r\n\r\n        const date = activity.date_from.split('T')[0];\r\n        const { logo_path } = activity.Activity;\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <img \r\n                    alt=''\r\n                    className={styles.gameImage}\r\n                    src={SERVER_URL + logo_path} />\r\n                <div className={styles.gameContainer}>\r\n                    <div className='flex'>\r\n                        <p className={styles.gameTitle}>\r\n                            { activity.Activity.name }\r\n                        </p>\r\n                        <p style={{ fontWeight: 600, marginBottom: 0 }}>\r\n                            { this.getFormattedDate(date) }\r\n                        </p>\r\n                    </div>\r\n                    {activity.Syntactic_Structure && <p style={{ fontWeight: 600 }}>\r\n                        {activity.Syntactic_Structure.name}\r\n                    </p>}\r\n                    <p className={styles.gameDescription}>\r\n                        { activity.Activity.description }\r\n                    </p>\r\n\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`simple-btn ${styles.btn}`}\r\n                            onClick={this.onTutorialClicked}>\r\n                            Tutorial\r\n                        </Button>\r\n                        <Button \r\n                            className={`${styles.btn} pdf-btn`}\r\n                            onClick={this.onPlayClicked}>\r\n                            { \r\n                                this.state.loading ? \r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>Jugar</span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false,\r\n          session: null, \r\n        };\r\n\r\n        this.onPlayClicked = this.onPlayClicked.bind(this);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    async onPlayClicked() {\r\n        this.setState({ loading: true });\r\n        /** Crear una nueva sesión de juego */\r\n        const { activity } = this.props;\r\n        const response = await this.props.createActivitySession(activity.id);\r\n        const { data, error, message } = response;\r\n\r\n        this.setState({ loading: false });\r\n        if (error)\r\n            this.props.setNotification({ error, message, slide: true });\r\n        else {\r\n            this.setState({ session: data }, () => {\r\n                this.props.setActivity(activity);\r\n                this.props.setFullScreen(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    onTutorialClicked() {\r\n        const { tutorial_path } = this.props.activity.Mechanic;\r\n        const modal = {\r\n            title: 'Video tutorial',\r\n            type: 'video',\r\n            videoUrl: tutorial_path\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createActivitySession,\r\n    setActivity,\r\n    setFullScreen,\r\n    setModal,\r\n    setNotification,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPActivity);","import SPactivity from './SPActivity';\r\nexport default SPactivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintianer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SPLayout extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n        \r\n        return(\r\n            <div className={`flex ${styles.outerContainer}`}>\r\n                <Row className={styles.rowContainer} noGutters>\r\n                    <Col\r\n                        xs='12' \r\n                        sm='12' \r\n                        md={{ size: 7, offset: 5 }}\r\n                        style={{ '--vOffset': `${vOffset}px` }}>\r\n                        <div className={styles.container}>\r\n                            { this.props.children }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SPLayout);","import SPLayout from './SPLayout';\r\nexport default SPLayout;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const messages = {\r\n    activities: [\r\n        'Elige la opción jugar de una de las actividades ' +\r\n        'para comenzar a divertirnos.'\r\n    ],\r\n    collectable: [\r\n        'También puedes cambiar tus puntos por diferentes ' +\r\n        'aspectos. !Colecciónalos todos!'\r\n    ],\r\n    collections: [\r\n        '!Aquí puedes cambiar tus puntos por la colección ' +\r\n        'que más te guste!'        \r\n    ],\r\n    landing: [\r\n        '¡Bienvenido a SATReLO! Es hora de jugar. ' +\r\n        'Para iniciar ingresa tu nombre y clave.',\r\n        '¡Hola! Vamos a divertirnos juntos. Para ' +\r\n        'iniciar ingresa tu nombre y clave.',\r\n    ],\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivitiesPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPActivity from '@components/patient/SPActivity';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { activities } = messages;\r\n\r\nclass SPActivitiesPage extends Component {\r\n    render() {\r\n        const { pid } = this.props.match.params;\r\n        let { activities } = this.props;\r\n        activities = activities ? Object.values(activities) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <p className={styles.title}>\r\n                    Mis actividades\r\n                </p>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        activities && activities.length > 0 ?\r\n                        activities.map((activity) => {\r\n                            return(\r\n                                <SPActivity\r\n                                    activity={activity}\r\n                                    id={pid} \r\n                                    key={activity.id} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty color='white'>\r\n                            Aún no tienes actividades asignadas...\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user) {\r\n            /** Enviar mensaje al avatar */\r\n            let message = activities[Math.floor(Math.random() * activities.length)];\r\n            message = `!${this.props.user.name}! ${message}`;\r\n\r\n            if (message !== this.props.avatar.message)\r\n                this.props.setMessage(message);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        avatar: state.avatar,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    setActivities,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPActivitiesPage);","import SPActivitiesPage from './SPActivitiesPage';\r\nexport default SPActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectableInfoPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollectable, setCollectable } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collectable } = messages;\r\n\r\nclass SPCollectableInfoPage extends Component {\r\n    render() {\r\n        const { collectable } = this.props;\r\n\r\n        return(\r\n            <SPLayout>\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='light' />\r\n                    :\r\n                    collectable ?\r\n                    <div className={styles.container}>\r\n                        <div className='flex'>\r\n                            <div className={styles.title}>\r\n                                { collectable.name }\r\n                            </div>\r\n                            <div className={`flex ${styles.score}`}>\r\n                                <div>Tienes {this.props.user && this.props.user.score}</div>\r\n                                <img \r\n                                    alt=''\r\n                                    className={styles.scoreIcon}\r\n                                    src='/images/other/star.png' />\r\n                            </div>\r\n                        </div>\r\n                        <SCarousel \r\n                            items={Object.values(collectable.Skins)}\r\n                            onCarouselChanged={this.onCarouselChanged}\r\n                            userId={this.state.userId} />\r\n                        <p className={styles.descriptionTitle}>\r\n                            Resumen\r\n                        </p>\r\n                        <p className={styles.description}>\r\n                            { this.state.currentSkin && \r\n                                this.state.currentSkin.summary }\r\n                        </p>\r\n                    </div>\r\n                    :\r\n                    <SEmpty color='white'>\r\n                        No se encontró información del coleccionable.\r\n                    </SEmpty>\r\n                }\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currentSkin: null, loading: true, userId: null \r\n        };\r\n\r\n        this.onCarouselChanged = this.onCarouselChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collectable[Math.floor(Math.random() * collectable.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectableInfo();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollectable(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectableInfo() {\r\n        this.setState({ loading: true });\r\n        let { id, cid } = this.props.match.params;\r\n\r\n        const response = await this.props.getCollectable(id, cid);\r\n        const { data, error } = response;\r\n        const skins = Object.values(data.Skins);\r\n        const skin = error ? null : skins[0];\r\n\r\n        this.setState({ currentSkin: skin, loading: false });\r\n    }\r\n\r\n    onCarouselChanged(itemSelected) {\r\n        this.setState({ currentSkin: itemSelected });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollectable,\r\n    setCollectable,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectableInfoPage);","import SPCollectableInfoPage from './SPCollectableInfoPage';\r\nexport default SPCollectableInfoPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectable.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\nimport { getUser, updateUser } from '@actions/user';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPCollectable extends Component {\r\n    render() {\r\n        const { userId } = this.props;\r\n        const { collectable } = this.props;\r\n        const { id, id_collection } = collectable;\r\n        const cid = id_collection;\r\n        const { img_path } = collectable.Skins;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Link \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    to={`/paciente/${userId}/colecciones/${cid}/coleccionable/${id}`}>\r\n                </Link>\r\n                <img\r\n                    alt='' \r\n                    className={styles.collectableImg}\r\n                    src={SERVER_URL + img_path} />\r\n                <div className={styles.info}>\r\n                    <p className={styles.name}>\r\n                        { collectable.name }\r\n                    </p>\r\n                    <p className={styles.points}>\r\n                        Necesitas { collectable.price } puntos\r\n                    </p>\r\n                </div>\r\n                {\r\n                    collectable.Skins.owned ?\r\n                    <div className={styles.owned}>\r\n                        Adquirido\r\n                    </div>\r\n                    :\r\n                    this.checkPrice() ?\r\n                    <Button \r\n                        className={`primary-btn ${styles.btnBuy}`}\r\n                        onClick={this.onBuyClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='' size='sm' /> \r\n                            : <span>Comprar</span>\r\n                        }\r\n                    </Button>\r\n                    :\r\n                    <div className={styles.cannotBuy}>\r\n                        Aún no puedes comprar este ítem\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.userId) this.checkUserSkin();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        const { collectable } = this.props;\r\n        let data = { \r\n            collectableId: collectable.id,\r\n            collectionId: collectable.id_collection,\r\n            single: true\r\n        };\r\n        if (check) data.skinId = collectable.Skins.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkin(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        /** Actualizar el puntaje del usuario para realizar la compra */\r\n        const { collectable, user } = this.props;\r\n        const newScore = user.score - collectable.price;\r\n        await this.props.updateUser({ id: user.id, score: newScore }, user.id);\r\n        await this.props.getUser(user.id); // Actualizar el usuario de forma confiable en el front\r\n\r\n        await this.props.setPatientSkins(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    checkPrice() {\r\n        const { collectable, user } = this.props;\r\n        return user.score >= collectable.price;\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        \r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        const { collectable, user } = this.props;\r\n        if (user.score >= collectable.price) {\r\n            const skin = this.props.collectable.Skins;\r\n            this.buySkin([skin]);\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatientSkin, \r\n    getUser, \r\n    setPatientSkins, \r\n    updateUser, \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectable);","import SPCollectable from './SPCollectable';\r\nexport default SPCollectable;","import SPCollection from './SPCollection';\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPCollection.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SPCollectable from './SPCollectable';\r\n\r\nconst SPCollection = (props) => {\r\n    const collectables = Object.values(props.Collectables);\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <p className={styles.title}>\r\n                Colección de {props.name}\r\n            </p>\r\n\r\n            <Row className={styles.rowContainer} noGutters>\r\n                {collectables && collectables.map((collectable) => {\r\n                    return(\r\n                        <Col \r\n                            className={styles.col}\r\n                            sm='12' \r\n                            md='4' \r\n                            key={collectable.id}>\r\n                            <SPCollectable\r\n                                collectable={collectable}\r\n                                userId={props.userId} />\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectionsPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollections, setCollections } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPCollection from '@components/patient/SPCollection';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collections } = messages;\r\n\r\nclass SPCollectionsPage extends Component {\r\n    render() {\r\n        let { collections } = this.props;\r\n        collections = collections ? Object.values(collections) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div className={styles.container}>\r\n                    <div className='flex'>\r\n                        <div className={styles.title}>Colecciones</div>\r\n                        <div className={`flex ${styles.score}`}>\r\n                            <div>Tienes {this.props.user && this.props.user.score}</div>\r\n                            <img\r\n                                alt=''\r\n                                className={styles.scoreIcon}\r\n                                src='/images/other/star.png' />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        collections &&\r\n                        collections.length > 0 ?\r\n                        collections.map((collection) => {\r\n                            return(\r\n                                <SPCollection\r\n                                    {...collection}\r\n                                    key={collection.id}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty color='white'>\r\n                            No se encontraron colecciones.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, userId: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collections[Math.floor(Math.random() * collections.length)];\r\n        this.props.setMessage(message);\r\n        \r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectionsList();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollections(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectionsList() {\r\n        this.setState({ loading: true });\r\n        await this.props.getCollections();\r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collections: state.collection.collections,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollections,\r\n    setCollections,\r\n    setMessage,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectionsPage);","import SPCollectionsPage from './SPCollectionsPage';\r\nexport default SPCollectionsPage;","import SPPassButton from './SPPassButton';\r\nexport default SPPassButton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPPassButton.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SPPassButton = (props) => {\r\n    let btn = props.kind === 'delete' ? styles.btnInv : styles.btn;\r\n    if (props.kind === 'not')\r\n        btn = `${btn} ${styles.bgWhite}`;\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${btn}`}\r\n            onClick={() => {\r\n                if (props.kind === 'delete')\r\n                    props.onDeletePassClicked();\r\n                else if (props.kind === 'select')\r\n                    props.onPassButtonClicked({\r\n                        name: props.name,\r\n                        src: props.src\r\n                    });\r\n            }}\r\n            style={{ cursor: props.kind === 'not' ? 'default' : 'pointer'}}>\r\n            {\r\n                props.kind === 'delete' ?\r\n                <FontAwesomeIcon \r\n                    icon={faTrash}\r\n                    size='2x' \r\n                    style={{ color: 'black' }} />\r\n                :\r\n                !props.src || (props.src && props.src.trim() === '') ?\r\n                <div className={styles.icon} />\r\n                :\r\n                <img\r\n                    alt=''\r\n                    className={styles.icon} \r\n                    src={props.src} />\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default SPPassButton; ","import SPassword from './SPassword';\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPassword.module.css';\r\n\r\nimport SPPassButton from './SPPassButton';\r\n\r\nclass SPassword extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.passwordOptions.map((po) => {\r\n                        return(\r\n                            <SPPassButton\r\n                                key={po.id}\r\n                                {...po}\r\n                                onPassButtonClicked={\r\n                                    this.onPasswordOptionClicked\r\n                                } />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.optionsSelected.map((os) => {\r\n                        return(\r\n                            <SPPassButton key={os.id} {...os} />\r\n                        );\r\n                    })}\r\n                    <SPPassButton \r\n                        kind='delete'\r\n                        onDeletePassClicked={this.onDeleteButtonClicked} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passwordOptions: [\r\n                { id: 1, kind: 'select', name: 'árbol', src: '/images/pwd/tree.png' },\r\n                { id: 2, kind: 'select', name: 'corazón', src: '/images/pwd/heart.png' },\r\n                { id: 3, kind: 'select', name: 'flor', src: '/images/pwd/flower.png' },\r\n                { id: 4, kind: 'select', name: 'nube', src: '/images/pwd/cloud.png' },\r\n                { id: 5, kind: 'select', name: 'sol', src: '/images/pwd/sun.png' },\r\n            ],\r\n            optionsSelected: [\r\n                { id: 1, kind: 'not', name: '', src: '' },\r\n                { id: 2, kind: 'not', name: '', src: '' },\r\n                { id: 3, kind: 'not', name: '', src: '' },\r\n                { id: 4, kind: 'not', name: '', src: '' }\r\n            ]\r\n        };\r\n\r\n        this.onDeleteButtonClicked = this.onDeleteButtonClicked.bind(this);\r\n        this.onPasswordOptionClicked = this.onPasswordOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDeleteButtonClicked() {\r\n        let { optionsSelected } = this.state;\r\n        /** Limpiar las asociaciones */\r\n        optionsSelected.forEach(option => {\r\n            option.name = '';\r\n            option.src = '';\r\n        });\r\n        this.setState({ optionsSelected });\r\n    }\r\n\r\n    onPasswordOptionClicked(selected) {\r\n        let { optionsSelected } = this.state;\r\n        /** Asociar el nombre y el src seleccionado */\r\n        let added = false;\r\n        optionsSelected.forEach(option => {\r\n            if (!added && option.name.trim() === '') {\r\n                option.name = selected.name;\r\n                option.src = selected.src;\r\n                added = true;\r\n            }\r\n        });\r\n        this.setState({ optionsSelected }, () => {\r\n            /** Obtener las nombres de las opciones seleccionadas */\r\n            const words = this.state.optionsSelected.filter((option) => {\r\n                return option.name.trim() !== '';\r\n            }).map((option) => { \r\n                return option.name; \r\n            });\r\n            /** Enviar la lista de palabras hacia el componente padre */\r\n            this.props.setPassword(words);\r\n        });\r\n    }\r\n}\r\n\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLogin.module.css';\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SPassword from '@components/shared/SPassword';\r\n\r\nclass SPLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a las actividades */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/paciente/${userId}/actividades`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                {this.state.error && <div className={styles.error}>\r\n                    {this.state.error}\r\n                </div>}\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Escribe tu nombre de usuario\r\n                        </Label>\r\n                        <Input\r\n                            bsSize='lg'\r\n                            onChange={this.onInputChanged}\r\n                            placeholder='Por ejemplo, mvsierra' \r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Marca tu clave\r\n                        </Label>\r\n                        <SPassword setPassword={this.setPassword} />\r\n                        <Button\r\n                            className={`ghost-btn ${styles.btnForgot}`}\r\n                            onClick={this.onForgotClicked}>\r\n                            ¿Olvidaste tu clave?\r\n                        </Button>\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`primary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='light' size='sm' /> \r\n                            : \r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            loading: false,\r\n            password: null,\r\n            userId: null,\r\n            username: ''\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onForgotClicked = this.onForgotClicked.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onInputChanged(e) {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    onForgotClicked(e) {\r\n        e.preventDefault();\r\n        const modal = {\r\n            title: 'Recuperación de la clave',\r\n            type: 'forgot_password',\r\n            role: 1,\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, PATIENT);\r\n        let { error, message, userId } = response;\r\n        if (error) error = message;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password) {\r\n                if (password.length === 4)\r\n                    this.onLogin(username, password.join());\r\n                else\r\n                    this.setState({ error: 'La clave debe tener 4 elementos'});\r\n            }\r\n            else\r\n                this.setState({\r\n                    error: 'El usuario y la clave son obligatorios'\r\n                });\r\n        }\r\n    }\r\n\r\n    setPassword(words) {\r\n        this.setState({ password: words });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login,\r\n    setModal\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPLogin);","import SPLogin from './SPLogin';\r\nexport default SPLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { \r\n    setBar,\r\n    setParallax, \r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SPLogin from '@components/patient/SPLogin';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { landing } = messages;\r\n\r\n/** Página Landing del paciente */\r\nclass SPLandingPage extends Component {\r\n    render() {\r\n        const vOffset = this.props.ui.vOffset + 60;\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div \r\n                    className='flex' \r\n                    style={{\r\n                        alignItems: 'center',\r\n                        height: `calc(100vh - ${vOffset}px)`,\r\n                        justifyContent: 'center' \r\n                    }}>\r\n                    <SPLogin />\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = landing[Math.floor(Math.random() * landing.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.props.setBar('patient');\r\n        this.props.setParallax(true);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setMessage,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPLandingPage);","import SPLandingPage from './SPLandingPage';\r\nexport default SPLandingPage;","import SFullScreen from './SFullScreen';\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass SFullScreen extends Component {\r\n    render() {\r\n        return(\r\n            <div \r\n                onKeyDown={this.onKeyHandler}\r\n                ref={this.fullRef}\r\n                tabIndex={0}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fullScreen: false };\r\n        this.fullRef = React.createRef();\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onKeyHandler = this.onKeyHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('fullscreenchange', this.onClosed);\r\n        document.addEventListener('mozfullscreenchange', this.onClosed);\r\n        document.addEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.fullScreen !== this.state.fullScreen) {\r\n            if (this.props.fullScreen)\r\n                this.enterFullScreen();\r\n            else\r\n                this.exitFullScreen();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('fullscreenchange', this.onClosed);\r\n        document.removeEventListener('mozfullscreenchange', this.onClosed);\r\n        document.removeEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async enterFullScreen() {\r\n        if (this.fullRef.current.requestFullRequest) {\r\n            await this.fullRef.current.requestFullRequest();\r\n        }\r\n        else if (this.fullRef.current.mozRequestFullScreen) {\r\n            await this.fullRef.current.mozRequestFullScreen();\r\n        }\r\n        else if (this.fullRef.current.webkitRequestFullScreen) {\r\n            await this.fullRef.current.webkitRequestFullScreen();\r\n        }\r\n\r\n        this.setState({ fullScreen: true });\r\n        this.props.onChange(true);\r\n    }\r\n\r\n    async exitFullScreen() {\r\n        const isFull = document.fullscreenElement || \r\n                       document.mozFullScreenElement ||\r\n                       document.webkitFullScreenElement;\r\n        \r\n        if (isFull) {\r\n            if (document.exitFullscreen) {\r\n                await document.exitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                await document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullScreen) {\r\n                await document.webkitExitFullScreen();\r\n            }\r\n        }\r\n\r\n        this.setState({ fullScreen: false });\r\n        this.props.onChange(false);\r\n    }\r\n\r\n    onClosed() {\r\n        const full = document.fullscreenElement ||\r\n                     document.mozFullScreenElement ||\r\n                     document.webkitFullScreenElement;\r\n        if (!full && this.state.fullScreen)\r\n            this.props.onClosed();\r\n    }\r\n\r\n    onKeyHandler(event) {\r\n        if (event.keyCode === 8) event.preventDefault();\r\n    }\r\n}\r\n\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPPlayPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport SFullScreen from '@components/shared/SFullScreen';\r\nimport { getActivity, updateActivitySession } from '@actions/activity';\r\nimport { setFullScreen, setModal, showAvatar } from '@actions/ui';\r\nimport { getUser } from '@actions/user';\r\n\r\nconst FILE_SERVER_URL = process.env.REACT_APP_FILE_SERVER;\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPPlayPage extends Component { \r\n    render() {        \r\n        const { activity, user } = this.props;\r\n        let gamePath = null;\r\n        if (activity && user) {\r\n            const { sid } = this.props.match.params;\r\n            const { build_path } = activity;\r\n            gamePath = `${FILE_SERVER_URL}/${build_path}/index.html` +\r\n                        `?portal=paciente` +\r\n                        `&session=${sid}` +\r\n                        `&score=${user.score}` +\r\n                        `&token=${this.props.auth.pacienteToken}` +\r\n                        `&file_server=${FILE_SERVER_URL}` + \r\n                        `&server=${SERVER_URL}`;\r\n            \r\n            // Agregar al path el avatar asociado al terapeuta\r\n            if (user.Therapists) {\r\n                const therapists = Object.values(user.Therapists);\r\n                if (therapists.length > 0) {\r\n                    const avatarURL = therapists[0].Avatar_Variation.img_path;\r\n                    gamePath += `&avatar=${avatarURL}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return(\r\n            <SFullScreen\r\n                fullScreen={this.props.ui.fullScreen}\r\n                onClosed={this.onClosed}\r\n                onChange={this.onChange}>\r\n                <div className={`flex ${styles.container}`}> \r\n                    <iframe \r\n                        height={window.outerHeight}\r\n                        src={gamePath}\r\n                        title='game'\r\n                        width={window.outerWidth}></iframe>\r\n                </div>\r\n            </SFullScreen>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.ui.fullScreen) this.redirectBack();\r\n\r\n        this.hideAvatar();\r\n        if (this.props.activity === null) {\r\n            const { aid } = this.props.match.params\r\n            this.props.getActivity(aid);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.hideAvatar();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.showAvatar(true);\r\n\r\n        /** Guardar fecha y hora de finalización de la sesión */\r\n        const { sid } = this.props.match.params;\r\n        const session = { date_end: new Date(), id: sid };\r\n        this.props.updateActivitySession(session);\r\n        \r\n        /** Abrir modal para enviar un comentario */\r\n        const modal = {\r\n          title: 'Comenta sobre el desempeño del paciente en el juego',\r\n          type: 'new_comment',\r\n          session: sid\r\n        };\r\n        this.props.setModal(modal);\r\n\r\n        /** Actualizar el usuario para ver reflejado el cambio del puntaje */\r\n        const { user } = this.props;\r\n        this.props.getUser(user.id);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    hideAvatar() {\r\n        if (this.props.ui.showAvatar)\r\n            this.props.showAvatar(false);\r\n    }\r\n\r\n    onClosed() {\r\n        this.redirectBack();\r\n    }\r\n\r\n    onChange(fullScreen) {\r\n        if (!fullScreen) this.redirectBack();\r\n    }\r\n\r\n    redirectBack() {\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    getUser,\r\n    setFullScreen,\r\n    setModal,\r\n    showAvatar,\r\n    updateActivitySession,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        auth: state.auth,\r\n        ui: state.ui,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPPlayPage);","import SPPlayPage from './SPPlayPage';\r\nexport default SPPlayPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear la asociación entre un terapeuta y un paciente */\r\nexport const createPatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { data: { pid: patientId }});\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = data[patientId];\r\n            dispatch({ \r\n                type: SET_PATIENT,\r\n                payload: { association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la informaión de único paciente por medio de su id */\r\nexport const getPatient = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status}} = response;\r\n\r\n        const patient = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SELECTED_PATIENT, \r\n            payload: { patient }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener pacientes */\r\nexport const getPatients = (userId = null, query = null) => async (dispatch) => {\r\n    let url = userId ? \r\n                /** Pacientes de un usuario terapeuta */\r\n                `${apiURL}/therapist/${userId}/patient`\r\n                :\r\n                /** Todos los pacientes */\r\n                `${apiURL}/patient`; \r\n    \r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const patients = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_PATIENTS, \r\n            payload: { patients }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }  \r\n}\r\n\r\n/** Remover la asociación entre un terapeuta y un paciente */\r\nexport const removePatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient/${patientId}`;\r\n\r\n    try {\r\n        const response = await axios.delete(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = {\r\n                _id_therapist: therapistId,\r\n                _id_patient: patientId,\r\n            }\r\n            dispatch({ \r\n                type: REMOVE_PATIENT, \r\n                payload: { _association: association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setPatient = (patient) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_PATIENT, \r\n        payload: { patient }\r\n    });\r\n}\r\n\r\nexport const setPatients = (patients) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PATIENTS,\r\n        payload: { patients }\r\n    });\r\n}","/**\r\n * @author Martin Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivityButtons.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentAlt, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport  { removeActivity, updateActivity } from '@actions/activity';\r\nimport { setModal, setNotification } from '@actions/ui';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STActivityButtons extends Component {\r\n    render() {\r\n        const { Activities_Sessions } = this.props.activity;\r\n        const sessions = Object.values(Activities_Sessions);\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <Button\r\n                    className={`pdf-btn ${styles.btn}`}\r\n                    onClick={this.onPDFClicked}\r\n                    size='sm'>\r\n                    PDF Ficha\r\n                </Button>\r\n                <div className='flex'>\r\n                    <Button \r\n                        className={`ghost-btn ${styles.comments} ${styles.mr}`}\r\n                        onClick={this.onCommentsClicked}\r\n                        size='sm'>\r\n                        <FontAwesomeIcon \r\n                            icon={faCommentAlt} size='2x' />\r\n                    </Button>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        onClick={this.onTutorialClicked}\r\n                        size='sm'>\r\n                        Tutorial\r\n                    </Button>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        onClick={this.onReassignClicked}\r\n                        size='sm'>\r\n                        Reasignar\r\n                    </Button>\r\n                    {sessions.length === 0 && <Button\r\n                        className={`ghost-btn ${styles.delete} ${styles.ml}`}\r\n                        onClick={this.onDeleteClicked}\r\n                        size='sm'>\r\n                        <FontAwesomeIcon \r\n                            icon={faTimesCircle} size='2x' />\r\n                    </Button>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCommentsClicked = this.onCommentsClicked.bind(this);\r\n        this.onDeleteClicked = this.onDeleteClicked.bind(this);\r\n        this.onPDFClicked = this.onPDFClicked.bind(this);\r\n        this.onReassignClicked = this.onReassignClicked.bind(this);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onCommentsClicked() {\r\n        const modal = {\r\n            title: 'Comentarios',\r\n            type: 'comments',\r\n            data: this.props.activity.Activities_Sessions\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onDeleteClicked() {\r\n        const { id } = this.props.activity;\r\n        const response = await this.props.removeActivity(id);\r\n        const { error, message } = response;\r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onPDFClicked() {\r\n        const { pdf_path } = this.props.activity.Mechanic;\r\n        const file = `${serverURL}${pdf_path}`;\r\n        window.open(file);\r\n    }\r\n\r\n    async onReassignClicked() {\r\n        const { id } = this.props.activity;\r\n        const today = new Date();\r\n        let weekLater = new Date();\r\n        weekLater.setDate(weekLater.getDate() + 7);\r\n        const activityData = {\r\n            id,\r\n            date_from: today,\r\n            date_to: weekLater\r\n        };\r\n        const response = await this.props.updateActivity(activityData);\r\n        const { error, message } = response;\r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onTutorialClicked() {\r\n        const { tutorial_path } = this.props.activity.Mechanic;\r\n        let modal = { \r\n            title: 'Video tutorial', \r\n            type: 'video',\r\n            videoUrl: tutorial_path,\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    removeActivity,\r\n    setModal,\r\n    setNotification,\r\n    updateActivity,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STActivityButtons);","import STActivityButtons from './STActivityButtons';\r\nexport default STActivityButtons;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst structures = {\r\n    1: { letter: 'S', color: '#FF7043' },\r\n    2: { letter: 'AD', color: '#42A5F5' },\r\n    3: { letter: 'V', color: '#26A69A' }\r\n}\r\n\r\nconst SSyntacticCircle = (props) => {\r\n    const sid = props.id;\r\n    const structure = structures[sid];\r\n\r\n    let bgColor = 'darkgray';\r\n    if (structure.letter === props.letter)\r\n        bgColor = structure.color;\r\n\r\n    return(\r\n        <div style={{\r\n            alignItems: 'center',\r\n            backgroundColor: `${bgColor}`,\r\n            borderRadius: '50%',\r\n            color: 'white',\r\n            display: 'flex',\r\n            fontWeight: '600',\r\n            height: 37,\r\n            justifyContent: 'center',\r\n            width: 37\r\n        }}>\r\n            {props.letter}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSyntacticCircle;","import STSyntacticCircle from './SSyntacticCircle';\r\nexport default STSyntacticCircle;","import STActivity from './STActivity';\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivity.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nimport STActivityButtons from './STActivityButtons';\r\nimport STSynctaticCircle from './STSyntacticCircle';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STActivity extends Component {\r\n    render() {\r\n        const aid = this.props.activity.id;\r\n        const date = this.props.activity.date_from.split('T')[0];\r\n        const sid = this.props.activity.Syntactic_Structure ? \r\n                    this.props.activity.Syntactic_Structure.id : null;\r\n\r\n        const { pid, tid } = this.props;\r\n\r\n        const { logo_path } = this.props.activity.Activity;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.aimage}\r\n                        src={SERVER_URL + logo_path} />\r\n                    <div className={styles.rightContainer}>\r\n                        <div className={`flex ${styles.nameContainer}`}>\r\n                            <div className={styles.title}>\r\n                                { this.props.activity.Activity.name }\r\n                            </div>\r\n                            <div className={styles.date}>\r\n                                { this.getFormattedDate(date) }\r\n                            </div>\r\n                        </div>\r\n                        {sid && <div className={`flex ${styles.syntContainer}`}>\r\n                                <STSynctaticCircle letter='S' id={sid} />\r\n                                <STSynctaticCircle letter='AD' id={sid} />\r\n                                <STSynctaticCircle letter='V' id={sid} />\r\n                            </div>\r\n                        }\r\n                        <div className={styles.description}>\r\n                            { this.props.activity.Activity.description }\r\n                        </div>\r\n                        <Link \r\n                            to={\r\n                                `/terapeuta/${tid}/pacientes/${pid}/` + \r\n                                `actividades/${aid}/evolución`\r\n                            }\r\n                            className={`ghost-btn ${styles.btnEvolution}`}>\r\n                            Ver evolución\r\n                        </Link>\r\n                        <STActivityButtons activity={this.props.activity} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n}\r\n\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivitiesPage.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\nimport { getPatient, setPatient } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport STActivity from '@components/therapist/STActivity';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nclass STActivitiesPage extends Component {\r\n    render() {\r\n        let { activities, patient, user } = this.props;\r\n        const id = user ? user.id : null;\r\n        const pid = patient ? patient.id : null;\r\n\r\n        activities = activities ? Object.values(activities) : [];\r\n        \r\n        /** Obtener ids del route path */\r\n        const { tid } = this.props.match.params;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={patient} />\r\n                <STLayout pt={0} mt={298}>\r\n                    <div className={`flex ${styles.titleContainer}`}>\r\n                        <div className={styles.title}>\r\n                            Actividades asignadas\r\n                        </div>\r\n                        <div className={`flex ${styles.btnContainer}`}>\r\n                            <Link\r\n                                className={styles.link}\r\n                                to={`/terapeuta/${tid}/pacientes/${pid}` +\r\n                                    `/actividades/histórico`}>\r\n                                <Button \r\n                                    className={`primary-btn left ${styles.btn}`}>\r\n                                    Histórico\r\n                                </Button>\r\n                            </Link>\r\n                            {\r\n                                this.state.createActivityEnabled ? \r\n                                <Link\r\n                                    className={styles.link}\r\n                                    to={`/terapeuta/${id}/pacientes/${pid}/configuracion`}>\r\n                                    <Button className={`secondary-btn ${styles.btn}`}>\r\n                                        Agregar actividad\r\n                                    </Button>\r\n                                </Link>\r\n                                :\r\n                                <Button \r\n                                    className={`secondary-btn ${styles.btn} ${styles.btnDisabled}`} \r\n                                    disabled>\r\n                                    Agregar actividad\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.listContainer}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <SSpinner color='primary' />\r\n                            :\r\n                            activities && activities.length > 0 ?\r\n                            activities.map((activity) => {\r\n                                return(\r\n                                    <STActivity\r\n                                        activity={activity} \r\n                                        key={activity.id}\r\n                                        pid={pid}\r\n                                        tid={tid} />\r\n                                );\r\n                            })\r\n                            :\r\n                            <SEmpty>\r\n                                Este paciente aún no tiene actividades asignadas.\r\n                                Recuerda que puedes asignarle una actividad\r\n                                seleccionando la opción Agregar actividad.\r\n                            </SEmpty>\r\n                        }\r\n                    </div>\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { createActivityEnabled: false, loading: false };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n        /** Obtener las actividades del paciente */\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);     \r\n        this.setState({ loading: false });\r\n        \r\n        /** Obtener la información del paciente */\r\n        await this.props.getPatient(pid);\r\n        this.setState({ createActivityEnabled: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n        this.props.setPatient(null);\r\n        this.setState({ createActivityEnabled: false });\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        patient: state.patient.patient,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    getPatient,\r\n    setActivities,\r\n    setPatient\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STActivitiesPage);","import STActivitiesPage from './STActivitiesPage';\r\nexport default STActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STOption.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst STOption = (props) => {\r\n    const selected = props.option.selected ? styles.selected : '';\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${styles.container}`}\r\n            onClick={() => {\r\n                onOptionClicked(props);\r\n            }}>\r\n            <div className={`flex ${styles.inner} ${selected}`}>\r\n                <div className={styles.name}>\r\n                    { props.option.name }\r\n                </div>\r\n                <FontAwesomeIcon\r\n                    icon={faCheckCircle}\r\n                    size='2x' />\r\n            </div>\r\n        </Button>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionClicked = (props) => {\r\n    props.onOptionSelected(props.option);\r\n}\r\n\r\nexport default STOption;","import STOption from './STOption';\r\nexport default STOption;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STField.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STOption from './STOption';\r\n\r\nconst STField = (props) => {\r\n    let { options } = props;\r\n    options = options ? Object.values(options) : [];\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>\r\n                { props.title }\r\n            </div>\r\n            <div className={styles.subtitle}>\r\n                { props.subtitle }\r\n            </div>\r\n            {\r\n                props.loading ?\r\n                <SSpinner color='primary' />\r\n                :\r\n                options && options.length > 0 ?\r\n                <Row className={styles.optionRow} noGutters>\r\n                    {options.map(option => {\r\n                        return(\r\n                            <Col\r\n                                className={styles.optionCol}\r\n                                key={option.id} \r\n                                sm={{ size: 12 }}\r\n                                md={{ size: 4 }}>\r\n                                <STOption\r\n                                    onOptionSelected={(option) => {\r\n                                        onOptionSelected(props, option);\r\n                                    }} \r\n                                    option={option} />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionSelected = (props, option) => {\r\n    props.onOptionSelected(option);\r\n}\r\n\r\nexport default STField;","import STField from './STField';\r\nexport default STField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions\r\n} from '@actions/dynamic';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STDynamicField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props} \r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar configuraciones y selecciones */\r\n        const fields = [\r\n            'mechanic',\r\n            'situations',\r\n            'times',\r\n            'reader'\r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetDynamicOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildDynamic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetDynamicOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        /** Setear la opción seleccionada */\r\n        this.props.setDynamicSelectedOptions({\r\n            fieldId: this.props.id,\r\n            optionId: option.id\r\n        });\r\n\r\n        /** Obtener las opciones del siguiente field */\r\n        if (this.props.next) {\r\n            let data = { fieldId: this.props.next };\r\n            /** \r\n             * Verificar si el siguiente field requiere los ids\r\n             * de las opciones elegidas anteriormente\r\n             */\r\n            const field = this.props.dynamic[this.props.next];\r\n            if (field.required) {\r\n                const requiredIds = this.getRequiredIds(field.required);\r\n                data.required = requiredIds;\r\n            }\r\n\r\n            this.getOptions(data);\r\n        }\r\n        else\r\n            this.props.showCreateActivityButton(true);\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getDynamicOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.dynamic[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildDynamic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STDynamicField);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener las opciones para un field en particular */\r\nexport const getDynamicOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    if (fieldId === 'mechanic' || fieldId === 'situations') {\r\n        let url = `${apiURL}`;\r\n        if (fieldId === 'mechanic') {\r\n            url = `${url}/dynamic/mechanics`;\r\n        }\r\n        else {\r\n            const { mechanicId } = fieldData.required;\r\n            url = `${url}/dynamic/mechanics/${mechanicId}/situations`;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_DYNAMIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };                            \r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n    else { \r\n        let options;\r\n        if (fieldId === 'times') {\r\n            options = {\r\n                1: { id: 1, name: 'Presente' },\r\n                /*2: { id: 2, name: 'Pasado' },\r\n                3: { id: 3, name: 'Futuro' }*/\r\n            };\r\n        }\r\n        else if (fieldId === 'reader') {\r\n            options = {\r\n                1: { id: 1, name: 'Si' },\r\n                2: { id: 2, name: 'No' }\r\n            };\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_DYNAMIC_OPTIONS,\r\n            payload: { fieldId, options }\r\n        });\r\n    }\r\n}\r\n\r\n/** Resetear las opciones seleccionadas */\r\nexport const resetDynamicOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_DYNAMIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Setear las opciones seleccionadas */\r\nexport const setDynamicSelectedOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_DYNAMIC_SELECTED_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}","import STDynamicField from './STDynamicField';\r\nexport default STDynamicField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STDynamicField from './STDynamicField';\r\n\r\nclass STDynamic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STDynamicField {...this.props.dynamic.mechanic} />\r\n                <STDynamicField {...this.props.dynamic.situations} />\r\n                <STDynamicField {...this.props.dynamic.times} />\r\n                <STDynamicField {...this.props.dynamic.reader} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STDynamic);","import STDynamic from './STDynamic';\r\nexport default STDynamic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_STATIC_SELECTED_OPTION,\r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Agregar una opción seleccionada (solo para multichoice) */\r\nexport const addStaticSelectedOption = (fieldData) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_STATIC_SELECTED_OPTION,\r\n        payload: fieldData\r\n    });\r\n}\r\n\r\n/** Obtener la información de las siguientes opciones */\r\nexport const getStaticOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    let url = null;\r\n    if (fieldId === 'category')\r\n        url = `${apiURL}/static/categories`\r\n\r\n    else if (fieldId === 'subcategory') {\r\n        const { categoryId } = fieldData.required;\r\n        url = `${apiURL}/static/categories/${categoryId}/subcategories`;\r\n    }\r\n\r\n    else if (fieldId === 'sintactic')\r\n        url = `${apiURL}/static/structures`;\r\n        \r\n    else if (fieldId === 'vocabulary' || fieldId === 'mechanic') {\r\n        const { subcategoryId, sintacticId } = fieldData.required;\r\n        const sid = subcategoryId;\r\n        const stid = sintacticId;\r\n        url = `${apiURL}/static/subcategories/${sid}/structures/${stid}`;\r\n\r\n        if (fieldId === 'vocabulary')\r\n            url = `${url}/vocabularies`;\r\n        else\r\n            url = `${url}/mechanics`;\r\n    }\r\n    \r\n    if (url) {\r\n        /** Realizar el request */\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_STATIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };\r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n}\r\n\r\n/** Resetear las opciones */\r\nexport const resetStaticOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_STATIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Marcar como opción seleccionada */\r\nexport const setStaticSelectedOptions = (optionData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_STATIC_SELECTED_OPTIONS, \r\n        payload: optionData \r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions, \r\n    setStaticSelectedOptions\r\n} from '@actions/static';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STStaticField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props}\r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar todas las opciones y selecciones configuradas */\r\n        const fields = [ \r\n            'category', \r\n            'subcategory', \r\n            'sintactic', \r\n            'vocabulary',\r\n            'mechanic' \r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetStaticOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildStatic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetStaticOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        let getNextOptions = true;\r\n        if (this.props.multichoice) {\r\n            /** Adicionar opciones seleccionadas */\r\n            this.props.addStaticSelectedOption({\r\n                fieldId: this.props.id,\r\n                optionId: option.id\r\n            });\r\n\r\n            getNextOptions = this.checkMinimun();\r\n        }\r\n        else {\r\n            /** Setear opciones como seleccionadas */\r\n            this.props.setStaticSelectedOptions({ \r\n                fieldId: this.props.id, \r\n                optionId: option.id \r\n            });\r\n        }\r\n\r\n        /** Pedir la información del siguiente field */\r\n        if (getNextOptions) {\r\n            if (this.props.next) {\r\n                let data = { fieldId: this.props.next };\r\n                /** \r\n                 * Verificar si el próximo field requiere ids\r\n                 * de las opciones elegidas\r\n                 */\r\n                const field = this.props.static[this.props.next];\r\n                if (field.required) {\r\n                    const requiredIds = this.getRequiredIds(field.required);\r\n                    data.required = requiredIds;\r\n                }\r\n                \r\n                this.getOptions(data);\r\n            }\r\n            else\r\n                this.props.showCreateActivityButton(true);\r\n        }\r\n    }\r\n\r\n    /** Chequear si se cumple el mínimo de selecciones necesarias */\r\n    checkMinimun() {\r\n        let { options } = this.props;\r\n        options = Object.values(options);\r\n        let selected = 0;\r\n        options.forEach(option => {\r\n            if (option.selected) selected += 1;\r\n        });\r\n\r\n        return selected >= this.props.minimum;\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getStaticOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.static[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildStatic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions,\r\n    setStaticSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STStaticField);","import STStaticField from './STStaticField';\r\nexport default STStaticField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STStaticField from './STStaticField';\r\n\r\nclass STStatic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STStaticField {...this.props.static.category} />\r\n                <STStaticField {...this.props.static.subcategory} />\r\n                <STStaticField {...this.props.static.sintactic} />\r\n                <STStaticField {...this.props.static.vocabulary} />\r\n                <STStaticField {...this.props.static.mechanic} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STStatic);","import STStatic from './STStatic';\r\nexport default STStatic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STConfigurationPage.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createActivity } from '@actions/activity';\r\nimport {\r\n    buildConfiguration,\r\n    resetConfiguration\r\n} from '@actions/configuration';\r\nimport { getPatient } from '@actions/patient';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport STDynamic from '@components/therapist/STDynamic';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STStatic from '@components/therapist/STStatic';\r\n\r\nclass STConfigurationPage extends Component {\r\n    render() {\r\n        if (this.state.redirect) {\r\n            const { tid, pid } = this.props.match.params;\r\n            const url = `/terapeuta/${tid}/pacientes/${pid}/actividades`;\r\n            return <Redirect to={url} push />\r\n        }\r\n\r\n        /** Definir las clases para los botones */\r\n        const buttonStatic = `primary-btn-outline left ${styles.btn} \r\n                                ${this.state.option === 'static' ?\r\n                                styles.btnSelected : ''}`;\r\n\r\n        const buttonDynamic = `primary-btn-outline ${styles.btn} \r\n                                ${this.state.option === 'dynamic' ? \r\n                                styles.btnSelected : ''}`;\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>\r\n                    Configurar una nueva actividad\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    <Button\r\n                        className={buttonStatic}\r\n                        color='primary'\r\n                        name='static'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción estática\r\n                    </Button>\r\n                    <Button\r\n                        className={buttonDynamic}\r\n                        color='primary'\r\n                        name='dynamic'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción dinámica\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    {\r\n                        this.state.option === 'static' ?\r\n                        <STStatic />\r\n                        :\r\n                        <STDynamic />\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.showCreateActivityButton ?\r\n                    <div className={styles.createContainer}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.create}`}\r\n                            onClick={this.onCreateActivityClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='dark' size='sm' />\r\n                                :\r\n                                <span>Crear actividad</span>\r\n                            }\r\n                        </Button>\r\n                    </div> : null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false, \r\n          option: 'static',\r\n          patient: null, \r\n          redirect: false \r\n        };\r\n        this.onCreateActivityClicked = this.onCreateActivityClicked.bind(this);\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.patient === null) {\r\n            const { pid } = this.props.match.params;\r\n            await this.props.getPatient(pid);\r\n        }\r\n        this.setState({ patient: this.props.patient });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetConfiguration();\r\n    }\r\n\r\n    /** Métodos */\r\n    async prepareAndCreateActivity() {\r\n        this.setState({ loading: true });\r\n\r\n        const fields = this.state.option === 'static' ?\r\n                       this.props.static : this.props.dynamic;\r\n\r\n        /** Resetear cualquier configuración previa */\r\n        this.props.resetConfiguration();\r\n        /** Construir la configuración */\r\n        const configuration = this.props.buildConfiguration(\r\n            { fields }, this.state.patient\r\n        );\r\n\r\n        /** Crear la actividad */\r\n        const response = await this.props.createActivity(configuration);\r\n        const { error, message } = response;\r\n\r\n        this.setState({ loading: false, redirect: true });        \r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onCreateActivityClicked() {\r\n        if (!this.state.loading)\r\n            this.prepareAndCreateActivity();\r\n    }\r\n\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic,\r\n        patient: state.patient.patient,\r\n        static: state.static,\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    buildConfiguration,\r\n    createActivity,\r\n    getPatient,\r\n    resetConfiguration,\r\n    setNotification,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STConfigurationPage);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from './types';\r\n\r\nexport const buildConfiguration = (fieldsData, patient) => (dispatch) => {\r\n    const fields = fieldsData.fields;\r\n    const keys = Object.keys(fields);\r\n\r\n    let configuration = {};\r\n    /** Construir la configuración con las opciones seleccionadas */\r\n    keys.forEach(key => {\r\n        const field = fields[key];\r\n        let options = field.options;\r\n        options = Object.values(options);\r\n\r\n        options.forEach(option => {\r\n            /** Verificar que la opción se haya seleccionado */\r\n            if (option.selected) {\r\n                /** Verificar si el field admite múltiples selecciones */\r\n                if (field.multichoice) {\r\n                    /** Verificar si el field ya existe en la configuración */\r\n                    if (configuration[key])\r\n                        /** Si ya existe entonces se anexa la opción */\r\n                        configuration[key].push(option)\r\n                    else\r\n                        /** Si no existe entonces se crea un nuevo array\r\n                         * teniendo como primer elemento la opción\r\n                         */\r\n                        configuration[key] = [option];\r\n                }\r\n                else\r\n                    configuration[key] = option;\r\n            }\r\n        });\r\n    });\r\n\r\n    /** Anexar a la configuración la información del paciente */\r\n    configuration.patient = patient;\r\n\r\n    dispatch({ \r\n        type: SET_CONFIGURATION, \r\n        payload: { configuration }\r\n    });\r\n    \r\n    return configuration;\r\n}\r\n\r\nexport const resetConfiguration = () => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_CONFIGURATION \r\n    });\r\n}","import STConfigurationPage from './STConfigurationPage';\r\nexport default STConfigurationPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener niveles */\r\nexport const getLevels = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/levels` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/levels`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener matches */\r\nexport const getMatches = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) { \r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/matches` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/matches`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener phrases */\r\nexport const getPhrases = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;    \r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/phrases` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/phrases`;\r\n    }    \r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getSecuences = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/secuences` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/secuences`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: SET_FEEDBACK_DATA,\r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener sesiones para histórico de tiempos */\r\nexport const getSessions = (_data) => async (dispatch) => {\r\n    const { pid, startDate, endDate, mid } = _data;\r\n    const url = `${apiURL}/feedback/historical/${pid}/${mid}/sessions` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };        \r\n    };\r\n}\r\n\r\nexport const setFeedData = (feedData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATA, \r\n        payload: { feedData }\r\n    });\r\n}\r\n\r\nexport const setFeedDate = (feedDate) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATE, \r\n        payload: { feedDate }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SDatePicker.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setFeedDate } from '@actions/feedback';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport es from 'date-fns/locale/es';\r\nregisterLocale('es', es);\r\n\r\nclass SDatePicker extends Component {\r\n    render() {\r\n        const { form } = this.props;\r\n        let showMonthYear = true;\r\n        let showYearDropdown = false;\r\n        let style = styles.input;\r\n        let dateFormat = \"MMMM 'de' yyyy\";\r\n        if (form) {\r\n            showMonthYear = false;\r\n            showYearDropdown = true;\r\n            style = styles.completeInput;\r\n            dateFormat = \"dd/MM/yyyy\";\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <DatePicker\r\n                    className={style}\r\n                    dateFormat={dateFormat}\r\n                    locale='es'\r\n                    onChange={this.onDateChanged}\r\n                    popperPlacement='top-end'\r\n                    ref={this.pickerRef}\r\n                    selected={this.state.date}\r\n                    showMonthYearPicker={showMonthYear}\r\n                    showFullMonthYearPicker\r\n                    showYearDropdown={showYearDropdown}\r\n                    scrollableYearDropdown\r\n                    withPortal />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: null };\r\n        this.pickerRef = React.createRef();\r\n        this.onDateChanged = this.onDateChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Deshabilitar el teclado */\r\n        if (this.pickerRef && this.pickerRef.current.input)\r\n            this.pickerRef.current.input.readOnly = true;\r\n        \r\n        const { date, feedDate, form } = this.props;\r\n        this.setState({ date: form ? date : feedDate });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date)\r\n            this.setState({ date: this.props.date });\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDateChanged(date) {\r\n        this.setState({ date });\r\n        const { form, name } = this.props;\r\n        if (form)\r\n            this.props.onChange({ target: { value: date, name }});\r\n        else\r\n            this.props.setFeedDate(date);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedDate: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setFeedDate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SDatePicker);","import SDatePicker from './SDatePicker';\r\nexport default SDatePicker;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { getDatesDifference } from './date&time';\r\n\r\nconst structuresData = {\r\n    Pronombre: { color: 'rgba(248, 196, 113, 0.8)', title: 'Pronombre'},\r\n    Sustantivo: { color: 'rgba(240, 178, 122, 0.8)', title: 'Sustantivo' },\r\n    Adjetivo: { color: 'rgba(127, 179, 213, 0.8)', title: 'Adjetivo' },\r\n    Verbo: { color: 'rgba(115, 198, 182, 0.8)', title: 'Verbo' },\r\n    Artículo: { color: 'rgba(241, 148, 138, 0.8)', title: 'Artículo' },\r\n    Conjunción: { color: 'rgba(247, 220, 111, 0.8)', title: 'Conjunción' },\r\n    Preposición: { color: 'rgba(39, 174, 96, 0.8)', title: 'Preposición' },\r\n};\r\n\r\n/** Funciones públicas */\r\n\r\n/** Construir data para stackbar de palabras */\r\nexport const buildWordHitsData = (data, kind, color) => {\r\n    /** Obtener sólo los registros pertenecientes al tipo correcto */\r\n    const feeds = Object.values(data);\r\n    let records = [];\r\n    feeds.forEach(feed => {\r\n        if (feed.kind === kind) \r\n            records.push(feed);\r\n    });\r\n\r\n    /** Construir los labels a partir de las palabras */\r\n    let labels = [];\r\n    records.forEach(record => {\r\n        if (!labels.includes(record.word)) \r\n            labels.push(record.word);\r\n    });\r\n\r\n    /** Construir porcentajes de aciertos y desaciertos por cada palabra */\r\n    let hits = [];\r\n    let misses = [];\r\n    labels.forEach((label, i) => {\r\n        let wordTotal = 0;\r\n        let hitTotal = 0;\r\n        records.forEach(record => {\r\n            if (record.word === label) {\r\n                /** Contar el número de aciertos */\r\n                if (record.checked) hitTotal += 1;\r\n                wordTotal += 1;\r\n            }            \r\n        });\r\n\r\n        /** Cálculo de porcentajes */\r\n        const hitsPercentage = Math.floor((hitTotal * 100) / wordTotal);\r\n        const missesPercentage = 100 - hitsPercentage;\r\n\r\n        /** Agregar los porcentajes a sus respectivos arrays */\r\n        hits.push(hitsPercentage);\r\n        misses.push(missesPercentage);\r\n        labels[i] = `${label}(${wordTotal})`;\r\n    });\r\n\r\n    /** retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Aciertos',\r\n            data: hits,\r\n            backgroundColor: color\r\n        }, {\r\n            label: 'Desaciertos',\r\n            data: misses,\r\n            backgroundColor: 'rgba(229, 231, 233, 0.7)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Construir data para linebar de palabras */\r\nexport const buildMatchErrorsData = (data, word) => {\r\n    /** Obtener los registros del tipo correcto */\r\n    const matches = Object.values(data);\r\n    let records = [];\r\n    matches.forEach(match => {\r\n        if (match.variable === word)\r\n            records.push(match);\r\n    });\r\n\r\n    /** Construir data */\r\n    let labels = []; /** Apariciones de la variable */\r\n    let occurrence = 1;\r\n    let attempts = [];\r\n    let errors = 0;\r\n    records.forEach(record => {\r\n        /** Verificar si el registro actual fue un match correcto */\r\n        if (record.is_good) {\r\n            /** Si es correcto (orden del siguiente código):\r\n              * a. Guardar una ocurrencia.\r\n              * b. Guardar los errores por intento.\r\n              * c. Sumar la ocurrencia para la siguiente verificación.\r\n              * d. Resetear los errores.\r\n              */\r\n            labels.push(occurrence);\r\n            attempts.push(errors);\r\n\r\n            occurrence += 1;\r\n            if (errors > 0) errors = 0;\r\n        }\r\n        else\r\n            /** Contar el error para la misma ocurrencia */\r\n            errors += 1;\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de errores',\r\n            data: attempts,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** */\r\nexport const buildPhrasesSummary = (groupedPhrases) => {\r\n    /** Contar el porcetaje de frases 100% correctas */\r\n    let hits = 0;\r\n    groupedPhrases.forEach(phrase => {\r\n        if (phrase.percentage === 100)\r\n            hits += 1;\r\n    });\r\n\r\n    /** Calcular porcentajes */\r\n    const totalPhrases = groupedPhrases.length;\r\n    const hitsPercentage = Math.floor((hits * 100) / totalPhrases);\r\n    const errorPencetage = 100 - hitsPercentage;\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        chartData: {\r\n            labels: [ 'Correctas', 'Incorrectas' ],\r\n            datasets: [{\r\n                label: '',\r\n                data: [ hitsPercentage, errorPencetage ],\r\n                backgroundColor: [\r\n                    '#73C6B6',\r\n                    '#E5E7E9'\r\n                ]\r\n            }]\r\n        },\r\n        hits,\r\n        total: totalPhrases\r\n    };\r\n}\r\n\r\n/** Construir los datos de los tiempos a partir de las sesiones */\r\nexport const buildTimes = (data) => {\r\n    const sessions = Object.values(data);\r\n\r\n    let labels = [];\r\n    let minutes = [];\r\n    sessions.forEach(session => {\r\n        /** Obtener la diferencia de tiempos en minutos */\r\n        const diff = getDatesDifference(session.date_start, session.date_end);\r\n\r\n        minutes.push(Math.round(diff.minutes));\r\n        labels.push(`ID ${session.id}`);\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de tiempo',\r\n            data: minutes,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Obtener estructuras trabajadas */\r\nexport const getStructures = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Construir el objeto de estructuras */\r\n    let structures = {};\r\n    phrases.forEach(phrase => {\r\n        /** Incluir el tipo de estructura siempre y cuando no\r\n          * esté presente en el array\r\n          */\r\n        const keys = Object.keys(structures);\r\n        const { kind } = phrase;\r\n        if (!keys.includes(kind))\r\n            structures[kind] = structuresData[kind];\r\n    });\r\n\r\n    /** Retornar como un array */\r\n    return Object.values(structures);\r\n}\r\n\r\n/** Obtener el vocabulario trabajado */\r\nexport const getWords = (matchesData) => {\r\n    const matches = Object.values(matchesData);\r\n\r\n    /** Construir el array de palabras */\r\n    let words = [];\r\n    matches.forEach(match => {\r\n        if (!words.includes(match.variable))\r\n            words.push(match.variable);\r\n    });\r\n\r\n    return words;\r\n}\r\n\r\n/** Agrupar las frases */\r\nexport const groupPhrases = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Agrupar frases con su porcentage de palabras correctas */\r\n    let grouped = [];\r\n    if (phrases.length > 0) {\r\n        let lastPhrase = phrases.shift();\r\n        let words = [ lastPhrase ];\r\n        let hits = lastPhrase.checked ? 1 : 0;\r\n        phrases.forEach((phrase, i) => {\r\n            if (phrase.id_phrase === lastPhrase.id_phrase) {\r\n                words.push(phrase);\r\n                /** Contabilizar correctas */\r\n                if (phrase.checked) hits += 1;\r\n                /** Si el phrase es el último, agregar registro al \r\n                 * array de frases agrupadas\r\n                 */\r\n                if (i === (phrases.length - 1)) {\r\n                    const record = buildRecord(words, hits);\r\n                    grouped.push(record);\r\n                }\r\n            }\r\n            else if (phrase.id_phrase !== lastPhrase.id_phrase) {\r\n                /** Agregar nuevo registro al array de frases agrupadas */\r\n                const record = buildRecord(words, hits);\r\n                grouped.push(record);\r\n\r\n                /** Resetear valores */\r\n                lastPhrase = phrase;\r\n                words = [ lastPhrase ];\r\n                hits = lastPhrase.checked ? 1 : 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    return grouped;\r\n}\r\n\r\n/** Funciones privadas */\r\n\r\n/** Construir un registro */\r\nconst buildRecord = (words, hits) => {\r\n    /** Calcular el porcentaje de palabras correctas */\r\n    const totalWords = words.length;\r\n    const percentage = Math.floor((hits * 100) / totalWords);\r\n    /** Ordenar el array de words */\r\n    words.sort((a, b) => {\r\n        return a.order_phrase > b.order_phrase ? 1 : -1;\r\n    });\r\n\r\n    return { percentage, words };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nconst chartOptions = {\r\n    doughnut: () => {\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        const label = data.labels[tooltipItem.index];\r\n                        const value = data.datasets[0].data[tooltipItem.index];\r\n                        return `${value}% de ${label.toLowerCase()}`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    line: (metric) => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Apariciones del vocabulario' : 'Sesiones'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Número de errores' : 'Minutos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: metric === 'match' ? 1 : 10,\r\n                        max: metric === 'match' ? 10 : 60\r\n                    }\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let label = tooltipItem.yLabel;\r\n                        label = label + `${metric === 'match' ?\r\n                                ' error(es)' : ' minuto(s)'}`;\r\n                                    \r\n                        return label;\r\n\r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        if (metric === 'match') {\r\n                            const label = tooltipItems[0].yLabel;\r\n                            return `${label} error(es) de ${label + 1} intento(s)`\r\n                        }\r\n                        else {\r\n                            const label = tooltipItems[0].xLabel;\r\n                            return `Sesión ${label}`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    stackBar: () => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Palabras asociadas'\r\n                    },\r\n                    stacked: true\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: '% de aciertos/desaciertos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: 10,\r\n                        max: 100\r\n                    },\r\n                    stacked: true\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let yLabel = data.datasets[tooltipItem.datasetIndex].label;\r\n                        return tooltipItem.yLabel + '% de ' +\r\n                                yLabel.toLowerCase();\r\n                                \r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        const split = tooltipItems[0].xLabel.split('(');\r\n                        const word = split[0];\r\n                        const right = split[1];\r\n                        const total = parseInt(right.split(')')[0], 10);\r\n                        const part = Math.round((tooltipItems[0].yLabel) * total / 100);\r\n\r\n                        return `${word}(${part} de ${total})`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default chartOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { buildPhrasesSummary } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { doughnut } = charts;\r\n\r\nclass STDoughnut extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm}\r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n\r\n                    <Doughnut \r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n\r\n                    <div className={styles.percentage}>\r\n                        {this.state.percentage}%\r\n                    </div>\r\n                    <p className={styles.description}>\r\n                        {this.state.description}\r\n                    </p>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            description: '',\r\n            options: doughnut(),\r\n            percentage: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        const { chartData, hits, total } = buildPhrasesSummary(data);\r\n        /** Obtener porcentaje de correctas */\r\n        const { datasets } = chartData;\r\n        const percentage = datasets[0].data[0];\r\n\r\n        const description = `El paciente pronunció correctamente ${hits} ` +\r\n                            `de un total de ${total} frases`;\r\n\r\n        this.setState({ \r\n            chartData,\r\n            description,\r\n            percentage,\r\n        });\r\n    }\r\n}\r\n\r\nexport default STDoughnut;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { getDatesDifference } from '@utils/date&time';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STLevel extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return(\r\n            <Col\r\n                sm={this.props.sm}\r\n                md={this.props.md}\r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <div className='flex'>\r\n                        <div style={{ width: '100%' }}>\r\n                            <div className='flex'>\r\n                                <div className={styles.title}>\r\n                                    Nivel {data.level}\r\n                                </div>\r\n                                <div className={styles.title}>\r\n                                    Sesión {data.id_session}\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.score}>{data.score}</div>\r\n                            <div className={styles.subtitle}>Puntos ganados</div>\r\n                            <div className={`${styles.score} ${styles.mt20}`}>\r\n                                {this.setLevelTime()}\r\n                            </div>\r\n                            <div className={styles.subtitle}>\r\n                                Minutos para terminar nivel\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevelTime() {\r\n        const { date_start, date_end } = this.props.data;\r\n        const diff = getDatesDifference(date_start, date_end).minutes;\r\n        return diff ? Math.round(diff) : 0;\r\n    }\r\n}\r\n\r\nexport default STLevel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { \r\n    buildMatchErrorsData, \r\n    buildTimes \r\n} from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { line } = charts;\r\n\r\nclass STLine extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {\r\n                            this.props.metric === 'match' ?\r\n                            <span>{this.props.title}</span>\r\n                            :\r\n                            <span>Tiempos en minutos</span>\r\n                        }\r\n                    </p>\r\n\r\n                    <Line\r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: line(this.props.metric)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, metric, title } = this.props;\r\n        if (data) {\r\n            const chartData = metric === 'match' ? \r\n                                buildMatchErrorsData(data, title)\r\n                                :\r\n                                buildTimes(data);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STLine;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STPhrases extends Component {\r\n    render() {\r\n        return(\r\n            <Col sm='12' md='7' className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        Palabras correctas por frases\r\n                    </p>\r\n\r\n                    {this.state.phrases.map((phrase, i) => {\r\n                        return (\r\n                            <div className='flex' key={i}>\r\n                                <div className={`flex ${styles.wordsContainer}`}>\r\n                                    {phrase.words.map((word, j) => {\r\n                                        return(\r\n                                            <div\r\n                                                className={styles.word} \r\n                                                key={j}\r\n                                                style={{\r\n                                                    color: word.checked ?\r\n                                                    'black': '#F1948A'\r\n                                                }}>\r\n                                                {word.word}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div className={styles.phrasePercentage}>\r\n                                    {phrase.percentage}%\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phrases: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ phrases: this.props.data });\r\n    }\r\n}\r\n\r\nexport default STPhrases;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { buildWordHitsData } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { stackBar } = charts;\r\n\r\nclass STStackBar extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n                    <Bar\r\n                        data={this.state.chartData}\r\n                        options={this.state.options} \r\n                        height={this.props.height} />\r\n                </SContainer>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: stackBar()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { color, data, title } = this.props;\r\n        if (data) {\r\n            const chartData = buildWordHitsData(data, title, color);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STStackBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @mintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getWords } from '@utils/feedback';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\nimport SEmpty from '@components/shared/SEmpty';\r\n\r\nclass STInGame extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.words && this.state.words.length > 0 ?\r\n                    <Row noGutters>\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Emparejamiento de vocabulario\r\n                            </div>\r\n                        </Col>\r\n                        {this.state.words.map((word, i) => {\r\n                            return <STLine\r\n                                        sm='12'\r\n                                        md='4'\r\n                                        data={this.state.matchesData}\r\n                                        height={230}\r\n                                        key={i}\r\n                                        metric='match'\r\n                                        title={word} />\r\n                        })}\r\n                    </Row>\r\n                    :\r\n                    <SEmpty>\r\n                        No existe información suficiente que permita construir la información \r\n                        solicitada.\r\n                    </SEmpty>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { matchesData: null, words: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const matchesData = feedData.Matches_Feeds;\r\n        if (matchesData) {\r\n            const words = getWords(matchesData);\r\n            this.setState({ matchesData, words });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STInGame);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STLevel from '@components/therapist/charts/STLevel';\r\n\r\nclass STLevels extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Niveles en la sesión\r\n                    </div>\r\n                </Col>\r\n                {this.state.levels.map(level => {\r\n                    return(\r\n                        <STLevel \r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            data={level} \r\n                            key={level.id} />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { levels: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLevels();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setLevels();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevels() {\r\n        const { Levels_Feeds } = this.props.feedData;\r\n        const { levels } = this.state;\r\n        if (Levels_Feeds && levels.length === 0) {\r\n            const levels = Object.values(Levels_Feeds);\r\n            this.setState({ levels });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STLevels);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\n\r\nclass STTimes extends Component {\r\n    render() {\r\n        const { sessionsData } = this.state;\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Tiempos por sesiones de la actividad\r\n                    </div>\r\n                </Col>\r\n                {sessionsData &&\r\n                <STLine\r\n                    sm='12'\r\n                    md='6'\r\n                    data={sessionsData}\r\n                    height={200}\r\n                    metric='time' />}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { sessionsData: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const sessionsData = feedData.Sessions_Feeds;\r\n        if (sessionsData)\r\n            this.setState({ sessionsData });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STTimes);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getStructures, groupPhrases } from '@utils/feedback';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport { \r\n    STDoughnut,\r\n    STPhrases,\r\n    STStackBar \r\n} from '@components/therapist/charts';\r\n\r\nclass STVocalization extends Component {\r\n    render() {\r\n        const { groupedPhrases } = this.state;        \r\n        return(\r\n            <div>\r\n                {\r\n                    groupedPhrases && groupedPhrases.length > 0 ?\r\n                    <Row noGutters>\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Frases trabajadas en la actividad\r\n                            </div>\r\n                        </Col>\r\n                        {groupedPhrases && <STDoughnut \r\n                            sm='12'\r\n                            md='5'\r\n                            data={groupedPhrases}\r\n                            height={160}\r\n                            title='Resumen de las frases' />}\r\n                        {this.props.feedback === 'evolution' && groupedPhrases &&\r\n                            <STPhrases data={groupedPhrases} />}\r\n\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Discriminación por estructura sintáctica\r\n                            </div>\r\n                        </Col>\r\n                        {this.state.structures.map((structure, i) => {\r\n                            return (\r\n                                <STStackBar\r\n                                    sm='12'\r\n                                    md='6'\r\n                                    lg='4'\r\n                                    color={structure.color}\r\n                                    data={this.state.phrasesData}\r\n                                    height={230}\r\n                                    key={i} \r\n                                    title={structure.title} />\r\n                            );\r\n                        })}\r\n                    </Row>\r\n                    :\r\n                    <SEmpty>\r\n                        No existe información suficiente que permita construir la información \r\n                        solicitada.\r\n                    </SEmpty>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupedPhrases: null, \r\n            phrasesData: null, \r\n            structures: [] \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const phrasesData = feedData.Phrases_Feeds;\r\n        if (phrasesData) {\r\n            const groupedPhrases = groupPhrases(phrasesData);\r\n            const structures = getStructures(phrasesData);\r\n            this.setState({ \r\n                groupedPhrases,\r\n                phrasesData, \r\n                structures \r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STVocalization);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const mechanics = {\r\n    1: { \r\n        id: 1, \r\n        name: 'Dominó', \r\n        alias: 'Do', \r\n        semantic_description: 1 \r\n    },\r\n    2: {\r\n        id: 2,\r\n        name: 'Ordenando',\r\n        alias: 'Or',\r\n        semantic_description: 1\r\n    },\r\n    3: {\r\n        id: 3,\r\n        name: 'Secuencia',\r\n        alias: 'Se',\r\n        semantic_description: 2\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedOptions.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STFeedOptions extends Component {\r\n    render() {\r\n        const { option } = this.state;\r\n        const base = `secondary-btn-outline ${styles.btn}`;\r\n        /** Definición de los estilos de los botones */\r\n        let btnVocal = option === 'vocalization' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnMecha = option === 'inGame' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnLevel = option === 'levels' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnTimes = option === 'times' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        /** Deshabilitar botones de acuerdo a la descripción semántica */\r\n        if (this.state.description === 2) {\r\n            btnVocal = `${btnVocal} ${styles.disabled}`;\r\n            btnMecha = `${btnMecha} ${styles.disabled}`;\r\n        }\r\n        \r\n        const { feedback } = this.props;\r\n        let contWidth = 400;\r\n        let btnWidth = 32.5;\r\n        if (feedback === 'historical') {\r\n            contWidth = 500;\r\n            btnWidth = 24.5;\r\n        }\r\n\r\n        return(\r\n            <div \r\n                className={`flex ${styles.btnContainer}`}\r\n                style={{ '--contWidth': `${contWidth}px` }}>\r\n                <Button\r\n                    className={btnVocal}\r\n                    name='vocalization'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    {\r\n                        this.props.windowWidth < 767 &&\r\n                        feedback === 'historical' ?\r\n                        <span className={styles.span}>\r\n                            Vocaliza...\r\n                        </span>\r\n                        :\r\n                        <span className={styles.span}>\r\n                            Vocalización\r\n                        </span>\r\n                    }\r\n                </Button>\r\n                <Button\r\n                    className={btnMecha}\r\n                    name='inGame'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Juego\r\n                </Button>\r\n                <Button\r\n                    className={btnLevel}\r\n                    name='levels'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Niveles\r\n                </Button>\r\n                {feedback === 'historical' && <Button\r\n                    className={btnTimes}\r\n                    name='times'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Tiempos\r\n                </Button>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { description: 1, option: 'vocalization' }\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStateValues();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mechanic !== this.props.mechanic)\r\n            this.setStateValues();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        const { name } = e.target;\r\n        const { description } = this.state;\r\n        this.setState({ option: name });\r\n        this.props.onOptionClicked({ description, option: name });\r\n    }\r\n\r\n    setStateValues() {\r\n        const { feedback } = this.props;\r\n        let description = 1;\r\n        if (feedback === 'historical')\r\n            description = mechanics[this.props.mechanic].semantic_description;\r\n        else\r\n            description = this.props.activity.Mechanic.semantic_description;\r\n\r\n        const option = description === 1 ? 'vocalization' : 'levels';\r\n        this.setState({ description, option });\r\n        this.props.onOptionClicked({ description, option });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STFeedOptions);","import STFeedOptions from './STFeedOptions';\r\nexport default STFeedOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSession.module.css';\r\nimport { Button, Col } from 'reactstrap';\r\nimport { \r\n    getDatesDifference,\r\n    getFormattedDate\r\n } from '@utils/date&time';\r\nimport { connect } from 'react-redux';\r\n\r\nclass STSession extends Component {\r\n    render() {\r\n        /** Configuración del estilo del contenedor */\r\n        const { index, session, sessionSelected } = this.props;\r\n        let container = styles.container;\r\n        let innerContainer = styles.innerContainer;\r\n\r\n        /** Aplicar estilo al primer elemento y último elemento */\r\n        if (index === 0) container = `${container} ${styles.first}`;\r\n        else if (index === 2) container = `${container} ${styles.last}`;\r\n\r\n        if (sessionSelected && session.id === sessionSelected.id)\r\n            innerContainer = `${innerContainer} ${styles.selected}`;\r\n\r\n        return(\r\n            <Col xs='12' sm='6' md='4' className={container}>                \r\n                <Button \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    onClick={this.onClicked}>\r\n                    <div className={innerContainer}>\r\n                        <div className={`flex ${styles.title}`}>\r\n                            <span>Sesión</span>\r\n                            <span>ID: {session.id}</span>\r\n                        </div>\r\n                        <div className={styles.date}>\r\n                            Registro del {this.getFormattedDate(session.date_start)}\r\n                        </div>\r\n                        <div className={styles.time}>\r\n                            {this.getDifference(\r\n                                session.date_start, \r\n                                session.date_end)} minutos\r\n                        </div>\r\n                    </div>\r\n                </Button>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClicked = this.onClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extras */\r\n    /** Obtener la diferencia de tiempos en minutos */\r\n    getDifference(date_start, date_end) {\r\n        const diff = getDatesDifference(date_start, date_end);\r\n        return Math.round(diff.minutes);\r\n    }\r\n\r\n    getFormattedDate(date) {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    onClicked() {\r\n        this.props.onClicked(this.props.session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionSelected: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STSession);","import STSession from './STSession';\r\nexport default STSession;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis \r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSessions.module.css';\r\nimport { Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setSession } from '@actions/activity';\r\n\r\nimport STSession from './STSession';\r\n\r\nclass STSessions extends Component {\r\n    render() {\r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                {\r\n                    this.props.sessions.map((session, i) => {\r\n                        return <STSession \r\n                                    index={i}\r\n                                    key={session.id}\r\n                                    onClicked={this.onSessionClicked}\r\n                                    session={session} />\r\n                    })\r\n                }                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSessionClicked = this.onSessionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const session = this.props.sessions[0];\r\n        this.setSession(session);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onSessionClicked(session) {\r\n        this.setSession(session);\r\n    }\r\n\r\n    setSession(session) {\r\n        this.props.setSession(session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STSessions);","import STSessions from './STSessions';\r\nexport default STSessions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STEvolution.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getLevels, getMatches, getPhrases, getSecuences } from '@actions/feedback';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STSessions from './STSessions';\r\n\r\nclass STEvolution extends Component {\r\n    render() {        \r\n        const sessions = Object.values(this.props.sessions);\r\n        sessions.sort((a, b) => { return a.id < b.id ? 1 : -1; });\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <STSessions sessions={sessions} />\r\n                <STFeedOptions\r\n                    feedback='evolution'\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :                    \r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='evolution' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    <STLevels />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'vocalization' };        \r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.session !== this.props.session)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getFeedback() {\r\n        const { session } = this.props;\r\n        if (session) {\r\n            const { id } = session;\r\n            const { option } = this.state;\r\n            \r\n            this.setState({ loading: true });\r\n            if (option === 'vocalization')\r\n                await this.props.getPhrases({ id });\r\n            else if (option === 'inGame')\r\n                await this.props.getMatches({ id });\r\n            else if (option === 'levels') {\r\n                const { activity: { Mechanic: { semantic_description }}} = this.props;\r\n                if (semantic_description === 1)\r\n                    await this.props.getLevels({ id });\r\n                else\r\n                    await this.props.getSecuences({ id });\r\n            }\r\n            \r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ option: data.option }, () => this.getFeedback());\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        feedData: state.feedback.feedData,\r\n        sessions: state.activity.sessions,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STEvolution);","import STEvolution from './STEvolution';\r\nexport default STEvolution;","import STMechanics from './STMechanics';\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STMechanics.module.css';\r\nimport { Button, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STMechanics extends Component {\r\n    render() {\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                {this.state.mechanics.map(mechanic => {\r\n                    let base = styles.btn;\r\n                    if (mechanic.id === this.state.selected)\r\n                        base = `${base} ${styles.selected}`;\r\n\r\n                    return (\r\n                        <div key={mechanic.id}>\r\n                            <Button\r\n                                className={`ghost-btn ${base}`}\r\n                                id={`utooltip${mechanic.name}`}\r\n                                name={mechanic.id}\r\n                                onClick={this.onMechanicClicked}>\r\n                                {mechanic.alias}\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                                placement='right'\r\n                                target={`utooltip${mechanic.name}`}>\r\n                                {mechanic.name}\r\n                            </UncontrolledTooltip>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            mechanics: Object.values(mechanics),\r\n            selected: 1\r\n        };\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMechanicClicked(e) {\r\n        let { name } = e.target;\r\n        name = parseInt(name, 10);\r\n        this.setState({ selected: name });\r\n        this.props.onMechanicClicked(name);\r\n    }\r\n}\r\n\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STHistorical.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getLevels, \r\n    getMatches, \r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions \r\n} from '@actions/feedback';\r\nimport { getDateBoundaries } from '@utils/date&time';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STTimes,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STMechanics from './STMechanics';\r\n\r\nclass STHistorical extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <STMechanics onMechanicClicked={this.onMechanicClicked} />\r\n                <STFeedOptions\r\n                    feedback='historical'\r\n                    mechanic={this.state.mid}\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='historical' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    this.state.option === 'levels' ?\r\n                    <STLevels />\r\n                    :\r\n                    <STTimes />                        \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            description: 1,\r\n            loading: false, \r\n            mid: 1,\r\n            option: 'vocalization' \r\n        };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { date } = this.props;\r\n        const { mid } = this.state;\r\n        if (date !== prevProps.date || mid !== prevState.mid)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extras */\r\n    async getFeedback() {\r\n        const { date, pid } = this.props;\r\n        const { description, mid, option } = this.state;\r\n        /** Calcular las fechas límites */\r\n        const { startDate, endDate } = getDateBoundaries(date.toISOString());\r\n        const data = { pid, startDate, endDate, mid };\r\n\r\n        this.setState({ loading: true });\r\n        if (option === 'vocalization')\r\n            await this.props.getPhrases(data, true);\r\n        else if (option === 'inGame')\r\n            await this.props.getMatches(data, true);\r\n        else if (option === 'levels') {\r\n            if (description === 1)\r\n                await this.props.getLevels(data, true);\r\n            else\r\n                await this.props.getSecuences(data, true);\r\n        }\r\n        else if (option === 'times')\r\n            await this.props.getSessions(data, true);\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ description: data.description, option: data.option }, \r\n            () => this.getFeedback());\r\n    }\r\n\r\n    onMechanicClicked(mechanic) {\r\n        this.setState({ mid: mechanic });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        date: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STHistorical);","import STHistorical from './STHistorical';\r\nexport default STHistorical;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedbackPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getActivity,\r\n    setActivity,\r\n    setSessions,\r\n    setSession\r\n} from '@actions/activity';\r\nimport { setFeedData } from '@actions/feedback';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STEvolution from '@components/therapist/STEvolution';\r\nimport STHistorical from '@components/therapist/STHistorical';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass STFeedbackPage extends Component {\r\n    render() {\r\n        const { kind, loading } = this.state;\r\n        const title = kind === 'evolución' ?\r\n                        'Evolución por sesiones' : 'Histórico por mes'\r\n        \r\n        const { pid } = this.props.match.params;\r\n        \r\n        return(\r\n            <STLayout page='feedback' pt={50}>\r\n                <div className={`flex ${styles.container}`}>\r\n                    <div className={styles.title}>\r\n                        {title}\r\n                    </div>\r\n                    {kind === 'histórico' && <SDatePicker />}\r\n                </div>\r\n                {\r\n                    loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.sessions && kind === 'evolución' ?\r\n                    <STEvolution />\r\n                    :\r\n                    kind === 'histórico' ?\r\n                    <STHistorical pid={pid} />\r\n                    :\r\n                    null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { kind: 'evolución', loading: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { aid, kind } = this.props.match.params;\r\n        if (kind === 'evolución') \r\n            this.getActivity(aid);\r\n        \r\n        this.setState({ kind });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivity(null);\r\n        this.props.setFeedData(null);\r\n        this.props.setSessions(null);\r\n        this.props.setSession(null);       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getActivity(aid) {\r\n        this.setState({ loading: true });\r\n        await this.props.getActivity(aid);\r\n        this.setFirstSessions();\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    /** Setear las tres primeras sesiones de la actividad */\r\n    setFirstSessions() {\r\n        const { activity } = this.props;\r\n        let sessions = [];\r\n        if (activity) {\r\n            sessions = Object.values(activity.Activities_Sessions);\r\n            sessions.sort((a, b) => { return a.id < b.id ? 1 : -1; });\r\n            sessions = Object.assign({}, ...sessions.slice(0, 3).map(session => {\r\n                return { [session.id]: session };\r\n            }));\r\n        }\r\n        this.props.setSessions(sessions);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        sessions: state.activity.sessions\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    setActivity,\r\n    setFeedData,\r\n    setSessions,\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STFeedbackPage);","import STFeedbackPage from './STFeedbackPage';\r\nexport default STFeedbackPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STLogin.module.css';\r\nimport { \r\n    Button, \r\n    Form, \r\n    FormGroup, \r\n    Input, \r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\n/** Login para el terapeuta */\r\nclass STLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a los pacientes */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/terapeuta/${userId}/pacientes`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.title}>Ingreso</div>\r\n                {this.state.error && <div className={styles.error}>\r\n                    {this.state.error}\r\n                </div>}\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Nombre de usuario</Label>\r\n                        <Input \r\n                            name='username'\r\n                            onChange={this.onInputChanged}\r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Contraseña</Label>\r\n                        <Input\r\n                            name='password'\r\n                            onChange={this.onInputChanged} \r\n                            type='password' />\r\n                        <Button \r\n                            className={`ghost-btn ${styles.btnForgot}`}\r\n                            onClick={this.onForgotClicked}>\r\n                            ¿Olvidaste tu contraseña?\r\n                        </Button>\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`secondary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='dark' size='sm' />\r\n                            :\r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            error: null, \r\n            loading: false,\r\n            password: '', \r\n            userId: null,\r\n            username: '',\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onForgotClicked = this.onForgotClicked.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos */\r\n    onInputChanged(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onForgotClicked(e) {\r\n        e.preventDefault();\r\n        const modal = {\r\n            title: 'Recuperación de la contraseña',\r\n            type: 'forgot_password',\r\n            role: 2\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, THERAPIST);\r\n        let { error, message, userId } = response;\r\n        if (error) error = message;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password.trim() !== '')\r\n                this.onLogin(username, password);\r\n            else\r\n                this.setState({ \r\n                    error: 'El usuario y la contraseña son obligatorios' \r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login,\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STLogin);","import STLogin from './STLogin';\r\nexport default STLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport STLogin from '@components/therapist/STLogin';\r\n\r\n/** Página Landing del terapeuta */\r\nclass STLandingPage extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12' md='6'>\r\n                </Col>\r\n                <Col sm='12' md='6'>\r\n                    <div \r\n                        className='flex' \r\n                        style={{\r\n                            alignItems: 'flex-start', \r\n                            justifyContent: 'center',\r\n                            height: `calc(100vh - ${vOffset}px)`\r\n                        }}>\r\n                        <STLogin />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STLandingPage);","import STLandingPage from './STLandingPage';\r\nexport default STLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSearch.module.css';\r\nimport { Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { getPatients } from '@actions/patient';\r\nimport { getUsers } from '@actions/user';\r\n\r\nclass SSearch extends Component {\r\n    render() {\r\n        let searchContainer = styles.searchContainer;\r\n        if (this.props.patients)\r\n            searchContainer = `${searchContainer} ${styles.marginTop}`;\r\n\r\n        return(\r\n            <div className={`flex ${searchContainer}`}>\r\n                <FontAwesomeIcon \r\n                    className={styles.searchIcon}\r\n                    icon={faSearch} />\r\n                <Input \r\n                    className={styles.search}\r\n                    type='text'\r\n                    placeholder='Busca por nombre o identificación'\r\n                    onChange={this.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async onChange({ target: { value }}) {\r\n        const { patients } = this.props;\r\n        if (patients) {\r\n            const userId = patients === 'my' ? this.props.userId : null;\r\n            await this.props.getPatients(userId, value);\r\n        }\r\n        else\r\n            await this.props.getUsers(value);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    getUsers\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SSearch);","import SSearch from './SSearch';\r\nexport default SSearch;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatient.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createPatient, removePatient } from '@actions/patient';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STPatient extends Component {\r\n    render() {\r\n        const { userId, patient } = this.props;\r\n        const { id } = patient;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Link\r\n                    className={`ghost-btn ${styles.link}`}\r\n                    to={`/terapeuta/${userId}/pacientes/${id}/actividades`}>\r\n                    <div className={`flex ${styles.height} ${styles.padding}`}>\r\n                        <div className='flex'>\r\n                            {\r\n                                patient.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${patient.profile_img}`} />\r\n                                :\r\n                                <div\r\n                                    className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                    style={{ backgroundColor: patient.color}}>\r\n                                    { patient.thumbnail_alias }\r\n                                </div>\r\n                            }\r\n                            <div className={styles.padding}>\r\n                                <div className={styles.uname}>\r\n                                    { patient.name }&nbsp; \r\n                                    { patient.last_name }\r\n                                </div>\r\n                                <div className={styles.uinfo}>\r\n                                    Paciente desde el {this.getFormattedDate(patient.createdAt)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Button \r\n                            className={`ghost-btn ${this.state.check}`}\r\n                            onClick={this.onAssignPatientClicked}>\r\n                            <FontAwesomeIcon \r\n                                icon={faCheckCircle} \r\n                                size='2x' />\r\n                        </Button>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { check: styles.btn };\r\n        this.onAssignPatientClicked = this.onAssignPatientClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCheck();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setCheck();\r\n    }\r\n\r\n    /** Métodos */\r\n    checkTherapist(userId, patient) {\r\n        /** \r\n         * Verificar si el terapeuta asignado es el mismo terapeuta\r\n         * logueado \r\n         */\r\n        if (patient.Therapists) {\r\n            if (patient.Therapists[userId])\r\n                return true;\r\n        }\r\n        else if (patient.Therapists_Patients) {\r\n            if (userId === patient.Therapists_Patients.id_therapist)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    async onAssignPatientClicked(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const { userId, patient } = this.props;\r\n        if (this.checkTherapist(userId, patient))\r\n            await this.props.removePatient(userId, patient.id);\r\n        else\r\n            await this.props.createPatient(userId, patient.id);\r\n    }\r\n\r\n    setCheck() {\r\n        const { userId, patient } = this.props;\r\n        const check = this.checkTherapist(userId, patient) ?\r\n                      styles.btnActive : styles.btn;\r\n\r\n        if (check !== this.state.check)\r\n            this.setState({ check });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createPatient,\r\n    removePatient,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STPatient);","import STPatient from './STPatient';\r\nexport default STPatient;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatientsPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatients, setPatients } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STPatient from '@components/therapist/STPatient';\r\n\r\nclass STPatientsPage extends Component {\r\n    render() {\r\n        /** Definir las clases para los botones */\r\n        const buttonMy = `primary-btn-outline left ${styles.btn} \r\n                            ${this.state.option === 'my' ? \r\n                            styles.btnSelected : ''}`;\r\n\r\n        const buttonAll = `primary-btn-outline ${styles.btn} \r\n                            ${this.state.option === 'all' ?\r\n                            styles.btnSelected : ''}`;\r\n\r\n        let { patients } = this.props;\r\n        patients = patients ? Object.values(this.props.patients) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Pacientes</div>\r\n                <div className={`flex ${styles.searchContainer}`}>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button\r\n                            className={buttonMy}\r\n                            name='my'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Mis pacientes\r\n                        </Button>\r\n                        <Button\r\n                            className={buttonAll}\r\n                            name='all'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Todos los pacientes\r\n                        </Button>\r\n                    </div>\r\n                    <SSearch \r\n                        patients={this.state.option}\r\n                        userId={this.state.userId} />\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        patients && patients.length > 0 ?\r\n                        patients.map(patient => {\r\n                            return(\r\n                                <STPatient\r\n                                    key={patient.id} \r\n                                    patient={patient}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        : \r\n                        <SEmpty>\r\n                            No se encontraron pacientes. Recuerda que puedes\r\n                            asignarte pacientes en la opción Todos los pacientes.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'my', userId: null };\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ userId: this.props.match.params.tid }, () => {\r\n            this.getPatientsList(this.state.userId);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPatients(null);\r\n    }\r\n\r\n    /** Métodos */\r\n    async getPatientsList(userId) {\r\n        this.setState({ loading: true });\r\n        await this.props.getPatients(userId);\r\n\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionSelected(e) {\r\n        this.setState({ option: e.target.name }, () => {\r\n            let userId = this.state.option === 'my' ? this.state.userId : null;\r\n            this.getPatientsList(userId);\r\n        });\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        patients: state.patient.patients,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    setPatients\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STPatientsPage);","import STPatientsPage from './STPatientsPage';\r\nexport default STPatientsPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUser.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { setToUpdate } from '@actions/user';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SAUser extends Component {\r\n    render() {\r\n        const { userId, user } = this.props;\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={`flex`}>\r\n                    {\r\n                        user.profile_img ?\r\n                        <img\r\n                            alt=''\r\n                            className={styles.uimage}\r\n                            src={`${serverURL}${user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                            style={{ backgroundColor: user.color }}>\r\n                            { user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                    <div className={styles.infoContainer}>\r\n                        <div className={styles.name}>\r\n                            { user.name } {user.last_name}\r\n                        </div>\r\n                        <div className={styles.identification}>\r\n                            ID { user.id }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className={`ghost-btn ${styles.btnEdit}`}\r\n                    onClick={this.onLinkClicked}\r\n                    to={`/terapeuta/${userId}/editar/${user.id}`}>\r\n                    <FontAwesomeIcon icon={faEdit} size='lg' />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        this.props.setToUpdate(this.props.user);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SAUser);","import SAUser from './SAUser';\r\nexport default SAUser;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUsersPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, setUsers } from '@actions/user';\r\n\r\nimport SAUser from '@components/admin/SAUser';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass SAUsersPage extends Component {\r\n    render() {\r\n        const { tid } = this.props.match.params;\r\n        let { users } = this.props;\r\n        users = users ? Object.values(users) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Todos los usuarios</div>\r\n                <div className={`flex ${styles.toolsContainer}`}>\r\n                    <SSearch />\r\n                    <Link to={`/terapeuta/${tid}/nuevo`}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.btnCreate}`}>\r\n                            Nuevo\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        users.length > 0 ?\r\n                        users.map(user => {\r\n                            return <SAUser \r\n                                admin={true}\r\n                                key={user.id} \r\n                                user={user}\r\n                                userId={tid} />\r\n                        })\r\n                        :\r\n                        <SEmpty>\r\n                            No se han encontrado usuarios en el sistema.\r\n                            Recuerda que como administrador puedes crear \r\n                            usuarios nuevos\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setUsers(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getAllUsers() {\r\n        this.setState({ loading: true });\r\n        await this.props.getUsers();\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUsers,\r\n    setUsers\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUsersPage);","import SAUsersPage from './SAUsersPage';\r\nexport default SAUsersPage;","import SAImageLoader from './SAImageLoader';\r\nexport default SAImageLoader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAImageLoader.module.css';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SAImageLoader extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={`flex ${styles.iconContainer}`}>\r\n                        { !this.state.encodedImage && <FontAwesomeIcon \r\n                            className={styles.icon}\r\n                            icon={faImage}\r\n                            size='3x' /> }\r\n                        <canvas\r\n                          style={{ display: this.state.encodedImage ? 'block' : 'none' }} \r\n                          ref={this.canvasRef} />\r\n                        <img \r\n                            alt=''\r\n                            className={styles.hiddenImage} \r\n                            ref={this.imageRef}\r\n                            src='' />\r\n                    </div>\r\n                </div>\r\n                <p className={styles.text}>\r\n                    Si lo deseas puedes agregar una imagen de perfil\r\n                </p>\r\n                <FormGroup>\r\n                    <Input\r\n                        className={styles.hidden}\r\n                        onChange={this.onFileChanged} \r\n                        type='file' \r\n                        id='profilePicture' />\r\n                    <Label\r\n                        className={`secondary-btn ${styles.btnFile}`} \r\n                        for='profilePicture'>\r\n                        Agregar Imagen\r\n                    </Label>\r\n                </FormGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { encodedImage: null };\r\n      this.canvasRef = React.createRef();\r\n      this.imageRef = React.createRef();\r\n\r\n      this.onFileChanged = this.onFileChanged.bind(this);\r\n      this.onFileReaderLoaded = this.onFileReaderLoaded.bind(this);\r\n      this.onImageLoaded = this.onImageLoaded.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    \r\n    /** Método que detecta cuando hay un cambio en el input de tipo file */\r\n    onFileChanged(e) {\r\n      const file = e.target.files[0];    \r\n      if (!file) return;\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = this.onFileReaderLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de un archivo en el FileReader */\r\n    onFileReaderLoaded(e) {\r\n      this.imageRef.current.src = e.target.result;\r\n      this.imageRef.current.onload = this.onImageLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de la imagen en el tag img */\r\n    onImageLoaded(e) {\r\n      const MAX_WIDTH = 180;\r\n      const MAX_HEIGHT = 180;\r\n\r\n      /** Calcular el valor de la escala para respetar el aspect ratio */\r\n      const scale = e.target.width > e.target.height && e.target.width > MAX_WIDTH ? MAX_WIDTH / e.target.width :\r\n                    e.target.height > MAX_HEIGHT ? MAX_HEIGHT / e.target.height : \r\n                    1;\r\n\r\n      /** Asignar el tamaño del canvas */\r\n      this.canvasRef.current.width = e.target.width * scale;\r\n      this.canvasRef.current.height = e.target.height * scale;\r\n\r\n      /** Obtener el contexto 2d del canvas, dibujar la imagen y obtener imagen codificada */\r\n      const context = this.canvasRef.current.getContext('2d');\r\n      context.drawImage(e.target, 0, 0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n      const encodedImage = context.canvas.toDataURL(e.target, 'image/png');\r\n\r\n      this.setState({ encodedImage }, () => { \r\n        this.canvasRef.current.toBlob((blob) => {\r\n          this.props.onImageLoaded(blob);\r\n        }); \r\n      });\r\n    }\r\n}\r\n\r\nexport default SAImageLoader;","import SCheckField from './SCheckField';\r\nexport default SCheckField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SCheckField = (props) => {\r\n    return(\r\n        <FormGroup check>\r\n            <Input \r\n                type='checkbox'\r\n                name={props.name}\r\n                checked={props.checked}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n            <Label>{props.children}</Label>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SCheckField;","import SDateField from './SDateField';\r\nexport default SDateField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Label } from 'reactstrap';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\n\r\nconst SDateField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <SDatePicker\r\n                date={props.date}\r\n                form={true}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SDateField;","import SSelectField from './SSelectField';\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SSelectField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <Input\r\n                type='select'\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}>\r\n                {props.options.map((opt, i) => {\r\n                    return <option key={i} value={opt.value}>\r\n                        {opt.title}\r\n                    </option>\r\n                })}\r\n            </Input>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const genders = [\r\n    { title: 'Femenino', value: 'F' },\r\n    { title: 'Masculino', value: 'M' }\r\n];\r\n\r\nexport const users = [\r\n    { title: 'Paciente', value: 1 },\r\n    { title: 'Terapeuta', value: 2 }\r\n];","import SAUserForm from './SAUserForm';\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Form, Row } from 'reactstrap';\r\n\r\nimport SCheckField from '@components/shared/form/SCheckField';\r\nimport SDateField from '@components/shared/form/SDateField';\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSelectField from '@components/shared/form/SSelectField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nimport { genders, users } from '@data/form';\r\nimport { checkUserFields } from '@utils/user';\r\n\r\nclass SAUserForm extends Component {\r\n    render() {\r\n        const disabled = this.props.update ? true : false;\r\n        return(\r\n            <Form>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.name.error}\r\n                            name='name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.name.value}>\r\n                            Nombre *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.last_name.error}\r\n                            name='last_name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.last_name.value}>\r\n                            Apellido *\r\n                        </SInputField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField \r\n                    error={this.state.email.error} \r\n                    name='email' \r\n                    onChange={this.onChange}\r\n                    value={this.state.email.value}>\r\n                    Email *\r\n                </SInputField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField\r\n                            disabled={disabled} \r\n                            error={this.state.id.error}\r\n                            name='id'\r\n                            onChange={this.onChange}\r\n                            value={this.state.id.value}>\r\n                            Identificación *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SDateField\r\n                            date={this.state.birthday_date.value}\r\n                            name='birthday_date'\r\n                            onChange={this.onChange}>\r\n                            Fecha de nacimiento *\r\n                        </SDateField>\r\n                    </Col>\r\n                </Row>\r\n                <SSelectField\r\n                    name='gender'\r\n                    onChange={this.onChange}\r\n                    options={genders}\r\n                    value={this.state.gender.value}>\r\n                    Género *\r\n                </SSelectField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.username.error}\r\n                            name='username'\r\n                            onChange={this.onChange}\r\n                            value={this.state.username.value}>\r\n                            Nombre de usuario *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SSelectField\r\n                            name='id_role'\r\n                            onChange={this.onChange}\r\n                            options={users}\r\n                            value={this.state.id_role.value}>\r\n                            Tipo de usuario *\r\n                        </SSelectField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField\r\n                    error={this.state.password.error}\r\n                    form='admin'\r\n                    name='password'\r\n                    onChange={this.onChange}\r\n                    value={this.state.password.value}>\r\n                    Contraseña *\r\n                </SInputField>\r\n                <SCheckField \r\n                    name='active'\r\n                    checked={this.state.active.value}\r\n                    onChange={this.onChange}>\r\n                    ¿Este usuario está activo?\r\n                </SCheckField>\r\n                {this.state.id_role.value === 2 && <SCheckField \r\n                    name='is_admin'\r\n                    checked={this.state.is_admin.value}\r\n                    onChange={this.onChange} >\r\n                    ¿Este usuario es administrador?\r\n                </SCheckField>}\r\n                <SSubmitField\r\n                    className='secondary-btn mt-4 w-100'\r\n                    loading={this.props.loading}\r\n                    onClick={this.onSaveClicked}>\r\n                    Guardar\r\n                </SSubmitField>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: { value: true },\r\n            birthday_date: { value: new Date() },\r\n            email: { value: '', error: null },\r\n            gender: { value: 'F' },\r\n            id: { value: '', error: null },\r\n            is_admin: { value: false },\r\n            last_name: { value: '', error: null },\r\n            name: { value: '', error: null },\r\n            password: { value: '', error: null },\r\n            username: { value: '', error: null },\r\n            id_role: { value: 1 },\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user && this.props.user !== prevProps.user)\r\n            this.setState({...this.props.user});\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildUserData() {\r\n        const keys = Object.keys(this.state);\r\n        let userData = {};\r\n        keys.forEach(key => {\r\n            let { value } = this.state[key];\r\n            if (key === 'name' || key === 'last_name' || key === 'email' ||\r\n                key === 'id' || key === 'username' || key === 'password')\r\n                value = value.trim();\r\n\r\n            userData[key] = value;\r\n        });\r\n\r\n        return userData;\r\n    }\r\n\r\n    onChange(e) {\r\n        let { name, value } = e.target;\r\n        if (name === 'active' || name === 'is_admin')\r\n            value = !this.state[name].value;\r\n        else if (name === 'id_role') \r\n            value = parseInt(value, 10);\r\n\r\n        /** Asignar el valor y resetear el error */\r\n        let field = this.state[name];\r\n        field.value = value;\r\n        if (field.error) field.error = null;\r\n        \r\n        this.setState({ [name]: field });\r\n    }\r\n\r\n    onSaveClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.props.loading) {\r\n            const { update } = this.props;\r\n            const check = checkUserFields(this.state, update);\r\n            if (!check.hasErrors) {\r\n                const userData = this.buildUserData();\r\n                this.props.onSave(userData);\r\n            }\r\n            else\r\n                this.setState({...check.user});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUpdateUserPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getUser,\r\n    updateUser,\r\n    setToUpdate \r\n} from '@actions/user';\r\nimport { register } from '@actions/auth';\r\nimport { uploadProfileImage } from '@actions/plugin';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SAImageLoader from '@components/admin/SAImageLoader';\r\nimport SAUserForm from '@components/admin/SAUserForm';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nimport { buildRandomColor, buildUserAlias } from '@utils/user';\r\n\r\nclass SAUpdateUserPage extends Component {\r\n    render() {\r\n        const { uid } = this.props.match.params;\r\n        const title = uid ? 'Editar usuario' : 'Crear usuario';\r\n        const { update, user } = this.state;\r\n        \r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>{title}</div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.formContainer}>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <SAImageLoader onImageLoaded={this.onImageLoaded} />\r\n                            </Col>\r\n                            <Col md={8}>\r\n                                <p className={styles.userData}>\r\n                                    Datos del usuario\r\n                                </p>\r\n                                <SAUserForm \r\n                                    loading={this.state.loading}\r\n                                    onSave={this.onSave}\r\n                                    update={update}\r\n                                    user={user} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { image: null, loading: false, update: false, user: null };\r\n        this.onImageLoaded = this.onImageLoaded.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { uid } = this.props.match.params;\r\n        if (this.props.toUpdate)\r\n            this.prepareUserForUpdate();\r\n        else if (uid)\r\n            this.getUserToUpdate(uid);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.toUpdate && !this.state.user)\r\n            this.prepareUserForUpdate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setToUpdate(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getUserToUpdate(id) {\r\n        this.props.getUser(id, true);\r\n    }\r\n\r\n    prepareUserForUpdate() {\r\n        const { toUpdate } = this.props;\r\n        const user = {\r\n            id: { value: toUpdate.id, error: null },\r\n            active: { value: toUpdate.active },\r\n            birthday_date: { value: new Date(toUpdate.birthday_date) },\r\n            email: { value: toUpdate.email, error: null },\r\n            gender: { value: toUpdate.gender },\r\n            is_admin: { value: toUpdate.is_admin },\r\n            last_name: { value: toUpdate.last_name, error: null },\r\n            name: { value: toUpdate.name, error: null },\r\n            username: { value: toUpdate.username, error: null },\r\n            id_role: { value: toUpdate.Role.id },\r\n        };\r\n        this.setState({ update: true, user });\r\n    }        \r\n\r\n    /** Eventos */\r\n    onImageLoaded(image) {\r\n      this.setState({ image });\r\n    }\r\n\r\n    async onSave(formData) {\r\n        let userData = Object.assign({}, formData);\r\n        if (userData.password.trim() === '') delete userData.password;\r\n\r\n        /** Completar algunos campos */\r\n        const alias = buildUserAlias(userData.name, userData.last_name);\r\n        userData['thumbnail_alias'] = alias;\r\n            \r\n        const { update } = this.state;\r\n        if (!update) { /** Crear usuario */\r\n            userData['color'] = buildRandomColor();\r\n            if (userData.id_role === 2)\r\n                userData['id_avatar_variation'] = 1;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n        /** Si se seleccionó una imagen, guardarla en el backend y obtener el path */\r\n        if (this.state.image) {\r\n          const blob = this.state.image;\r\n          const name = `${formData.username}.png`;\r\n          const res = await this.props.uploadProfileImage(blob, name);\r\n          if (!res.error) {\r\n            const { path } = res.data;\r\n            userData['profile_img'] = path;\r\n          }\r\n        }\r\n\r\n        const { tid } = this.props.match.params;        \r\n        const response = update ? \r\n                         await this.props.updateUser(userData, tid) \r\n                         :\r\n                         await this.props.register(userData);\r\n            \r\n        const { error, message } = response;\r\n        \r\n        this.setState({ loading: false });\r\n        this.props.setNotification({ error, message, slide: true });\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toUpdate: state.user.toUpdate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    register,\r\n    updateUser,\r\n    uploadProfileImage,\r\n    setNotification,\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUpdateUserPage);","import SAUpdateUserPage from './SAUpdateUserPage';\r\nexport default SAUpdateUserPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  showMobileMenu, \r\n  setFullScreen, \r\n  setNotification,\r\n  setWindowWidth, \r\n  setVOffset \r\n} from '@actions/ui';\r\nimport { ping, setConnectedId } from '@actions/connection';\r\nimport Speaker from '@utils/Speaker';\r\nimport Messenger from '@utils/Messenger';\r\nimport ServerStatus from '@utils/ServerStatus';\r\n\r\n/** Import de componentes */\r\nimport SAvatar from '@components/shared/SAvatar';\r\nimport SBubbleNotification from '@components/shared/SBubbleNotification';\r\nimport SHeaderBar from '@components/shared/SHeaderBar';\r\nimport SMobileAvatar from '@components/mobile/SMobileAvatar';\r\nimport SMobileMenu from '@components/mobile/SMobileMenu';\r\nimport SModal from '@components/shared/SModal';\r\nimport SProtectedRoute from '@components/SProtectedRoute';\r\n\r\n/** Importar pages */\r\nimport SLandingPage from '@pages/shared/SLandingPage';\r\nimport SProfilePage from '@pages/shared/SProfilePage';\r\nimport SPActivitiesPage from '@pages/patient/SPActivitiesPage';\r\nimport SPCollectableInfoPage from '@pages/patient/SPCollectableInfoPage';\r\nimport SPCollectionsPage from '@pages/patient/SPCollectionsPage';\r\nimport SPLandingPage from '@pages/patient/SPLandingPage';\r\nimport SPPlayPage from '@pages/patient/SPPlayPage';\r\nimport STActivitiesPage from '@pages/therapist/STActivitiesPage';\r\nimport STConfigurationPage from '@pages/therapist/STConfigurationPage';\r\nimport STFeedbackPage from '@pages/therapist/STFeedbackPage';\r\nimport STLandingPage from '@pages/therapist/STLandingPage';\r\nimport STPatientsPage from '@pages/therapist/STPatientsPage';\r\nimport SAUsersPage from '@pages/admin/SAUsersPage';\r\nimport SAUpdateUserPage from '@pages/admin/SAUpdateUserPage';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.ui.parallax && <div className='App-parallax-bg'></div>}\r\n        <SHeaderBar />\r\n        {\r\n          /** Bloque para mostrar el avatar */\r\n          this.props.ui.showAvatar ?\r\n            this.props.ui.windowWidth >= 768 ?\r\n            <div \r\n              className='flex avatar-container'\r\n              style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n              <SAvatar />\r\n            </div>\r\n            : <SMobileAvatar />\r\n          : null\r\n        }\r\n        { this.props.ui.modal && <SModal /> }\r\n        { /** Bloque para mostrar el menú móvil */\r\n          this.props.ui.showMobileMenu && <SMobileMenu /> }\r\n        \r\n        { /** Bloque para mostrar las notificaciones */ \r\n          this.props.ui.notification &&\r\n          <SBubbleNotification /> }\r\n        \r\n        {/** Rutas */}\r\n        <Container \r\n          className='App-container' \r\n          fluid \r\n          style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n          <Switch>\r\n            <Route exact path='/' component={SLandingPage} />\r\n\r\n            {/** Rutas para paciente */}\r\n            <Route\r\n              exact \r\n              path='/paciente' \r\n              component={SPLandingPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades'\r\n              component={SPActivitiesPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones'\r\n              component={SPCollectionsPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones/:id/coleccionable/:cid'\r\n              component={SPCollectableInfoPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades/:aid/sesiones/:sid'\r\n              component={SPPlayPage} />\r\n\r\n            {/** Rutas para terapeuta */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/perfil'\r\n              component={SProfilePage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes/:pid/actividades'\r\n              component={STActivitiesPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/configuracion' \r\n              component={STConfigurationPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:aid/:kind'\r\n              component={STFeedbackPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:kind'\r\n              component={STFeedbackPage} />\r\n            <Route\r\n              exact \r\n              path='/terapeuta' \r\n              component={STLandingPage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes' \r\n              component={STPatientsPage} />\r\n            \r\n            {/** Rutas relacionadas al administrador */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/admin'\r\n              component={SAUsersPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/nuevo'\r\n              component={SAUpdateUserPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/terapeuta/:tid/editar/:uid'\r\n              component={SAUpdateUserPage} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.calculateVOffset = this.calculateVOffset.bind(this);\r\n    this.setWindowSize = this.setWindowSize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.setWindowSize);\r\n    this.calculateVOffset(window.innerWidth);\r\n    Speaker.init('es-MX');\r\n    this.status = new ServerStatus(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) { \r\n      this.calculateVOffset(window.innerWidth);\r\n\r\n      const { connectSocket, checkServerStatus } = this.props.connection;\r\n      if (connectSocket !== prevProps.connection.connectSocket)\r\n        Messenger.handleConnection(this.props.connection, this);\r\n      \r\n      if (checkServerStatus !== prevProps.connection.checkServerStatus)\r\n        this.checkServerStatus(checkServerStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.setWindowSize);\r\n  }\r\n\r\n  /** Métodos extra */\r\n  calculateVOffset(windowWidth) {\r\n    const vOffset = this.props.ui.showAvatar && windowWidth < 768 ? 182 : 62;\r\n    if (!this.props.ui.vOffset || vOffset !== this.props.ui.vOffset) \r\n      this.props.setVOffset(vOffset);\r\n  }\r\n\r\n  checkServerStatus(check) {\r\n    this.status.checkServerStatus(check, false, Messenger);\r\n  }\r\n\r\n  setWindowSize() {\r\n    const windowWidth = window.innerWidth;\r\n    this.props.setWindowWidth(windowWidth);\r\n    if (windowWidth >= 768) this.props.showMobileMenu(false);\r\n    this.calculateVOffset(windowWidth);\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    connection: state.connection,\r\n    ui: state.ui,\r\n  };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  ping,\r\n  setConnectedId,\r\n  showMobileMenu,\r\n  setFullScreen,\r\n  setNotification,\r\n  setVOffset,\r\n  setWindowWidth,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(App);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    REMOVE_ACTIVITY,\r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY, \r\n    SET_SELECTED_SESSION,\r\n    SET_SESSIONS,\r\n    UPDATE_ACTIVITY,\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    activities: null,\r\n    activity: null,\r\n    sessions: null,\r\n    session: null\r\n};\r\n\r\nconst activityReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ACTIVITY:\r\n            const activityId = action.payload.id;\r\n            let activitiesForRemoval = state.activities;            \r\n            delete activitiesForRemoval[activityId];\r\n\r\n            /** Si el objto de actividades no tiene información, igualarlo a valor nulo */\r\n            if (Object.values(activitiesForRemoval).length === 0) activitiesForRemoval = null;\r\n\r\n            return { ...state, activities: activitiesForRemoval };\r\n\r\n        case SET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload.activities\r\n            };\r\n\r\n        case SET_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                activity: action.payload.activity\r\n            };\r\n        \r\n        case SET_SESSIONS:\r\n            return {\r\n                ...state,\r\n                sessions: action.payload.sessions\r\n            };\r\n        \r\n        case SET_SELECTED_SESSION: {\r\n            return {\r\n                ...state,\r\n                session: action.payload.session\r\n            };\r\n        }\r\n\r\n        case UPDATE_ACTIVITY:\r\n            const updatedActivity = action.payload.activity;\r\n            const id = updatedActivity.id;\r\n            let activitiesForUpdate = state.activities;\r\n\r\n            activitiesForUpdate[id] = updatedActivity;\r\n\r\n            return { ...state, activities: activitiesForUpdate };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activityReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from '../actions/types';\r\n\r\nimport { PATIENT, THERAPIST } from '@data/roles';\r\n\r\nconst PATIENT_TOKEN = `${PATIENT}Token`;\r\nconst THERAPIST_TOKEN = `${THERAPIST}Token`;\r\n\r\nlet initialState = {\r\n    [PATIENT_TOKEN]: localStorage.getItem(PATIENT_TOKEN) || null,\r\n    [THERAPIST_TOKEN]: localStorage.getItem(THERAPIST_TOKEN) || null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PATIENT_TOKEN:\r\n            return {\r\n                ...state,\r\n                [PATIENT_TOKEN]: action.payload.token\r\n            };\r\n\r\n        case SET_THERAPIST_TOKEN:\r\n            return {\r\n                ...state,\r\n                [THERAPIST_TOKEN]: action.payload.token\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    message: null,\r\n    variations: null,\r\n}\r\n\r\nconst avatarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AVATAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            };\r\n\r\n        case SET_AVATAR_VARIATION:\r\n            const { variation } = action.payload;\r\n            let variations  = Object.values(state.variations);\r\n            /** Recorrer las variaciones */\r\n            let index = 0;\r\n            variations.forEach((v, i) => {\r\n                if (variation.id === v.id && variation.id_avatar === v.id_avatar)\r\n                    index = i;\r\n            });\r\n            /** Reemplazar la variación */\r\n            variations[index] = variation;\r\n\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n\r\n            return { ...state, variations };\r\n\r\n        case SET_AVATAR_VARIATIONS:\r\n            return {\r\n                ...state,\r\n                variations: action.payload.variations\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default avatarReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKIN_OWNED,\r\n    SET_USER_SKINS_OWNED,\r\n} from \"../actions/types\";\r\n\r\nlet initialState = {\r\n    collections: null,\r\n    collectable: null,\r\n};\r\n\r\nconst collectionReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_COLLECTIONS:\r\n            return {\r\n                ...state,\r\n                collections: action.payload.collections\r\n            };\r\n\r\n        \r\n        case SET_COLLECTABLE:\r\n            return {\r\n                ...state,\r\n                collectable: action.payload.collectable\r\n            };\r\n\r\n\r\n        case SET_USER_SKIN_OWNED:\r\n            const data = action.payload.data;\r\n            const collectableId = data.collectableId;\r\n            const collectionId = data.collectionId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const collections = state.collections;\r\n            const collection = collections[collectionId];\r\n            const Collectables = collection.Collectables;\r\n            const collectable = Collectables[collectableId];\r\n            const Skins = collectable.Skins;\r\n\r\n            return {\r\n                ...state,\r\n                collections: {\r\n                    ...collections,\r\n                    [collectionId]: {\r\n                        ...collection,\r\n                        Collectables: {\r\n                            ...Collectables,\r\n                            [collectableId]: {\r\n                                ...collectable,\r\n                                Skins: {\r\n                                    ...Skins,\r\n                                    owned: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        \r\n        case SET_USER_SKINS_OWNED:\r\n            const _data = action.payload.data;\r\n            const _skinId = _data.skinId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const _collectable = state.collectable;\r\n            const _Skins = _collectable.Skins;\r\n            const skin = _Skins[_skinId];\r\n\r\n            return {\r\n                ...state,\r\n                collectable: {\r\n                    ..._collectable,\r\n                    Skins: {\r\n                        ..._Skins,\r\n                        [_skinId]: {\r\n                            ...skin,\r\n                            owned: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default collectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    configuration: null\r\n}\r\n\r\nconst configurationReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case RESET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: null\r\n            };\r\n        \r\n        case SET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: action.payload.configuration\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default configurationReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    checkServerStatus: false,\r\n    connectedId: null,\r\n    connectSocket: false\r\n};\r\n\r\nconst connectionReducer = (state = initialState, action) => {\r\n    switch (action.type) {        \r\n        case SET_CHECK_SERVER_STATUS:\r\n            return {\r\n                ...state,\r\n                checkServerStatus: action.payload.check\r\n            };\r\n\r\n        case SET_CONNECTED_ID:\r\n            return {\r\n                ...state,\r\n                connectedId: action.payload.connectedId\r\n            };\r\n            \r\n        case SET_CONNECT_SOCKET:\r\n            return {\r\n                ...state,\r\n                connectSocket: action.payload.connectSocket\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default connectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        first: true,\r\n        multichoice: false,\r\n        next: 'situations',\r\n        options: null,\r\n        reset: [ 'situations', 'times', 'reader' ], \r\n        subtitle: `Selecciona la mecánica de la actividad que deseas trabajar\r\n                    con tu paciente. Esta selección desbloquea las situaciones\r\n                    que se pueden trabajar en la actividad.`,\r\n        title: '1. Mecánica de la actividad',\r\n    },\r\n    situations: {\r\n        id: 'situations',\r\n        multichoice: false,\r\n        next: 'times',\r\n        options: null,\r\n        required: [ 'mechanic' ],\r\n        reset: [ 'times', 'reader' ],\r\n        subtitle: `Elige una situación particular para trabajar en la actividad.\r\n                    Esta selección desbloquea los tiempos gramaticales.`,\r\n        title: '2. Situaciones',\r\n    },\r\n    times: {\r\n        id: 'times',\r\n        multichoice: false,\r\n        next: 'reader',\r\n        options: null,\r\n        reset: [ 'reader' ],\r\n        subtitle: `Selecciona el tiempo gramatical (pasado, presente, futuro...)\r\n                    que deseas trabajar en la actividad.`,\r\n        title: '3. Tiempos gramaticales',\r\n    },\r\n    reader: {\r\n        id: 'reader',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        reset: null,\r\n        subtitle: `Selecciona si tu paciente cuenta con proceso lector o no.`,\r\n        title: '4. ¿El paciente cuenta con proceso lector?',\r\n    }\r\n}\r\n\r\nconst dynamicReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n\r\n    switch(action.type) {\r\n        case RESET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            /** Obtener la lista de opciones del field */\r\n            let options = Object.values({ ...field.options });\r\n            let optionId = action.payload.optionId;\r\n            /** Marcar como seleccionada la opción elegida */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dynamicReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    feedDate: new Date(),\r\n    feedData: null\r\n};\r\n\r\nconst feedbackReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_FEEDBACK_DATA:\r\n            return {\r\n                ...state,\r\n                feedData: action.payload.feedData\r\n            };\r\n        \r\n        case SET_FEEDBACK_DATE:\r\n            return {\r\n                ...state,\r\n                feedDate: action.payload.feedDate\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default feedbackReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    patients: null,\r\n    patient: null,\r\n};\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_PATIENT:\r\n            const { _association } = action.payload;\r\n            /** Obtener los ids de la asociación */\r\n            const { _id_therapist, _id_patient } = _association;\r\n            const _patient = state.patients[_id_patient];\r\n\r\n            /** Verificar que opción está teniendo lugar */\r\n            if (_patient.Therapists_Patients) { /** my */\r\n                let _patients = { ...state.patients };\r\n                delete _patients[_id_patient];\r\n\r\n                return { ...state, patients: _patients };\r\n            }\r\n            else { /** all */\r\n                let _Therapists = { ..._patient.Therapists };\r\n                delete _Therapists[_id_therapist];\r\n                \r\n                return {\r\n                    ...state, patients: {\r\n                        ...state.patients, [_id_patient]: {\r\n                            ..._patient, 'Therapists': _Therapists\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n        \r\n        case SET_PATIENT:\r\n            const { association } = action.payload;\r\n            const { id_therapist, id_patient } = association;\r\n            const patient = state.patients[id_patient];\r\n            const { Therapists } = patient;\r\n\r\n            return {\r\n                ...state, patients: {\r\n                    ...state.patients, [id_patient]: {\r\n                        ...patient, 'Therapists': {\r\n                            ...Therapists, [id_therapist]: association\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        \r\n        case SET_PATIENTS:\r\n            return {\r\n                ...state,\r\n                patients: action.payload.patients\r\n            }\r\n\r\n        case SET_SELECTED_PATIENT:\r\n            return {\r\n                ...state,\r\n                patient: action.payload.patient\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default patientReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    ADD_STATIC_SELECTED_OPTION,   \r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    category: {\r\n        id: 'category',\r\n        first: true,\r\n        next: 'subcategory',\r\n        multichoice: false,\r\n        options: null,\r\n        reset: [ 'subcategory', 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una categoría semántica para desbloquear la opción\r\n                    Subcategoría semántica.`,\r\n        title: '1. Categoría semántica',\r\n    },\r\n    subcategory: {\r\n        id: 'subcategory',\r\n        multichoice: false,\r\n        next: 'sintactic',\r\n        options: null,\r\n        required: [ 'category' ],\r\n        reset: [ 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una de las subcategorías semánticas asociadas a la\r\n                    categoría semántica elegida. Esta selección desbloquea la\r\n                    opción Estructura sintáctica.`,\r\n        title: '2. Subcategoría semántica',\r\n    },\r\n    sintactic: {\r\n        id: 'sintactic',\r\n        multichoice: false,\r\n        next: 'vocabulary',\r\n        options: null,\r\n        reset: [ 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige la estructura sintáctica que deseas trabajar con tu\r\n                    paciente y desbloquea el vocabulario asociado.`,\r\n        title: '3. Estructura sintáctica',\r\n    },\r\n    vocabulary: {\r\n        id: 'vocabulary',\r\n        minimum: 3,\r\n        multichoice: true,\r\n        next: 'mechanic',\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: [ 'mechanic' ],\r\n        subtitle: `Elige las palabras asociadas que quieres trabajar con tu\r\n                    paciente en la actividad (mínimo 3). Al elegir el vocabulario\r\n                    se desbloquea la mecánica de la actividad.`,\r\n        title: '4. Vocabulario asociado',\r\n    },\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: null,\r\n        subtitle: `Elige la mecánica de la actividad que deseas trabajar con\r\n                    tu paciente.`,\r\n        title: '5. Mecánica de la actividad',\r\n    }\r\n}\r\n\r\nconst staticReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n    let optionId;\r\n    let options;\r\n\r\n    switch(action.type) {\r\n        case ADD_STATIC_SELECTED_OPTION:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            optionId = action.payload.optionId;\r\n            options = { ...field.options };\r\n\r\n            /** Marcar como seleccionada o no la opción elegida */\r\n            let option = options[optionId];\r\n            option.selected = option.selected ? !option.selected: true;\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        case RESET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n        \r\n        case SET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_STATIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            optionId = action.payload.optionId;\r\n\r\n            field = state[fieldId];\r\n            options = Object.values({ ...field.options });\r\n            /** Remover las selecciones */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n            /** Convertir las opciones a un objeto */\r\n            options = Object.assign({}, ...options.map((option) => {\r\n                return { [option.id]: option };\r\n            }));\r\n\r\n            return {\r\n                ...state,\r\n                [field.id]: { ...field, options } \r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staticReducer;","/**\r\n * @author Martín Vladimir Alonsos Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU,\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    bar: 'standard',\r\n    fullScreen: false,\r\n    modal: null,\r\n    notification: null,\r\n    parallax: false,\r\n    showAvatar: false,\r\n    showCreateActivityButton: false,\r\n    showMobileMenu: false,\r\n    vOffset: null,\r\n    windowWidth: window.innerWidth\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_BAR:\r\n            return {\r\n                ...state,\r\n                bar: action.payload.bar\r\n            };\r\n            \r\n        case SET_FULLSCREEN:\r\n            return {\r\n                ...state,\r\n                fullScreen: action.payload.fullScreen\r\n            };\r\n\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.payload.modal\r\n            };\r\n        \r\n        case SET_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: action.payload.notification\r\n            };\r\n\r\n        case SET_PARALLAX:\r\n            return {\r\n                ...state,\r\n                parallax: action.payload.parallax\r\n            };\r\n\r\n        case SET_V_OFFSET:\r\n            return {\r\n                ...state,\r\n                vOffset: action.payload.vOffset\r\n            };\r\n\r\n        case SET_WINDOW_WIDTH:\r\n            return {\r\n                ...state,\r\n                windowWidth: action.payload.width\r\n            };\r\n\r\n        case SHOW_AVATAR:\r\n            return {\r\n                ...state,\r\n                showAvatar: action.payload.show\r\n            }\r\n\r\n        case SHOW_CREATE_ACTIVITY_BUTTON:\r\n            return {\r\n                ...state,\r\n                showCreateActivityButton: action.payload.show\r\n            };\r\n        \r\n        case SHOW_MOBILE_MENU:\r\n            return {\r\n                ...state,\r\n                showMobileMenu: action.payload.show\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    user: null,\r\n    users: null,\r\n    toUpdate: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            };\r\n\r\n        case SET_TO_UPDATE:\r\n            return {\r\n                ...state,\r\n                toUpdate: action.payload.user\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { combineReducers } from 'redux';\r\n/** Imports de los reducers */\r\nimport activityReducer from './activity';\r\nimport authReducer from './auth';\r\nimport avatarReducer from './avatar';\r\nimport collectionReducer from './collection';\r\nimport configurationReducer from './configuration';\r\nimport connectionReducer from './connection';\r\nimport dynamicReducer from './dynamic';\r\nimport feedbackReducer from './feedback';\r\nimport patientReducer from './patient';\r\nimport staticReducer from './static';\r\nimport uiReducer from './ui';\r\nimport userReducer from './user';\r\n\r\n/** Combinar reducers */\r\nconst allReducers = combineReducers({\r\n    activity: activityReducer,\r\n    auth: authReducer,\r\n    avatar: avatarReducer,\r\n    collection: collectionReducer,\r\n    configuration: configurationReducer,\r\n    connection: connectionReducer,\r\n    dynamic: dynamicReducer,\r\n    feedback: feedbackReducer,\r\n    patient: patientReducer,\r\n    static: staticReducer,\r\n    ui: uiReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default allReducers;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst composedEnhancers = composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\n/** Crear el store de redux */\r\nconst store = createStore(\r\n    allReducers,\r\n    composedEnhancers,\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"STActivityButtons_comments__1F8al\",\"container\":\"STActivityButtons_container__1PhPU\",\"delete\":\"STActivityButtons_delete__2Uhk7\",\"ml\":\"STActivityButtons_ml__2AZ8H\",\"mr\":\"STActivityButtons_mr__ZNUXu\",\"btn\":\"STActivityButtons_btn__3YbeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STFeedOptions_btn__lNh_P\",\"btnContainer\":\"STFeedOptions_btnContainer__VPsem\",\"disabled\":\"STFeedOptions_disabled__1icUf\",\"selected\":\"STFeedOptions_selected__1wOWG\",\"span\":\"STFeedOptions_span__d7zy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SUserNav_container__piflN\",\"link\":\"SUserNav_link__1lXdk\",\"uimage\":\"SUserNav_uimage__JCXUR\",\"thumb\":\"SUserNav_thumb__2Xh2m\",\"linksContainer\":\"SUserNav_linksContainer__1HsbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenu_container__2Yxhb\",\"image\":\"SMenu_image__3j8T_\",\"item\":\"SMenu_item__2y48J\",\"menu\":\"SMenu_menu__1wwem\",\"name\":\"SMenu_name__2VPRa\",\"toggle\":\"SMenu_toggle__3ImI5\",\"thumb\":\"SMenu_thumb__1bxk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPCollectable_btn__3F17S\",\"btnBuy\":\"SPCollectable_btnBuy__11AV6\",\"cannotBuy\":\"SPCollectable_cannotBuy__214jT\",\"collectableImg\":\"SPCollectable_collectableImg__3cZqV\",\"container\":\"SPCollectable_container__CqgDH\",\"info\":\"SPCollectable_info__3Xpgw\",\"owned\":\"SPCollectable_owned__2OLUo\",\"name\":\"SPCollectable_name__3fJXU\",\"points\":\"SPCollectable_points__HH131\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STConfigurationPage_btn__2Q1aY\",\"btnContainer\":\"STConfigurationPage_btnContainer__2lvgp\",\"btnSelected\":\"STConfigurationPage_btnSelected__3TLjP\",\"container\":\"STConfigurationPage_container__1SfrO\",\"create\":\"STConfigurationPage_create__V1e0R\",\"createContainer\":\"STConfigurationPage_createContainer__ejmW4\",\"title\":\"STConfigurationPage_title__SAFHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STSession_btn__1HRAO\",\"container\":\"STSession_container__3BTNV\",\"date\":\"STSession_date__1obRt\",\"first\":\"STSession_first__305GI\",\"innerContainer\":\"STSession_innerContainer__267Re\",\"last\":\"STSession_last__9rLEC\",\"selected\":\"STSession_selected__3sDgP\",\"time\":\"STSession_time__AqmmZ\",\"title\":\"STSession_title__3nRh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Feedback_subtitle__2jAva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SBubbleNotification_border__2HzhK\",\"container\":\"SBubbleNotification_container__1FKzp\",\"containerDesktop\":\"SBubbleNotification_containerDesktop__rEvZS\",\"slide\":\"SBubbleNotification_slide__1vY3y\",\"containerMobile\":\"SBubbleNotification_containerMobile__3rxZT\",\"slide-mobile\":\"SBubbleNotification_slide-mobile__1HxUQ\",\"error\":\"SBubbleNotification_error__30IdJ\",\"iconContainer\":\"SBubbleNotification_iconContainer__3mpCw\",\"message\":\"SBubbleNotification_message__3kJu1\",\"success\":\"SBubbleNotification_success__6BfMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"SMobileAvatar_buttons__18icT\",\"buttonIcon\":\"SMobileAvatar_buttonIcon__2LFyT\",\"buttonMargin\":\"SMobileAvatar_buttonMargin__2iV89\",\"container\":\"SMobileAvatar_container__Dg-y0\",\"image\":\"SMobileAvatar_image__kQP3-\",\"message\":\"SMobileAvatar_message__1VqAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SAvatarInfo_description__3-0RK\",\"title\":\"SAvatarInfo_title__2_kr2\",\"image\":\"SAvatarInfo_image__33PTx\",\"avatarSide\":\"SAvatarInfo_avatarSide__2ypT8\",\"container\":\"SAvatarInfo_container__1oU3a\",\"innerContainer\":\"SAvatarInfo_innerContainer__DZUKW\",\"sides\":\"SAvatarInfo_sides__2mJaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alias\":\"SUserHero_alias__30gX0\",\"col\":\"SUserHero_col__2-y6V\",\"container\":\"SUserHero_container__2HQOn\",\"header\":\"SUserHero_header__208gI\",\"row\":\"SUserHero_row__2JNLW\",\"userContainer\":\"SUserHero_userContainer__2iKG9\",\"uimage\":\"SUserHero_uimage__1pTXn\",\"uname\":\"SUserHero_uname__ahWoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPActivity_btn__31_lh\",\"btnContainer\":\"SPActivity_btnContainer__kCgAz\",\"container\":\"SPActivity_container__DgMeO\",\"gameContainer\":\"SPActivity_gameContainer__3PhTU\",\"gameDescription\":\"SPActivity_gameDescription__WhuKO\",\"gameTitle\":\"SPActivity_gameTitle__2kzT7\",\"gameImage\":\"SPActivity_gameImage__2yi6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSelected\":\"STPatientsPage_btnSelected__1YXjO\",\"listContainer\":\"STPatientsPage_listContainer__2Gd2S\",\"searchContainer\":\"STPatientsPage_searchContainer__3wZs0\",\"title\":\"STPatientsPage_title__ShvPl\",\"btn\":\"STPatientsPage_btn__3XsPy\",\"btnContainer\":\"STPatientsPage_btnContainer__2U2bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnEdit\":\"SAUser_btnEdit__31k6p\",\"container\":\"SAUser_container__3jGeH\",\"identification\":\"SAUser_identification__10yNg\",\"infoContainer\":\"SAUser_infoContainer__1c1tt\",\"name\":\"SAUser_name__2r1LZ\",\"thumb\":\"SAUser_thumb__3j8ix\",\"uimage\":\"SAUser_uimage__12AXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFile\":\"SAImageLoader_btnFile__yC3tC\",\"container\":\"SAImageLoader_container__1TFBc\",\"hidden\":\"SAImageLoader_hidden__22hCG\",\"hiddenImage\":\"SAImageLoader_hiddenImage__5cF78\",\"icon\":\"SAImageLoader_icon__gFXGj\",\"iconContainer\":\"SAImageLoader_iconContainer__1f591\",\"innerContainer\":\"SAImageLoader_innerContainer__wBoVn\",\"text\":\"SAImageLoader_text__nMsm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"SAvatar_buttons__2B6eR\",\"buttonIcon\":\"SAvatar_buttonIcon__1Rwdk\",\"container\":\"SAvatar_container__1p6Ra\",\"image\":\"SAvatar_image__f6nMg\",\"message\":\"SAvatar_message__36pWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SDevelop_container__HmJ_4\",\"innerContainer\":\"SDevelop_innerContainer__1B2tR\",\"icon\":\"SDevelop_icon__3Z57o\",\"logoImage\":\"SDevelop_logoImage__3Nyb1\",\"logoContainer\":\"SDevelop_logoContainer__2JtP6\",\"text\":\"SDevelop_text__19GGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SProfilePage_btn__1Wku0\",\"container\":\"SProfilePage_container__2q-hR\",\"selected\":\"SProfilePage_selected__1AZjc\",\"options\":\"SProfilePage_options__pByhO\",\"optContainer\":\"SProfilePage_optContainer__1jqmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alt\":\"SSkinItem_alt__cvVGs\",\"btn\":\"SSkinItem_btn__100ay\",\"btnContainer\":\"SSkinItem_btnContainer__1G1SF\",\"cannotBuy\":\"SSkinItem_cannotBuy__1dO63\",\"collectableImg\":\"SSkinItem_collectableImg__1L6kx\",\"container\":\"SSkinItem_container__26nnT\",\"owned\":\"SSkinItem_owned__3WvlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STLogin_btn__3Kn5c\",\"btnForgot\":\"STLogin_btnForgot__1z5Kc\",\"container\":\"STLogin_container__2KaZ9\",\"error\":\"STLogin_error__1NxeV\",\"label\":\"STLogin_label__3ot6S\",\"title\":\"STLogin_title__zrpZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapse\":\"SNav_collapse__2uCCs\",\"container\":\"SNav_container__3BYn3\",\"link\":\"SNav_link__2b-Aa\",\"nav\":\"SNav_nav__2ju7l\",\"navItem\":\"SNav_navItem__3yLMc\",\"toggler\":\"SNav_toggler___z89_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenuHeader_container__2AI3m\",\"email\":\"SMenuHeader_email__24phy\",\"image\":\"SMenuHeader_image__1tOAl\",\"name\":\"SMenuHeader_name__1VaY3\",\"thumb\":\"SMenuHeader_thumb__2X4El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SMobileMenu_btn__7TQ_l\",\"container\":\"SMobileMenu_container__jacuL\",\"linksContainer\":\"SMobileMenu_linksContainer__2x0sy\",\"menu\":\"SMobileMenu_menu__1s-WZ\",\"menuAppear\":\"SMobileMenu_menuAppear__nI2vG\",\"appearing\":\"SMobileMenu_appearing__1o-EH\",\"menuDissapear\":\"SMobileMenu_menuDissapear__1w5mU\",\"dissapearing\":\"SMobileMenu_dissapearing__1bsOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"microphone\":\"SNewComment_microphone__3_DNE\",\"microphoneText\":\"SNewComment_microphoneText__3dwnG\",\"notRecording\":\"SNewComment_notRecording__1vp6P\",\"recorderContainer\":\"SNewComment_recorderContainer__3VwhL\",\"recorded\":\"SNewComment_recorded__2zZxO\",\"recording\":\"SNewComment_recording__AsgWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMobile_container__oh5ja\",\"description\":\"SMobile_description__14LjU\",\"image\":\"SMobile_image__117mR\",\"imageContainer\":\"SMobile_imageContainer__PDg_q\",\"innerContainer\":\"SMobile_innerContainer__3ytUQ\",\"title\":\"SMobile_title__1WjAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectableInfoPage_container__2pREu\",\"description\":\"SPCollectableInfoPage_description__n43HH\",\"descriptionTitle\":\"SPCollectableInfoPage_descriptionTitle__1RUq-\",\"score\":\"SPCollectableInfoPage_score__3U68g\",\"scoreIcon\":\"SPCollectableInfoPage_scoreIcon__1_uQE\",\"title\":\"SPCollectableInfoPage_title__1O5Jn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPLogin_btn__2waK7\",\"btnForgot\":\"SPLogin_btnForgot__3PghZ\",\"container\":\"SPLogin_container__3hPDj\",\"error\":\"SPLogin_error__h3n93\",\"label\":\"SPLogin_label__3v4FC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SHeaderBar_bar__1eNh0\",\"logo\":\"SHeaderBar_logo__3n5pz\",\"navbrand\":\"SHeaderBar_navbrand__1-Xwa\",\"patientBar\":\"SHeaderBar_patientBar__3eQ_s\",\"standardBar\":\"SHeaderBar_standardBar__3xag7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SLandingPage_container__K3tRn\",\"features\":\"SLandingPage_features__21L35\",\"featuresTitle\":\"SLandingPage_featuresTitle__MBjjQ\",\"mainIdea\":\"SLandingPage_mainIdea__1bR4Q\",\"mainPhrase\":\"SLandingPage_mainPhrase__1dI-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeature_container__3-EK4\",\"description\":\"SFeature_description__3okm9\",\"infoContainer\":\"SFeature_infoContainer__zhU2k\",\"logo\":\"SFeature_logo__fkInR\",\"title\":\"SFeature_title__3GzMp\"};"],"sourceRoot":""}