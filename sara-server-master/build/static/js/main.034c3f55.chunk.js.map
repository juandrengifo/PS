{"version":3,"sources":["components/shared/SFooterBar/SFooterBar.module.css","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.module.css","components/patient/SPCollection/SPCollection.module.css","components/patient/SPLogin/SPLogin.module.css","components/shared/SPassword/SPPassButton/SPPassButton.module.css","components/therapist/STField/STOption/STOption.module.css","components/shared/SSearch/SSearch.module.css","pages/admin/SAUsersPage/SAUsersPage.module.css","pages/admin/SAUpdateUserPage/SAUpdateUserPage.module.css","components/shared/SAvatar/SAvatar.module.css","components/mobile/SMobileAvatar/SMobileAvatar.module.css","components/shared/SModal/SModal.module.css","components/shared/SVideo/SVideo.module.css","components/landing/SFeatures/SFeatures.module.css","components/layout/STLayout/STLayout.module.css","components/layout/SPLayout/SPLayout.module.css","components/shared/SPassword/SPassword.module.css","components/therapist/STHistorical/STMechanics/STMechanics.module.css","components/therapist/STAvatarPanel/STAvatarPanel.module.css","components/shared/SCarousel/SCarousel.module.css","components/shared/SCarousel/SAvatarIem/SAvatarItem.module.css","pages/patient/SPActivitiesPage/SPActivitiesPage.module.css","components/shared/SEmpty/SEmpty.module.css","pages/patient/SPCollectionsPage/SPCollectionsPage.module.css","pages/therapist/STFeedbackPage/STFeedbackPage.module.css","components/shared/SDatePicker/SDatePicker.module.css","components/shared/SMenuLink/SMenuLink.module.css","pages/patient/SPPlayPage/SPPlayPage.module.css","components/therapist/STEvolution/STEvolution.module.css","components/therapist/STEvolution/STSessions/STSessions.module.css","components/therapist/STHistorical/STHistorical.module.css","components/therapist/charts/Charts.module.css","components/therapist/STPatient/STPatient.module.css","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.module.css","components/landing/SHero/SHero.module.css","components/therapist/STActivity/STActivity.module.css","components/therapist/feedback/STFeedOptions/STFeedOptions.module.css","store/actions/types.js","store/actions/ui.js","store/actions/connection.js","utils/Speaker.js","utils/Messenger.js","utils/ServerStatus.js","components/shared/SAvatar/SAvatar.jsx","components/shared/SAvatar/index.js","components/shared/SBubbleNotification/SBubbleNotification.jsx","components/shared/SBubbleNotification/index.js","components/shared/SHeaderBar/SNav/SNav.jsx","components/shared/SHeaderBar/SNav/index.js","data/roles.js","components/shared/SMenuHeader/SMenuHeader.jsx","components/shared/SMenuHeader/index.js","store/actions/auth.js","components/shared/SMenuLink/SMenuLink.jsx","components/shared/SMenuLink/index.js","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.jsx","components/shared/SHeaderBar/SUserNav/SMenu/index.js","components/shared/SHeaderBar/SUserNav/SUserNav.jsx","components/shared/SHeaderBar/SUserNav/index.js","components/shared/SHeaderBar/SHeaderBar.jsx","components/shared/SHeaderBar/index.js","components/mobile/SMobileAvatar/SMobileAvatar.jsx","components/mobile/SMobileAvatar/index.js","components/mobile/SMobileMenu/SMobileMenu.jsx","components/mobile/SMobileMenu/index.js","store/actions/activity.js","components/shared/form/SSubmitField/SSubmitField.jsx","components/shared/form/SSubmitField/index.js","components/shared/SModal/SNewComment/SNewComment.jsx","components/shared/SModal/SNewComment/index.js","components/shared/SVideo/SVideo.jsx","components/shared/SVideo/index.js","components/shared/SModal/SModal.jsx","components/shared/SModal/index.js","store/actions/user.js","components/SProtectedRoute/SProtectedRoute.jsx","components/SProtectedRoute/index.js","components/landing/SAvatarInfo/SAvatarInfo.jsx","components/landing/SAvatarInfo/index.js","components/landing/SDevelop/SDevelop.jsx","components/landing/SDevelop/index.js","components/landing/SFeatures/SFeature/SFeature.jsx","components/landing/SFeatures/SFeature/index.js","components/landing/SFeatures/SFeatures.jsx","components/landing/SFeatures/index.js","components/shared/SFooterBar/SFooterBar.jsx","components/shared/SFooterBar/index.js","components/landing/SHero/SHero.jsx","components/landing/SHero/index.js","components/landing/SMobile/SMobile.jsx","components/landing/SMobile/index.js","data/features.js","pages/shared/SLandingPage/SLandingPage.jsx","pages/shared/SLandingPage/index.js","store/actions/avatar.js","components/shared/SCarousel/SAvatarIem/SAvatarItem.jsx","components/shared/SCarousel/SAvatarIem/index.js","store/actions/collection.js","components/shared/SCarousel/SSkinItem/SSkinItem.jsx","components/shared/SCarousel/SSkinItem/index.js","components/shared/SCarousel/SCarousel.jsx","components/shared/SCarousel/index.js","components/shared/SContainer/SContainer.jsx","components/shared/SContainer/index.js","data/customizer.js","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.jsx","components/therapist/STAvatarPanel/STACustomizer/index.js","components/therapist/STAvatarPanel/STAvatarPanel.jsx","components/therapist/STAvatarPanel/index.js","components/layout/STLayout/STLayout.jsx","components/layout/STLayout/index.js","components/shared/SUserHero/index.js","components/shared/SUserHero/SUserHero.jsx","pages/shared/SProfilePage/SProfilePage.jsx","pages/shared/SProfilePage/index.js","components/shared/SEmpty/index.js","components/shared/SEmpty/SEmpty.jsx","components/patient/SPActivity/SPActivity.jsx","components/patient/SPActivity/index.js","components/layout/SPLayout/SPLayout.jsx","components/layout/SPLayout/index.js","components/shared/SSpinner/index.js","components/shared/SSpinner/SSpinner.jsx","data/messages.js","pages/patient/SPActivitiesPage/SPActivitiesPage.jsx","pages/patient/SPActivitiesPage/index.js","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.jsx","pages/patient/SPCollectableInfoPage/index.js","components/patient/SPCollection/SPCollectable/SPCollectable.jsx","components/patient/SPCollection/SPCollectable/index.js","components/patient/SPCollection/index.js","components/patient/SPCollection/SPCollection.jsx","pages/patient/SPCollectionsPage/SPCollectionsPage.jsx","pages/patient/SPCollectionsPage/index.js","components/shared/SPassword/SPPassButton/index.js","components/shared/SPassword/SPPassButton/SPPassButton.jsx","components/shared/SPassword/index.js","components/shared/SPassword/SPassword.jsx","components/patient/SPLogin/SPLogin.jsx","components/patient/SPLogin/index.js","pages/patient/SPLandingPage/SPLandingPage.jsx","pages/patient/SPLandingPage/index.js","components/shared/SFullScreen/index.js","components/shared/SFullScreen/SFullScreen.jsx","pages/patient/SPPlayPage/SPPlayPage.jsx","pages/patient/SPPlayPage/index.js","store/actions/patient.js","utils/date&time.js","components/therapist/STActivity/STActivityButtons/STActivityButtons.jsx","components/therapist/STActivity/STActivityButtons/index.js","components/therapist/STActivity/STSyntacticCircle/SSyntacticCircle.jsx","components/therapist/STActivity/STSyntacticCircle/index.js","components/therapist/STActivity/index.js","components/therapist/STActivity/STActivity.jsx","pages/therapist/STActivitiesPage/STActivitiesPage.jsx","pages/therapist/STActivitiesPage/index.js","components/therapist/STField/STOption/STOption.jsx","components/therapist/STField/STOption/index.js","components/therapist/STField/STField.jsx","components/therapist/STField/index.js","components/therapist/STDynamic/STDynamicField/STDynamicField.jsx","store/actions/dynamic.js","components/therapist/STDynamic/STDynamicField/index.js","components/therapist/STDynamic/STDynamic.jsx","components/therapist/STDynamic/index.js","store/actions/static.js","components/therapist/STStatic/STStaticField/STStaticField.jsx","components/therapist/STStatic/STStaticField/index.js","components/therapist/STStatic/STStatic.jsx","components/therapist/STStatic/index.js","pages/therapist/STConfigurationPage/STConfigurationPage.jsx","store/actions/configuration.js","pages/therapist/STConfigurationPage/index.js","store/actions/feedback.js","components/shared/SDatePicker/SDatePicker.jsx","components/shared/SDatePicker/index.js","utils/feedback.js","data/charts.js","components/therapist/charts/STDoughnut.jsx","components/therapist/charts/STLevel.jsx","components/therapist/charts/STLine.jsx","components/therapist/charts/STPhrases.jsx","components/therapist/charts/STStackBar.jsx","components/therapist/feedback/STInGame.jsx","components/therapist/feedback/STLevels.jsx","components/therapist/feedback/STTimes.jsx","components/therapist/feedback/STVocalization.jsx","data/mechanics.js","components/therapist/feedback/STFeedOptions/STFeedOptions.jsx","components/therapist/feedback/STFeedOptions/index.js","components/therapist/STEvolution/STSessions/STSession/STSession.jsx","components/therapist/STEvolution/STSessions/STSession/index.js","components/therapist/STEvolution/STSessions/STSessions.jsx","components/therapist/STEvolution/STSessions/index.js","components/therapist/STEvolution/STEvolution.jsx","components/therapist/STEvolution/index.js","components/therapist/STHistorical/STMechanics/index.js","components/therapist/STHistorical/STMechanics/STMechanics.jsx","components/therapist/STHistorical/STHistorical.jsx","components/therapist/STHistorical/index.js","pages/therapist/STFeedbackPage/STFeedbackPage.jsx","pages/therapist/STFeedbackPage/index.js","components/therapist/STLogin/STLogin.jsx","components/therapist/STLogin/index.js","pages/therapist/STLandingPage/STLandingPage.jsx","pages/therapist/STLandingPage/index.js","components/shared/SSearch/SSearch.jsx","components/shared/SSearch/index.js","components/therapist/STPatient/STPatient.jsx","components/therapist/STPatient/index.js","pages/therapist/STPatientsPage/STPatientsPage.jsx","pages/therapist/STPatientsPage/index.js","components/admin/SAUser/SAUser.jsx","components/admin/SAUser/index.js","pages/admin/SAUsersPage/SAUsersPage.jsx","pages/admin/SAUsersPage/index.js","components/admin/SAImageLoader/index.js","components/admin/SAImageLoader/SAImageLoader.jsx","components/shared/form/SCheckField/index.js","components/shared/form/SCheckField/SCheckField.jsx","components/shared/form/SDateField/index.js","components/shared/form/SDateField/SDateField.jsx","components/shared/form/SInputField/index.js","components/shared/form/SInputField/SInputField.jsx","components/shared/form/SSelectField/index.js","components/shared/form/SSelectField/SSelectField.jsx","data/form.js","utils/user.js","components/admin/SAUserForm/index.js","components/admin/SAUserForm/SAUserForm.jsx","pages/admin/SAUpdateUserPage/SAUpdateUserPage.jsx","store/actions/plugin.js","pages/admin/SAUpdateUserPage/index.js","App.js","store/reducers/activity.js","store/reducers/auth.js","store/reducers/avatar.js","store/reducers/collection.js","store/reducers/configuration.js","store/reducers/connection.js","store/reducers/dynamic.js","store/reducers/feedback.js","store/reducers/patient.js","store/reducers/static.js","store/reducers/ui.js","store/reducers/user.js","store/reducers/index.js","store/index.js","index.js","components/shared/SHeaderBar/SUserNav/SUserNav.module.css","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.module.css","pages/therapist/STActivitiesPage/STActivitiesPage.module.css","pages/therapist/STConfigurationPage/STConfigurationPage.module.css","components/therapist/STEvolution/STSessions/STSession/STSession.module.css","components/therapist/feedback/Feedback.module.css","components/shared/SBubbleNotification/SBubbleNotification.module.css","components/landing/SAvatarInfo/SAvatarInfo.module.css","components/shared/SUserHero/SUserHero.module.css","components/patient/SPActivity/SPActivity.module.css","components/therapist/STActivity/STActivityButtons/STActivityButtons.module.css","pages/therapist/STPatientsPage/STPatientsPage.module.css","components/admin/SAUser/SAUser.module.css","components/admin/SAImageLoader/SAImageLoader.module.css","components/landing/SDevelop/SDevelop.module.css","components/patient/SPCollection/SPCollectable/SPCollectable.module.css","components/shared/SHeaderBar/SNav/SNav.module.css","components/shared/SMenuHeader/SMenuHeader.module.css","components/mobile/SMobileMenu/SMobileMenu.module.css","components/landing/SMobile/SMobile.module.css","pages/shared/SProfilePage/SProfilePage.module.css","components/shared/SHeaderBar/SHeaderBar.module.css","pages/shared/SLandingPage/SLandingPage.module.css","components/landing/SFeatures/SFeature/SFeature.module.css","components/shared/SCarousel/SSkinItem/SSkinItem.module.css","components/therapist/STField/STField.module.css","components/therapist/STLogin/STLogin.module.css"],"names":["module","exports","SET_ACTIVITIES","SET_ACTIVITY","SET_SELECTED_SESSION","SET_SESSIONS","SET_PATIENT_TOKEN","SET_THERAPIST_TOKEN","SET_AVATAR_MESSAGE","SET_AVATAR_VARIATION","SET_AVATAR_VARIATIONS","RESET_CONFIGURATION","SET_CONFIGURATION","RESET_DYNAMIC_OPTIONS","SET_DYNAMIC_OPTIONS","SET_DYNAMIC_SELECTED_OPTIONS","ADD_STATIC_SELECTED_OPTION","RESET_STATIC_OPTIONS","SET_STATIC_OPTIONS","SET_STATIC_SELECTED_OPTIONS","SET_COLLECTIONS","SET_COLLECTABLE","SET_USER_SKINS_OWNED","SET_USER_SKIN_OWNED","SET_CHECK_SERVER_STATUS","SET_CONNECTED_ID","SET_CONNECT_SOCKET","SET_FEEDBACK_DATA","SET_FEEDBACK_DATE","REMOVE_PATIENT","SET_PATIENT","SET_PATIENTS","SET_SELECTED_PATIENT","SET_BAR","SET_FULLSCREEN","SET_MODAL","SET_NOTIFICATION","SET_PARALLAX","SET_V_OFFSET","SET_WINDOW_WIDTH","SHOW_AVATAR","SHOW_CREATE_ACTIVITY_BUTTON","SHOW_MOBILE_MENU","SET_USER","SET_USERS","SET_TO_UPDATE","setBar","bar","dispatch","type","payload","setFullScreen","fullScreen","setModal","modal","setNotification","notification","setParallax","parallax","showAvatar","show","showCreateActivityButton","showMobileMenu","gameServerURL","process","serverURL","setConnectedId","connectedId","Speaker","instance","this","synthesis","window","speechSynthesis","voice","lang","setVoices","voices","console","log","forEach","voiceS","Promise","resolve","timer","setInterval","getVoices","length","clearInterval","message","speakMsg","SpeechSynthesisUtterance","rate","pitch","speak","SpeakerSingleton","Messenger","socketURL","socketClient","userId","context","socketIOClient","connect","reconnection","emit","handleSocketEvents","props","connectSocket","setConnectSocket","disconnect","connection","disconnectSocket","on","closeSocket","MessengerSingleton","ServerStatus","interval","check","game","a","ping","error","status","errorData","handleGameServerStatus","handleServerStatus","ui","serverStatus","slide","handleConnection","SAvatar","className","styles","container","image","alt","src","avatar","prevProps","Component","state","SBubbleNotification","windowWidth","faIcon","faDizzy","faGrinBeam","success","containerDesktop","containerMobile","finalSlide","border","style","iconContainer","icon","size","setTimeout","mapActionsToProps","SNav","useState","isOpen","setIsOpen","toggle","NavbarToggler","toggler","onClick","Collapse","collapse","navbar","Nav","nav","NavItem","navItem","link","to","PATIENT","THERAPIST","SMenuHeader","user","profile_img","thumb","backgroundColor","color","thumbnail_alias","name","last_name","email","apiURL","login","credentials","role","url","axios","post","response","data","headers","token","id","localStorage","setItem","SMenuLink","onLinkClicked","bind","onLogout","children","logout","removeItem","SMenu","Role","Dropdown","DropdownToggle","DropdownMenu","menu","DropdownItem","header","divider","item","setState","SUserNav","onMenuButtonClicked","is_admin","linksContainer","Button","uimage","SHeaderBar","base","patientBar","standardBar","Navbar","expand","fixed","light","NavbarBrand","navbrand","logo","SMobileAvatar","SMobileMenu","animation","menuAppear","onAnimatedCloseClicked","onSimpleCloseClicked","btn","menuDissapear","getActivity","get","activity","getActivities","patientId","activities","setActivity","setActivities","setSession","session","updateActivitySession","put","SSubmitField","FormGroup","e","loading","Spinner","SNewComment","comment","onCancelClicked","onTextChanged","onSaveClicked","Form","Input","onChange","placeholder","rows","resize","invalid","FormFeedback","justifyContent","target","value","trim","SVideo","absolute","width","video","controls","SModal","closeModal","Modal","centered","contentClassName","ModalHeader","title","ModalBody","body","getUser","toUpdate","getUsers","query","users","setUser","setToUpdate","SProtectedRoute","getRoleFromPath","hasToken","component","rest","render","checkServerStatus","computedMatch","letter","params","setCheckServerStatus","path","split","auth","defaults","common","SAvatarInfo","innerContainer","sides","avatarSide","description","SDevelop","text","faHeart","logoContainer","logoImage","SFeature","Col","sm","md","feature","infoContainer","SFeatures","Row","noGutters","features","map","key","SFooterBar","copyright","SHero","outerContainer","subtitle","btnContainer","SMobile","imageContainer","featuresData","therapist","patient","SLandingPage","xs","mainPhrase","mainIdea","featuresTitle","setMessage","SAvatarItem","getPatientSkin","skinData","skinId","single","setPatientSkins","skins","skin","SSkinItem","price","collectable","onBuyClicked","owned","checkUserSkin","updatePrice","collectableId","collectionId","id_collection","buildData","_skins","Object","values","Skins","is_default","push","buySkins","collection","SCarousel","activeIndex","animating","animateItem","buildItems","goToIndex","next","previous","kind","Carousel","CarouselControl","direction","onClickHandler","animate","items","CarouselItem","onExiting","onExited","newIndex","onCarouselChanged","nextIndex","index","selected","SContainer","padding","undefined","borderRadius","boxShadow","options","eye","dbalias","hair","torso","colors","blue","button","brown","black","blonde","green","purple","STACustomizer","option","onOptionClicked","onSectionOptionClicked","buildOptions","buildSections","col","section","i","buildSectionsOptions","names","sectionOpt","optionName","soption","onOptionSelected","STAvatarPanel","current","variations","carousel","getVariations","assign","keys","id_avatar","img_path","thumbnail_path","getAvatarVariation","Avatar_Variation","gender","getAvatarVariations","getVariation","variationData","variation","userAvatar","1","splice","unshift","v","STLayout","xlSize","page","mt","rowContainer","lg","xl","pt","SUserHero","userContainer","row","alias","uname","SProfilePage","btnAvatar","btnInfo","optContainer","setAvatarVariations","SEmpty","SPActivity","onPlayClicked","onTutorialClicked","gameImage","gameContainer","gameTitle","Activity","gameDescription","createActivitySession","videoUrl","activityUserId","sessionData","date_start","Date","id_activity_user","SPactivity","SPLayout","vOffset","offset","SSpinner","marginTop","textAlign","messages","SPActivitiesPage","pid","match","listContainer","Math","floor","random","SPCollectableInfoPage","currentSkin","descriptionTitle","summary","getCollectableInfo","setCollectable","cid","getCollectable","SPCollectable","info","points","btnBuy","buySkin","SPCollection","collectables","Collectables","collections","SPCollectionsPage","getCollectionsList","setCollections","getCollections","SPPassButton","btnInv","bgWhite","onDeletePassClicked","onPassButtonClicked","cursor","faTrash","SPassword","passwordOptions","optionsSelected","onDeleteButtonClicked","onPasswordOptionClicked","po","os","added","words","filter","setPassword","SPLogin","password","username","onInputChanged","onLogin","onLoginClicked","Label","label","bsSize","preventDefault","join","landing","SPLandingPage","alignItems","height","SFullScreen","fullRef","React","createRef","onClosed","onKeyHandler","onKeyDown","ref","tabIndex","document","addEventListener","enterFullScreen","exitFullScreen","removeEventListener","requestFullRequest","mozRequestFullScreen","webkitRequestFullScreen","fullscreenElement","mozFullScreenElement","webkitFullScreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullScreen","event","keyCode","FILE_SERVER_URL","SPPlayPage","gamePath","sid","build_path","score","pacienteToken","outerHeight","outerWidth","redirectBack","hideAvatar","aid","date_end","history","goBack","getPatient","getPatients","patients","getDatesDifference","startDate","endDate","start","DateTime","fromISO","diff","toObject","getFormattedDate","date","setLocale","toLocaleString","DATE_FULL","getDateBoundaries","luxDate","startOf","toISODate","endOf","STActivityButtons","Activities_Sessions","sessions","ml","delete","faTimesCircle","structures","2","3","STSyntacticCircle","structure","bgColor","display","fontWeight","STActivity","date_from","Syntactic_Structure","tid","aimage","rightContainer","nameContainer","syntContainer","btnEvolution","STActivitiesPage","titleContainer","setPatient","STOption","inner","faCheckCircle","STField","optionRow","optionCol","STDynamicField","first","getOptions","fieldId","field","resetDynamicOptions","reset","r","setDynamicSelectedOptions","optionId","dynamic","required","requiredIds","getRequiredIds","getDynamicOptions","rIds","rField","buildDynamic","fieldData","mechanicId","STDynamic","mechanic","situations","times","reader","STStaticField","resetStaticOptions","getNextOptions","multichoice","addStaticSelectedOption","checkMinimun","setStaticSelectedOptions","static","minimum","getStaticOptions","buildStatic","categoryId","subcategoryId","sintacticId","stid","optionData","STStatic","category","subcategory","sintactic","vocabulary","STConfigurationPage","redirect","onCreateActivityClicked","buttonStatic","btnSelected","buttonDynamic","outline","createContainer","create","resetConfiguration","fields","configuration","buildConfiguration","createActivity","prepareAndCreateActivity","fieldsData","getLevels","_data","historical","mid","feedData","getMatches","getPhrases","getSecuences","registerLocale","es","SDatePicker","pickerRef","onDateChanged","form","showMonthYear","showYearDropdown","input","dateFormat","completeInput","locale","popperPlacement","showMonthYearPicker","showFullMonthYearPicker","scrollableYearDropdown","withPortal","readOnly","feedDate","setFeedDate","feedback","structuresData","Pronombre","Sustantivo","Adjetivo","Verbo","Artículo","Conjunción","buildRecord","hits","totalWords","percentage","sort","b","order_phrase","chartOptions","doughnut","legend","labels","boxWidth","usePointStyle","tooltips","enabled","mode","callbacks","tooltipItem","datasets","toLowerCase","line","metric","align","scales","xAxes","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepSize","max","yLabel","tooltipItems","xLabel","stackBar","stacked","datasetIndex","word","right","total","parseInt","part","round","charts","STDoughnut","chartData","groupedPhrases","phrase","totalPhrases","hitsPercentage","buildPhrasesSummary","STLevel","level","id_session","mt20","setLevelTime","minutes","STLine","matches","records","variable","occurrence","attempts","errors","record","is_good","borderColor","buildMatchErrorsData","buildTimes","STPhrases","phrases","wordsContainer","j","checked","phrasePercentage","STStackBar","feeds","feed","includes","misses","wordTotal","hitTotal","missesPercentage","buildWordHitsData","STInGame","matchesData","Matches_Feeds","getWords","STLevels","levels","setLevels","Levels_Feeds","STTimes","sessionsData","Sessions_Feeds","STVocalization","phrasesData","Phrases_Feeds","grouped","lastPhrase","shift","id_phrase","groupPhrases","getStructures","mechanics","semantic_description","STFeedOptions","btnVocal","btnMecha","btnLevel","btnTimes","disabled","contWidth","btnWidth","span","setStateValues","Mechanic","STSession","onClicked","sessionSelected","last","time","getDifference","STSessions","onSessionClicked","STEvolution","getFeedback","STMechanics","onMechanicClicked","UncontrolledTooltip","placement","STHistorical","prevState","toISOString","getSessions","STFeedbackPage","setFeedData","setSessions","setFirstSessions","slice","STLogin","STLandingPage","SSearch","searchContainer","searchIcon","faSearch","search","STPatient","onAssignPatientClicked","uinfo","setCheck","Therapists","Therapists_Patients","id_therapist","stopPropagation","checkTherapist","removePatient","createPatient","btnActive","therapistId","association","_association","_id_therapist","_id_patient","STPatientsPage","buttonMy","buttonAll","getPatientsList","setPatients","SAUser","identification","btnEdit","faEdit","SAUsersPage","toolsContainer","btnCreate","admin","getAllUsers","setUsers","SAImageLoader","encodedImage","canvasRef","imageRef","onFileChanged","onFileReaderLoaded","onImageLoaded","faImage","hiddenImage","hidden","btnFile","for","file","files","fileReader","FileReader","readAsDataURL","onload","result","scale","getContext","drawImage","canvas","toDataURL","toBlob","blob","SCheckField","SDateField","SInputField","FormText","SSelectField","opt","genders","buildRandomColor","buildUserAlias","charAt","toUpperCase","SAUserForm","active","birthday_date","id_role","update","userData","hasErrors","checkPassword","test","wordsSet","notInSet","checkUserFields","buildUserData","onSave","SAUpdateUserPage","uid","formContainer","prepareUserForUpdate","getUserToUpdate","formData","uploadProfileImage","res","updateUser","register","FormData","append","App","calculateVOffset","setWindowSize","Container","fluid","exact","innerWidth","init","setVOffset","setWindowWidth","initialState","activityReducer","action","PATIENT_TOKEN","THERAPIST_TOKEN","getItem","authReducer","avatarReducer","collectionReducer","_skinId","_collectable","_Skins","configurationReducer","connectionReducer","dynamicReducer","feedbackReducer","patientReducer","_patient","_patients","_Therapists","id_patient","staticReducer","uiReducer","userReducer","allReducers","combineReducers","middleware","thunk","composedEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.034c3f55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFooterBar_container__1gSB7\",\"copyright\":\"SFooterBar_copyright__ESh8s\",\"innerContainer\":\"SFooterBar_innerContainer__1lM3b\",\"logo\":\"SFooterBar_logo__2D-6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectableInfoPage_container__2pREu\",\"description\":\"SPCollectableInfoPage_description__n43HH\",\"descriptionTitle\":\"SPCollectableInfoPage_descriptionTitle__1RUq-\",\"title\":\"SPCollectableInfoPage_title__1O5Jn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"SPCollection_col__2K7XX\",\"container\":\"SPCollection_container__27A6j\",\"rowContainer\":\"SPCollection_rowContainer__29q42\",\"title\":\"SPCollection_title__3Uf03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPLogin_btn__2waK7\",\"container\":\"SPLogin_container__3hPDj\",\"label\":\"SPLogin_label__3v4FC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgWhite\":\"SPPassButton_bgWhite__5Ltrk\",\"btn\":\"SPPassButton_btn__194iE\",\"btnInv\":\"SPPassButton_btnInv__1o0Ms\",\"icon\":\"SPPassButton_icon__3VFz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STOption_container__2b_7b\",\"inner\":\"STOption_inner__1PEEH\",\"name\":\"STOption_name__oY1xP\",\"selected\":\"STOption_selected__14b_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marginTop\":\"SSearch_marginTop__lV0l0\",\"search\":\"SSearch_search__BEsUo\",\"searchContainer\":\"SSearch_searchContainer__3Dpat\",\"searchIcon\":\"SSearch_searchIcon__3B77W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnCreate\":\"SAUsersPage_btnCreate__3E2Im\",\"listContainer\":\"SAUsersPage_listContainer__KhrhP\",\"title\":\"SAUsersPage_title__ePhGC\",\"toolsContainer\":\"SAUsersPage_toolsContainer__2f4UM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAUpdateUserPage_container__33K79\",\"formContainer\":\"SAUpdateUserPage_formContainer__2_Iev\",\"title\":\"SAUpdateUserPage_title__zc6GE\",\"userData\":\"SAUpdateUserPage_userData__1NyED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAvatar_container__1p6Ra\",\"image\":\"SAvatar_image__f6nMg\",\"message\":\"SAvatar_message__36pWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMobileAvatar_container__Dg-y0\",\"image\":\"SMobileAvatar_image__kQP3-\",\"message\":\"SMobileAvatar_message__1VqAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SModal_body__KRael\",\"modal\":\"SModal_modal__EefRS\",\"title\":\"SModal_title__rzR2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"absolute\":\"SVideo_absolute__39LAH\",\"container\":\"SVideo_container__LFvgA\",\"video\":\"SVideo_video__2EZSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeatures_container__TuY4d\",\"innerContainer\":\"SFeatures_innerContainer__1T4yv\",\"title\":\"SFeatures_title__2D6NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STLayout_container__3lOal\",\"outerContainer\":\"STLayout_outerContainer__nbEQl\",\"rowContainer\":\"STLayout_rowContainer__ObmR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPLayout_container__3A-ua\",\"outerContainer\":\"SPLayout_outerContainer__1BQ8D\",\"rowContainer\":\"SPLayout_rowContainer__2WCxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"SPassword_btnContainer__1l-cK\",\"container\":\"SPassword_container__2IKTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STMechanics_btn__Tqd2i\",\"container\":\"STMechanics_container__1tM1K\",\"selected\":\"STMechanics_selected__2D98J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel\":\"STAvatarPanel_carousel__13Etq\",\"container\":\"STAvatarPanel_container__1VzPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SCarousel_border__23GFp\",\"style\":\"SCarousel_style__4G1i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAvatarItem_container__SylU4\",\"image\":\"SAvatarItem_image__GThs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"SPActivitiesPage_listContainer__1zQ0g\",\"title\":\"SPActivitiesPage_title__st4Q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SEmpty_container__17HkQ\",\"text\":\"SEmpty_text__7_-8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectionsPage_container__3W7c6\",\"title\":\"SPCollectionsPage_title__auwrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STFeedbackPage_container__3IMrm\",\"title\":\"STFeedbackPage_title__cOZYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completeInput\":\"SDatePicker_completeInput__3Qnnh\",\"input\":\"SDatePicker_input__186S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"SMenuLink_style__3mouR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnClose\":\"SPPlayPage_btnClose__3bovR\",\"closeContainer\":\"SPPlayPage_closeContainer__prnKn\",\"container\":\"SPPlayPage_container__1JXN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STEvolution_container__1JFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STSessions_container__tZ9Rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STHistorical_container__3XXqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3RhdX\",\"description\":\"Charts_description__2a5hw\",\"mt20\":\"Charts_mt20__3ckh6\",\"percentage\":\"Charts_percentage__bjF4d\",\"phrasePercentage\":\"Charts_phrasePercentage__vJ19C\",\"score\":\"Charts_score___ZO4Z\",\"subtitle\":\"Charts_subtitle__15rOk\",\"title\":\"Charts_title__3d5vo\",\"word\":\"Charts_word__2sd5u\",\"wordsContainer\":\"Charts_wordsContainer__1Nt_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STPatient_btn__2j08s\",\"btnActive\":\"STPatient_btnActive__1pd4a\",\"link\":\"STPatient_link__tNTSf\",\"container\":\"STPatient_container__2X2DS\",\"height\":\"STPatient_height__1E83-\",\"padding\":\"STPatient_padding__T-Vv2\",\"thumb\":\"STPatient_thumb__1_vlU\",\"uimage\":\"STPatient_uimage__3am3r\",\"uinfo\":\"STPatient_uinfo__2X0Mb\",\"uname\":\"STPatient_uname__v9FdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STACustomizer_btn__36HiN\",\"col\":\"STACustomizer_col__3fIsC\",\"container\":\"STACustomizer_container__3fiR_\",\"header\":\"STACustomizer_header__2M7hK\",\"rounded\":\"STACustomizer_rounded__3mSP5\",\"selected\":\"STACustomizer_selected__1PA7P\",\"title\":\"STACustomizer_title__90vX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SHero_btn__ed6WQ\",\"btnContainer\":\"SHero_btnContainer__1PllE\",\"container\":\"SHero_container__3qLwg\",\"innerContainer\":\"SHero_innerContainer__1OoLy\",\"link\":\"SHero_link__2NUmS\",\"outerContainer\":\"SHero_outerContainer__3f7_s\",\"subtitle\":\"SHero_subtitle__eo5s7\",\"title\":\"SHero_title__qCU9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivity_container__r4OSJ\",\"date\":\"STActivity_date__IsoC9\",\"description\":\"STActivity_description__cO8RH\",\"btnEvolution\":\"STActivity_btnEvolution__3bVYL\",\"aimage\":\"STActivity_aimage__1FOej\",\"innerContainer\":\"STActivity_innerContainer__1b6Cz\",\"nameContainer\":\"STActivity_nameContainer__2xVy_\",\"rightContainer\":\"STActivity_rightContainer__3nmb0\",\"syntContainer\":\"STActivity_syntContainer__AsPHV\",\"title\":\"STActivity_title__1HtrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STFeedOptions_btn__lNh_P\",\"btnContainer\":\"STFeedOptions_btnContainer__VPsem\",\"disabled\":\"STFeedOptions_disabled__1icUf\",\"selected\":\"STFeedOptions_selected__1wOWG\",\"span\":\"STFeedOptions_span__d7zy9\"};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Actividades */\r\nexport const SET_ACTIVITIES = 'SET_ACTIVITIES';\r\nexport const SET_ACTIVITY = 'SET_ACTIVITY';\r\nexport const SET_SELECTED_SESSION = 'SET_SELECTED_SESSION';\r\nexport const SET_SESSIONS = 'SET_SESSIONS';\r\n\r\n/** Auth */\r\nexport const SET_PATIENT_TOKEN = 'SET_PATIENT_TOKEN';\r\nexport const SET_THERAPIST_TOKEN = 'SET_THERAPIST_TOKEN';\r\n\r\n/** Avatar */\r\nexport const SET_AVATAR_MESSAGE = 'SET_AVATAR_MESSAGE';\r\nexport const SET_AVATAR_VARIATION = 'SET_AVATAR_VARIATION';\r\nexport const SET_AVATAR_VARIATIONS = 'SET_AVATAR_VARIATIONS';\r\n\r\n/** Configuración */\r\nexport const RESET_CONFIGURATION = 'RESET_CONFIGURATION';\r\nexport const SET_CONFIGURATION = 'SET_CONFIGURATION';\r\n\r\n/** Configuración dinámica */\r\nexport const RESET_DYNAMIC_OPTIONS = 'RESET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_OPTIONS = 'SET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_SELECTED_OPTIONS = 'SET_DYNAMIC_SELECTED_OPTIONS';\r\n\r\n/** Configuración estática */\r\nexport const ADD_STATIC_SELECTED_OPTION = 'ADD_STATIC_SELECTED_OPTION';\r\nexport const RESET_STATIC_OPTIONS = 'RESET_STATIC_OPTIONS';\r\nexport const SET_STATIC_OPTIONS = 'SET_STATIC_OPTIONS';\r\nexport const SET_STATIC_SELECTED_OPTIONS = 'SET_STATIC_SELECTED_OPTIONS';\r\n\r\n/** Colecciones */\r\nexport const SET_COLLECTIONS = 'SET_COLLECTIONS';\r\nexport const SET_COLLECTABLE = 'SET_COLLECTABLE';\r\nexport const SET_USER_SKINS_OWNED = 'SET_USER_SKINS_OWNED';\r\nexport const SET_USER_SKIN_OWNED = 'SET_USER_SKIN_OWNED';\r\n\r\n/** Conexión */\r\nexport const SET_CHECK_SERVER_STATUS = 'SET_CHECK_SERVER_STATUS';\r\nexport const SET_CONNECTED_ID = 'SET_CONNECTED_ID';\r\nexport const SET_CONNECT_SOCKET = 'SET_CONNECT_SOCKET';\r\n\r\n/** Feedback */\r\nexport const SET_FEEDBACK_DATA = 'SET_FEEDBACK_DATA';\r\nexport const SET_FEEDBACK_DATE = 'SET_FEEDBACK_DATE';\r\n\r\n/** Pacientes */\r\nexport const REMOVE_PATIENT = 'REMOVE_PATIENT';\r\nexport const SET_PATIENT = 'SET_PATIENT';\r\nexport const SET_PATIENTS = 'SET_PATIENTS';\r\nexport const SET_SELECTED_PATIENT = 'SET_SELECTED_PATIENT';\r\n\r\n/** UI */\r\nexport const SET_BAR = 'SET_BAR';\r\nexport const SET_FULLSCREEN = 'SET_FULLSCREEN';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\r\nexport const SET_PARALLAX = 'SET_PARALLAX';\r\nexport const SET_V_OFFSET = 'SET_V_OFFSET';\r\nexport const SET_WINDOW_WIDTH = 'SET_WINDOW_WIDTH';\r\nexport const SHOW_AVATAR = 'SHOW_AVATAR';\r\nexport const SHOW_CREATE_ACTIVITY_BUTTON = 'SHOW_CREATE_ACTIVITY_BUTTON';\r\nexport const SHOW_MOBILE_MENU = 'SHOW_MOBILE_MENU';\r\n\r\n/** User */\r\nexport const SET_USER = 'SET_USER';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_TO_UPDATE = 'SET_TO_UPDATE';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU\r\n} from './types';\r\n\r\n\r\nexport const setBar = (bar) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_BAR,\r\n        payload: { bar }\r\n    });\r\n}\r\n\r\nexport const setFullScreen = (fullScreen) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FULLSCREEN, \r\n        payload: { fullScreen }\r\n    });\r\n}\r\n\r\nexport const setModal = (modal) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_MODAL, \r\n        payload: { modal }\r\n    });\r\n}\r\n\r\nexport const setNotification = (notification) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_NOTIFICATION, \r\n        payload: { notification }\r\n    });\r\n}\r\n\r\nexport const setParallax = (parallax) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PARALLAX,\r\n        payload: { parallax }\r\n    });\r\n}\r\n\r\nexport const setVOffset = (vOffset) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_V_OFFSET, \r\n        payload: { vOffset }\r\n    });\r\n}\r\n\r\nexport const setWindowWidth = (width) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_WINDOW_WIDTH, \r\n        payload: { width }\r\n    });\r\n}\r\n\r\nexport const showAvatar = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_AVATAR, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showCreateActivityButton = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_CREATE_ACTIVITY_BUTTON, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showMobileMenu = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_MOBILE_MENU, \r\n        payload: { show }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from './types';\r\n\r\nconst gameServerURL = process.env.REACT_APP_FILE_SERVER;\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const ping = (game = false) => async () => {\r\n    const url = `${game ? gameServerURL : serverURL}/ping`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n        \r\n        return { error, message, status };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, status: 500 };\r\n    }\r\n}\r\n\r\nexport const setCheckServerStatus = (check) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CHECK_SERVER_STATUS, \r\n        payload: { check }\r\n    });\r\n}\r\n\r\nexport const setConnectedId = (connectedId) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECTED_ID, \r\n        payload: { connectedId }\r\n    });\r\n}\r\n\r\nexport const setConnectSocket = (connectSocket) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECT_SOCKET, \r\n        payload: { connectSocket }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Definición de la clase */\r\nclass Speaker {\r\n\r\n    /** Constructor */\r\n    constructor() {\r\n        if (Speaker.instance instanceof Speaker)\r\n            return Speaker.instance;\r\n\r\n        this.synthesis = window.speechSynthesis;\r\n        this.voice = null;\r\n        Speaker.instance = this;\r\n    }\r\n\r\n    async init(lang) {\r\n        const { voices } = await this.setVoices();\r\n        console.log(voices);   \r\n        voices.forEach(voiceS => {\r\n            if (voiceS.lang === lang) {\r\n                this.voice = voiceS;\r\n            }\r\n        });\r\n    }\r\n\r\n    setVoices() {\r\n        return new Promise((resolve) => {\r\n            const timer = setInterval(() => {\r\n                const voices = this.synthesis.getVoices();\r\n                \r\n                if (voices.length !== 0) {\r\n                    resolve({ voices });\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    speak(message) {\r\n        if (!message)\r\n            return;\r\n        \r\n        const speakMsg = new SpeechSynthesisUtterance(message);\r\n        speakMsg.lang = 'es-MX';\r\n        speakMsg.voice = this.voice;\r\n        speakMsg.rate = 1;\r\n        speakMsg.pitch = 1;\r\n\r\n        this.synthesis.speak(speakMsg);\r\n    }\r\n}\r\n\r\n/** Transforma la clase en un singleton */\r\nconst SpeakerSingleton = new Speaker();\r\nexport default SpeakerSingleton; ","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nclass Messenger {\r\n\r\n    constructor() {\r\n        /** Singleton */\r\n        if (Messenger.instance instanceof Messenger) \r\n            return Messenger.instance;\r\n\r\n        this.socketURL = process.env.REACT_APP_SOCKET_URL;\r\n        this.socketClient = null;\r\n        Messenger.instance = this;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Conectar el socket al servidor */\r\n    connectSocket(userId, context) {\r\n        if (!this.socketClient) {\r\n            this.socketClient = socketIOClient.connect(this.socketURL, {\r\n                reconnection: false\r\n            });\r\n            /** Enviar un mensaje para registrar el usuario */\r\n            this.socketClient.emit('register', { userId });\r\n            this.handleSocketEvents(context);\r\n        }\r\n    }\r\n\r\n    closeSocket(context) {\r\n        if (this.socketClient) {\r\n            this.socketClient = null;\r\n            context.props.setConnectedId(null);\r\n            /** Cuado se presenta un error de conexión */\r\n            if (context.props.connectSocket)\r\n                context.props.setConnectSocket(false);\r\n        }\r\n    }\r\n\r\n    /** Desconectar el socket del servidor */\r\n    disconnectSocket(userId) {\r\n        if (this.socketClient) {\r\n            /** Enviar un mensaje para eliminar al usuario del registro */\r\n            this.socketClient.emit('unregister', { userId });\r\n            this.socketClient.disconnect();\r\n        }\r\n    }\r\n\r\n    /** Manejar la conexión del socket */\r\n    handleConnection(connection, context) {\r\n        const { connectSocket, connectedId } = connection;\r\n        if (connectSocket) \r\n            this.connectSocket(connectedId, context);\r\n        else\r\n            this.disconnectSocket(connectedId);\r\n    }\r\n\r\n    /** Manejar todos los eventos detectados por el socket */\r\n    handleSocketEvents(context) {\r\n        this.socketClient.on('disconnect', () => {\r\n            console.log('Socket desconectado!');\r\n            this.closeSocket(context);\r\n        });\r\n\r\n        this.socketClient.on('error', () => {\r\n            this.closeSocket(context);\r\n        });\r\n\r\n        /** Eventos propios */\r\n        this.socketClient.on('avatar_message', (message) => {\r\n            console.log(message);\r\n        });\r\n\r\n        this.socketClient.on('exit_game', (message) => {\r\n            console.log(message);\r\n            context.props.setFullScreen(false);\r\n        });\r\n    }\r\n}\r\n\r\nconst MessengerSingleton = new Messenger();\r\nexport default MessengerSingleton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nclass ServerStatus {\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.interval = null;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Verificar el estado del servidor */\r\n    checkServerStatus(check, game, Messenger) {\r\n        if (check) {\r\n            /** Lanzar un intervalo de 3 segundos para verificar */\r\n            this.interval = setInterval(async () => {\r\n                const { error, status } = await this.context.props.ping(game);\r\n                const errorData = error ? { error, status } : null;\r\n\r\n                if (game) \r\n                    this.handleGameServerStatus();\r\n                else\r\n                    this.handleServerStatus(errorData, Messenger);\r\n            }, \r\n            3000);\r\n        }\r\n        else\r\n            this.clearInterval();\r\n    }\r\n\r\n    /** Detener el intervalo */\r\n    clearInterval() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = null;\r\n        }\r\n    }\r\n\r\n    handleServerStatus(error, Messenger) {\r\n        const { props } = this.context;\r\n        const { connection, ui } = props;\r\n\r\n        if (error) {\r\n            const { status } = error;\r\n                        \r\n            if (status === 500) {\r\n                const message = '¡El servidor está desconectado!';\r\n                if (!ui.notification)\r\n                    props.setNotification({ \r\n                        error: true, \r\n                        message, \r\n                        serverStatus: true, \r\n                        slide: false \r\n                    });\r\n            }\r\n            else if (status === 401)\r\n                console.log('¡Token inválido!');\r\n        }\r\n        else {\r\n            Messenger.handleConnection(connection, this.context);\r\n            if (ui.notification && ui.notification.serverStatus) \r\n                props.setNotification(null);\r\n        }\r\n    }\r\n\r\n    handleGameServerStatus() {\r\n\r\n    }\r\n}\r\n\r\nexport default ServerStatus;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAvatar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nclass SAvatar extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <img \r\n                    className={styles.image}\r\n                    alt=''\r\n                    src='/images/avatar/avatar_a_default.png' />\r\n                <p className={styles.message}>\r\n                    { this.props.avatar.message }\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        Speaker.speak(this.props.avatar.message);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.avatar.message !== this.props.avatar.message)\r\n            Speaker.speak(this.props.avatar.message);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        avatar: state.avatar\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SAvatar);","import SAvatar from './SAvatar';\r\nexport default SAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SBubbleNotification.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '@actions/ui';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDizzy, faGrinBeam } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SBubbleNotification extends Component {\r\n    render() {\r\n        const { error, message, slide } = this.props.notification;\r\n        const { parallax, windowWidth } = this.props;\r\n\r\n        const faIcon = error ? faDizzy : faGrinBeam;\r\n        const state = error ? styles.error : styles.success;\r\n\r\n        const container = windowWidth >= 768 ? \r\n                          styles.containerDesktop : styles.containerMobile;\r\n\r\n        let finalSlide = windowWidth >= 768 ? -368 : -200;\r\n        if (!slide)\r\n            finalSlide = windowWidth >= 768 ?  -1 : 0;\r\n        \r\n        const border = parallax ? '': styles.border;\r\n        \r\n        return(\r\n            <div \r\n                className={`${styles.container} ${container} ${border} flex`}\r\n                style={{ '--finalSlide': `${finalSlide}px`}}>\r\n                <div className={`flex ${styles.iconContainer} ${state}`}>\r\n                    <FontAwesomeIcon icon={faIcon} size='3x' />\r\n                </div>\r\n                <span className={styles.message}>\r\n                    { message }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { slide } = this.props.notification;\r\n        if (slide)\r\n            setTimeout(() => {\r\n                this.props.setNotification(null);\r\n            }, 6001);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setNotification\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.ui.notification,\r\n        parallax: state.ui.parallax,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(SBubbleNotification);","import SBubbleNotification from './SBubbleNotification';\r\nexport default SBubbleNotification;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styles from './SNav.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Nav,\r\n    NavbarToggler,\r\n    NavItem\r\n} from 'reactstrap';\r\n\r\nconst SNav = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () =>  {\r\n        if (props.windowWidth <= 768)\r\n            setIsOpen(!isOpen);\r\n    }\r\n\r\n    return(\r\n        <span className={styles.container}>\r\n            <NavbarToggler className={styles.toggler} onClick={toggle} />\r\n            <Collapse className={styles.collapse} isOpen={isOpen} navbar>\r\n                <Nav className={styles.nav} navbar>\r\n                    <NavItem className={styles.navItem}>\r\n                        <Link\r\n                            className={styles.link}\r\n                            onClick={toggle}\r\n                            to='/'>\r\n                            Inicio\r\n                        </Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SNav;","import SNav from './SNav';\r\nexport default SNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const PATIENT = 'paciente';\r\nexport const THERAPIST = 'terapeuta';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMenuHeader.module.css';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SMenuHeader = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            {\r\n                props.user.profile_img ?\r\n                <img\r\n                    alt='' \r\n                    className={styles.image}\r\n                    src={`${serverURL}${props.user.profile_img}`} />\r\n                :\r\n                <div \r\n                    className={`flex ${styles.image} ${styles.thumb}`} \r\n                    style={{ backgroundColor: props.user.color }}>\r\n                    { props.user.thumbnail_alias }\r\n                </div>\r\n            }\r\n            <span className={styles.name}>\r\n                { props.user.name } { props.user.last_name }\r\n            </span>\r\n            <span className={styles.email}>\r\n                { props.user.email }\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMenuHeader;","import SMenuHeader from './SMenuHeader';\r\nexport default SMenuHeader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from './types';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const login = (credentials, role) => async (dispatch) => {\r\n    const url = `${apiURL}/auth/login`;\r\n    credentials = { ...credentials, role };\r\n\r\n    try {\r\n        const response = await axios.post(url, { credentials });\r\n        const { data: { data, message, status }, headers } = response;\r\n\r\n        /** Obtener el token */\r\n        const token = status === 200 ? headers['auth-token'] : null;\r\n        const userId = status === 200 ? data.id : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n            payload: { token }\r\n        });\r\n        localStorage.setItem(`${role}Token`, token);\r\n            \r\n        return { error, message, userId };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, userId: null };\r\n    }\r\n}\r\n\r\nexport const logout = (role) => (dispatch) => {\r\n    dispatch({\r\n        type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n        payload: { token: null }\r\n    });\r\n    localStorage.removeItem(`${role}Token`);\r\n}\r\n\r\nexport const register = (user) => async () => {\r\n    const url = `${apiURL}/auth/register`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { user });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenuLink.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '@actions/auth';\r\n\r\nclass SMenuLink extends Component {\r\n    render() {\r\n        return(\r\n            <Link\r\n                className={styles.style}\r\n                to={this.props.to}\r\n                onClick={this.onLinkClicked}>\r\n                {this.props.children}\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n        this.onLogout = this.onLogout.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        if (this.props.onClick)\r\n            this.props.onClick();\r\n        \r\n        if (this.props.type === 'logout')\r\n            this.onLogout();\r\n    }\r\n\r\n    onLogout() {\r\n        const { role } = this.props;\r\n        this.props.logout(role);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    logout,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SMenuLink);","import SMenuLink from './SMenuLink';\r\nexport default SMenuLink;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenu.module.css';\r\nimport {\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SMenu extends Component {\r\n    render() {\r\n        const { id, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <Dropdown\r\n                className={styles.container}\r\n                isOpen={this.state.isOpen}\r\n                toggle={this.toggle}>\r\n                <DropdownToggle className={`flex ghost-btn ${styles.toggle}`}>\r\n                    <span className={styles.name}>\r\n                        { this.props.user.name }\r\n                    </span>\r\n                    {\r\n                        this.props.user.profile_img ? \r\n                        <img \r\n                            alt=''\r\n                            className={styles.image}\r\n                            src={`${serverURL}${this.props.user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.image} ${styles.thumb}`}\r\n                            style={{ backgroundColor: this.props.user.color }}>\r\n                            { this.props.user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                </DropdownToggle>\r\n\r\n                <DropdownMenu className={styles.menu}>\r\n                    <DropdownItem header>\r\n                        <SMenuHeader user={this.props.user} />\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    {\r\n                        role === THERAPIST ?\r\n                        <span>\r\n                            <DropdownItem className={styles.item}>\r\n                                <SMenuLink to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                            </DropdownItem>\r\n                        </span>\r\n                        : null\r\n                    }\r\n                    <DropdownItem className={styles.item}>\r\n                        <SMenuLink \r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    toggle() {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMenu);","import SMenu from './SMenu';\r\nexport default SMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserNav.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SMenu from './SMenu';\r\n\r\nclass SUserNav extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.linksContainer}>\r\n                    {\r\n                        role === PATIENT ?\r\n                        <span>\r\n                            <Link\r\n                                className={styles.link} \r\n                                to={`/${role}/${id}/actividades`}>\r\n                                Actividades\r\n                            </Link>\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/colecciones`}>\r\n                                Colecciones\r\n                            </Link>\r\n                        </span>\r\n                        : \r\n                        <span>\r\n                            {is_admin && <Link\r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/admin`}>\r\n                                Administrar\r\n                            </Link>}\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/pacientes`}>\r\n                                Pacientes\r\n                            </Link>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.windowWidth >= 768 ?\r\n                    <SMenu />\r\n                    :\r\n                    <Button\r\n                        className='ghost-btn'\r\n                        onClick={this.onMenuButtonClicked}>\r\n                        {\r\n                            this.props.user.profile_img ? \r\n                            <div className={styles.uimage} />\r\n                            :\r\n                            <div\r\n                                className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                style={{ backgroundColor: this.props.user.color }}>\r\n                                { this.props.user.thumbnail_alias }\r\n                            </div>\r\n                        }\r\n                    </Button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onMenuButtonClicked = this.onMenuButtonClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMenuButtonClicked() {\r\n        this.props.showMobileMenu(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SUserNav);","import SUserNav from './SUserNav';\r\nexport default SUserNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SHeaderBar.module.css';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SNav from './SNav';\r\nimport SUserNav from './SUserNav';\r\n\r\nclass SHeaderBar extends Component {\r\n    render() {\r\n        const { bar } = this.props.ui;\r\n        let base = styles.bar;\r\n        if (bar === 'patient')\r\n            base = `${base} ${styles.patientBar}`;\r\n        else\r\n            base = `${base} ${styles.standardBar}`;\r\n\r\n        return(\r\n            <Navbar \r\n                className={base} \r\n                expand='lg'\r\n                fixed='top' \r\n                light>\r\n                <NavbarBrand className={styles.navbrand}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logo}\r\n                        src='/images/logo/logo.png' />\r\n                    SATReLO\r\n                </NavbarBrand>\r\n                {\r\n                    this.props.user !== null ?\r\n                    <SUserNav />\r\n                    :\r\n                    <SNav windowWidth={this.props.ui.windowWidth} />\r\n                }\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n/** Eementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SHeaderBar);","import SHeaderBar from './SHeaderBar';\r\nexport default SHeaderBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileAvatar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nclass SMobileAvatar extends Component {\r\n    render() {\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.image} />\r\n                <p className={styles.message}>\r\n                    { this.props.avatar.message }\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        Speaker.speak(this.props.avatar.message);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.avatar.message !== this.props.avatar.message)\r\n            Speaker.speak(this.props.avatar.message);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        avatar: state.avatar\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMobileAvatar);","import SMobileAvatar from './SMobileAvatar';\r\nexport default SMobileAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileMenu.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nclass SMobileMenu extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Button\r\n                    onClick={this.onAnimatedCloseClicked}\r\n                    className={`ghost-btn ${styles.btn}`}>\r\n                </Button>\r\n\r\n                <div className={`${styles.menu} ${this.state.animation}`}>\r\n                    <SMenuHeader user={this.props.user} />\r\n                    <br/>\r\n                    <div className='h-delimiter'></div>\r\n                    <div className={styles.linksContainer}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/pacientes`}>\r\n                                    Pacientes\r\n                                </SMenuLink>\r\n                                {is_admin && <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/admin`}>\r\n                                    Administrar\r\n                                </SMenuLink>}\r\n                            </span>\r\n                            :\r\n                            <span>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked} \r\n                                    to={`/${role}/${id}/actividades`}>\r\n                                    Actividades\r\n                                </SMenuLink>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/colecciones`}>\r\n                                    Colecciones\r\n                                </SMenuLink>\r\n                            </span>\r\n                        }\r\n                        <SMenuLink\r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { animation: styles.menuAppear };\r\n        this.onAnimatedCloseClicked = this.onAnimatedCloseClicked.bind(this);\r\n        this.onSimpleCloseClicked = this.onSimpleCloseClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** \r\n     * Métodos encargados de cerrar el menú móvil\r\n     * Nota: Para el logout, el action showMobileMenu(false) se ubica\r\n     * en las páginas de login de cada rol debido a que el menú debe \r\n     * cerrarse antes de cambiar el usuario de la app a null, esto \r\n     * con el fin de evitar conflictos.\r\n     */\r\n    onAnimatedCloseClicked() {\r\n        this.setState({ animation: styles.menuDissapear }, () => {\r\n            setTimeout(() => {\r\n                this.props.showMobileMenu(false)\r\n            }, 210);\r\n        })\r\n    }\r\n\r\n    onSimpleCloseClicked() {\r\n        this.props.showMobileMenu(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SMobileMenu);","import SMobileMenu from './SMobileMenu';\r\nexport default SMobileMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY,\r\n    SET_SELECTED_SESSION, \r\n    SET_SESSIONS\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear una actividad */\r\nexport const createActivity = (configuration) => async () => {\r\n    const url = `${apiURL}/assembler/`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { configuration });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Crear la sesion de una actividad */\r\nexport const createActivitySession = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/session`;\r\n    const sessionData = {\r\n        date_start: new Date(),\r\n        id_activity_user: activityUserId\r\n    };\r\n\r\n    try {\r\n        const response = await axios.post(url, { session: sessionData });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { data, error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la información de una actividad */\r\nexport const getActivity = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activity = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_ACTIVITY, \r\n            payload: { activity }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener actividades */\r\nexport const getActivities = (patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${patientId}/activities`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activities = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_ACTIVITIES, \r\n            payload: { activities }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener las sesiones de la actividad de un usuario */\r\nexport const getSessions = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activityUserId}/sessions`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const sessions = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SESSIONS, \r\n            payload: { sessions }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}\r\n\r\nexport const setActivity = (activity) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_ACTIVITY, \r\n        payload: { activity }\r\n    });\r\n}\r\n\r\nexport const setActivities = (activities) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_ACTIVITIES,\r\n        payload: { activities }\r\n    });\r\n}\r\n\r\nexport const setSession = (session) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_SESSION, \r\n        payload: { session }\r\n    });\r\n}\r\n\r\nexport const setSessions = (sessions) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SESSIONS, \r\n        payload: { sessions }\r\n    });\r\n}\r\n\r\nexport const updateActivitySession = (session) => async (dispatch) => {\r\n    const { id } = session;\r\n    const url = `${apiURL}/session/${id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { session });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Button, FormGroup, Spinner } from 'reactstrap';\r\n\r\nconst SSubmitField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Button\r\n                className={props.className}\r\n                onClick={(e) => { props.onClick(e); }}>\r\n                {\r\n                    props.loading ?\r\n                    <Spinner color='light' size='sm' />\r\n                    :\r\n                    <span>{props.children}</span>\r\n                }\r\n            </Button>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSubmitField;","import SSubmitField from './SSubmitField';\r\nexport default SSubmitField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, FormFeedback, FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { updateActivitySession } from '@actions/activity';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SNewComment extends Component {\r\n    render() {\r\n        return(\r\n            <Form>\r\n                <FormGroup className='mt-2'>\r\n                    <Input \r\n                        type='textarea'\r\n                        onChange={this.onTextChanged}\r\n                        placeholder='Escribe tu comentario aquí...' \r\n                        rows='10' \r\n                        style={{ resize: 'none' }}\r\n                        invalid={this.state.error !== null} />\r\n                    {this.state.error && \r\n                      <FormFeedback>{this.state.error}</FormFeedback>}\r\n                </FormGroup>\r\n                <div \r\n                    className='flex mt-4'\r\n                    style={{ justifyContent: 'center' }}>\r\n                    <SSubmitField\r\n                        className='primary-btn'\r\n                        loading={this.state.loading}\r\n                        onClick={this.onSaveClicked}>\r\n                        Guardar\r\n                    </SSubmitField>\r\n                    <FormGroup>\r\n                        <Button \r\n                            className='simple-btn ml-2'\r\n                            onClick={this.onCancelClicked}>\r\n                            Cancelar\r\n                        </Button>\r\n                    </FormGroup>\r\n                </div>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comment: '',\r\n            error: null,\r\n            loading: false,\r\n        };\r\n\r\n        this.onCancelClicked = this.onCancelClicked.bind(this);\r\n        this.onTextChanged = this.onTextChanged.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onCancelClicked() {\r\n        this.props.onCancelClicked();\r\n    }\r\n\r\n    onTextChanged(e) {\r\n        this.setState({ comment: e.target.value, error: null });\r\n    }\r\n\r\n    async onSaveClicked() {\r\n        if (this.state.comment.trim() === '')\r\n            this.setState({ error: 'Escribe un comentario para poder guardarlo' });\r\n        else {\r\n            this.setState({ loading: true });\r\n            // Guardar el comentario actualizando la sesión\r\n            const { session } = this.props;\r\n            const { comment } = this.state;\r\n            const { error } = await this.props.updateActivitySession({\r\n                id: session, comment\r\n            });\r\n            \r\n            // Mostrar notificación de la acción de guardar el comentario\r\n            const message = error ?\r\n                            'Error al realizar la acción: guardar el comentario' :\r\n                            'Se realizó exitosamente la acción: guardar el comentario';\r\n            this.props.setNotification({ error, message, slide: true });\r\n            // Cerrar la ventana modal\r\n            this.setState({ comment: '', loading: false });\r\n            this.props.onCancelClicked();\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  setNotification,\r\n  updateActivitySession\r\n};\r\n\r\nexport default connect(\r\n  null, \r\n  mapActionsToProps\r\n)(SNewComment);","import SNewComment from './SNewComment';\r\nexport default SNewComment;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SVideo.module.css';\r\n\r\nconst SVideo = (props) => {\r\n    const absolute = props.absolute ? styles.absolute : '';\r\n    const width = props.width ? props.width : '100%';\r\n\r\n    return(\r\n        <div \r\n            className={`${styles.container} ${absolute}`}\r\n            style={{'--width': width }}>\r\n            <video \r\n                className={styles.video}\r\n                controls>\r\n\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SVideo;","import SVideo from './SVideo';\r\nexport default SVideo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SModal.module.css';\r\nimport { \r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport SNewComment from './SNewComment';\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nclass SModal extends Component {\r\n    render() {\r\n        return(\r\n            <Modal \r\n                centered={true}\r\n                contentClassName={styles.modal}\r\n                isOpen={this.props.ui.modal !== null}\r\n                size='lg'\r\n                toggle={this.closeModal}>\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    <span className={styles.title}>\r\n                        { this.props.ui.modal.title }\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody className={styles.body}>\r\n                    {\r\n                        this.props.ui.modal.type === 'new_comment' ?\r\n                        <SNewComment \r\n                          onCancelClicked={this.closeModal}\r\n                          session={this.props.ui.modal.session} />\r\n                        :\r\n                        <SVideo />\r\n                    }\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    closeModal() {\r\n        this.props.setModal(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SModal);","import SModal from './SModal';\r\nexport default SModal;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getUser = (id, toUpdate = false) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const user = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({\r\n            type: toUpdate ? SET_TO_UPDATE : SET_USER,\r\n            payload: { user }\r\n        });\r\n\r\n        return { error, message, user };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, user: null };\r\n    }\r\n}\r\n\r\nexport const getUsers = (query = null) => async (dispatch) => {\r\n    let url = `${apiURL}/user`;\r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const users = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_USERS, \r\n            payload: { users }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const updateUser = (user, userId) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${user.id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { user });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        /** Actualizar en el store solamente si es el \r\n          * usuario logueado\r\n          */\r\n        if (!error && user.id === userId)\r\n            dispatch({ \r\n                type: SET_USER, \r\n                payload: { user: data }\r\n            });\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_USER, \r\n        payload: { user }\r\n    });\r\n}\r\n\r\nexport const setUsers = (users) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_USERS,\r\n        payload: { users }\r\n    });\r\n}\r\n\r\nexport const setToUpdate = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_TO_UPDATE, \r\n        payload: { user }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setNotification,\r\n    setParallax, \r\n    showAvatar \r\n} from '@actions/ui';\r\nimport { getUser } from '@actions/user';\r\nimport { \r\n    setCheckServerStatus, \r\n    setConnectedId, \r\n    setConnectSocket \r\n} from '@actions/connection';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nclass SProtectedRoute extends Component {\r\n    render() {\r\n        const { component: Component, ...rest } = this.props;\r\n        const { role } = this.state;\r\n\r\n        return(\r\n            <Route {...rest} render={(props) => (\r\n                this.hasToken(role) ?\r\n                <Component {...props} />\r\n                :\r\n                <Redirect to={`/${role}`} />\r\n            )} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { role: this.getRoleFromPath() };\r\n        this.hasToken = this.hasToken.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { role } = this.state;\r\n        this.showAvatar(role);\r\n        this.setBar(role);\r\n        this.setParallax(role);\r\n        this.checkServerStatus(true);\r\n                \r\n        if (this.hasToken(role) && this.props.user === null) {\r\n            /** \r\n             * Obtener el parámetro relacionado al id del usuario \r\n             * de acuerdo al rol\r\n             */\r\n            const { computedMatch } = this.props;\r\n            const letter = role === PATIENT ? 'p' : 't';\r\n            const id = computedMatch.params[`${letter}id`];\r\n            \r\n            const { error, user } = await this.props.getUser(id);\r\n            if (!error) this.connectSocket(role, user.id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disconnectSocket();\r\n        this.checkServerStatus(false);\r\n        this.props.setNotification(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    checkServerStatus(check) {\r\n        this.props.setCheckServerStatus(check);\r\n    }\r\n\r\n    connectSocket(role, userId) {\r\n        if (role === PATIENT) {\r\n            this.props.setConnectedId(userId);\r\n            this.props.setConnectSocket(true);\r\n        }\r\n    }\r\n\r\n    disconnectSocket() {\r\n        this.props.setConnectSocket(false);\r\n    }\r\n\r\n    getRoleFromPath() {\r\n        const { path } = this.props;\r\n        const role = path.split('/')[1];\r\n        return role;\r\n    }\r\n\r\n    hasToken(role) {\r\n        const token = this.props.auth[`${role}Token`];\r\n        if (token) {\r\n            if (!axios.defaults.headers.common['Auth-Token'])\r\n                axios.defaults.headers.common['Auth-Token'] = token;\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setBar(role) {\r\n        const bar = role === PATIENT ? 'patient' : 'standard';\r\n        this.props.setBar(bar);\r\n    }\r\n\r\n    setParallax(role) {\r\n        const parallax = role === PATIENT;\r\n        this.props.setParallax(parallax);\r\n    }\r\n\r\n    /** Mandar a mostrar avatar dependiendo del rol */\r\n    showAvatar(role) {\r\n        const show = role === PATIENT ? true : false;\r\n        this.props.showAvatar(show);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    setBar,\r\n    setCheckServerStatus,\r\n    setConnectedId,\r\n    setConnectSocket,\r\n    setNotification,\r\n    setParallax,\r\n    showAvatar\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProtectedRoute);","import SProtectedRoute from './SProtectedRoute';\r\nexport default SProtectedRoute;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarInfo.module.css';\r\n\r\nconst SAvatarInfo = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <div className={`${styles.sides} ${styles.avatarSide}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src='/images/avatar/avatar_a_default.png' />                    \r\n                </div>\r\n                <div className={styles.sides}>\r\n                    <p className={styles.title}>\r\n                        ¡Avatar para apoyar las terapias!\r\n                    </p>\r\n                    <p className={styles.description}>\r\n                        Cómo terapeuta puedes personalizar un avatar con el que\r\n                        tu paciente podrá interactuar mientras realiza sus \r\n                        actividades asignadas\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarInfo;","import SAvatarInfo from './SAvatarInfo';\r\nexport default SAvatarInfo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SDevelop.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SDevelop = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <p className={styles.text}>\r\n                    Ideado y desarrollado con \r\n                    <FontAwesomeIcon \r\n                        className={styles.icon}\r\n                        icon={faHeart} />\r\n                    por un equipo interdisciplinar de\r\n                </p>\r\n                <div className={`flex ${styles.logoContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_incs.png' />\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_pujc.png' /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SDevelop;","import SDevelop from './SDevelop';\r\nexport default SDevelop;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeature.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst SFeature = (props) => {\r\n    return(\r\n        <Col sm='12' md='4'>\r\n            <div className={`flex ${styles.container}`}>\r\n                <img \r\n                    alt=''\r\n                    className={styles.logo}\r\n                    src={props.feature.logo} />\r\n                <div className={styles.infoContainer}>\r\n                    <div className={styles.title}>\r\n                        {props.feature.title}\r\n                    </div>\r\n                    <div className={styles.description}>\r\n                        {props.feature.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default SFeature;","import SFeature from './SFeature';\r\nexport default SFeature;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeatures.module.css';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport SFeature from './SFeature';\r\n\r\nconst SFeatures = (props) => {\r\n    return(\r\n        <div>\r\n            <div className={styles.title}>\r\n                Si eres {props.role}\r\n            </div>\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.innerContainer}>\r\n                    <Row noGutters>\r\n                        {\r\n                            props.features.map((feature) => {\r\n                                return(\r\n                                    <SFeature\r\n                                        feature={feature}\r\n                                        key={feature.id} />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFeatures;","import SFeatures from './SFeatures';\r\nexport default SFeatures;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFooterBar.module.css';\r\n\r\nconst SFooterBar = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.logo}>\r\n                    SATReLO 2<br />\r\n                    <span className={styles.copyright}>\r\n                        &copy; Copyright 2019-2020\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFooterBar;","import SFooterBar from './SFooterBar';\r\nexport default SFooterBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SHero.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nconst SHero = () => {\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.outerContainer}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={styles.title}>\r\n                        La Aplicación de Apoyo a la Rehabilitación \r\n                        del Lenguaje Oral\r\n                    </div>\r\n                    <div className={styles.subtitle}>\r\n                        Generación de actividades personalizadas para atender \r\n                        las necesidades particulares de los pacientes\r\n                    </div>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Link className={styles.link} to='/paciente'>\r\n                            <Button \r\n                                className={`secondary-btn ${styles.btn}`}\r\n                                size='lg'>\r\n                            \r\n                                Ingresa como paciente\r\n                            </Button>\r\n                        </Link>\r\n                        <Link className={styles.link} to='terapeuta'>\r\n                            <Button\r\n                                className={`primary-btn ${styles.btn}`} \r\n                                size='lg'>\r\n                                    Ingresa como terapeuta\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <SVideo absolute={true} width='700px' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SHero;","import SHero from './SHero';\r\nexport default SHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMobile.module.css';\r\n\r\nconst SMobile = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.title}>\r\n                    ¡En todos tus dispositivos!\r\n                </p>\r\n                <p className={styles.description}>\r\n                    SATReLO está cuidadosamente diseñado para que se vea y funcione\r\n                    bien en todos tus dispositivos, ya sean computadores, tablets o \r\n                    smartphones.\r\n                </p>\r\n                <div className={`flex ${styles.imageContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src='images/landing/mobile.png' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMobile;","import SMobile from './SMobile';\r\nexport default SMobile;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport let featuresData = {\r\n    therapist: {\r\n        role: 'terapeuta',\r\n        features: [\r\n            {\r\n                description: `Configura y genera actividades personalizadas\r\n                                de acuerdo a las necesidades del paciente`,\r\n                id: 1,\r\n                logo: '/images/landing/settings.png',\r\n                title: 'Configura actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Asigna las actividades generadas al paciente \r\n                                correspondiente`,\r\n                id: 2,\r\n                logo: '/images/landing/user.png',\r\n                title: 'Asígnalas al paciente',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Recibe retroalimentación del progreso del paciente\r\n                                en las actividades`,\r\n                id: 3,\r\n                logo: '/images/landing/feedback.png',\r\n                title: 'Recibe retroalimentación',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    },\r\n    patient: {\r\n        role: 'paciente',\r\n        features: [\r\n            {\r\n                description: `Realiza las actividades asignadas por el\r\n                                terapeuta`,\r\n                id: 1,\r\n                logo: '/images/landing/game.png',\r\n                title: 'Juega las actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Gana puntos a medida que completas las\r\n                                actividades asignadas`,\r\n                id: 2,\r\n                logo: '/images/landing/score.png',\r\n                title: 'Acumula puntos',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Intercambia los puntos en la tienda por\r\n                                coleccionables`,\r\n                id: 3,\r\n                logo: '/images/landing/collection.png',\r\n                title: 'Completa la colección',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SLandingPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SavatarInfo from '@components/landing/SAvatarInfo';\r\nimport SDevelop from '@components/landing/SDevelop';\r\nimport SFeatures from '@components/landing/SFeatures';\r\nimport SFooterBar from '@components/shared/SFooterBar';\r\nimport SHero from '@components/landing/SHero';\r\nimport SMobile from '@components/landing/SMobile';\r\n\r\nimport { featuresData } from '@data/features';\r\n\r\nclass SLandingPage extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12' className={styles.container}>\r\n                    <SHero />\r\n                    <div className={styles.mainPhrase}>\r\n                        ¿Cómo ayuda SATReLO en las terapias de\r\n                        rehabilitación?\r\n                        <p className={styles.mainIdea}>\r\n                            SATReLO ayuda en la mecanización de la \r\n                            estructuración del lenguaje oral y escrito\r\n                            por medio de la realización de actividades a \r\n                            modo de juegos\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.features}>\r\n                        <p className={styles.featuresTitle}>\r\n                            ¿Cómo funciona?\r\n                        </p>\r\n                        <SFeatures \r\n                            {...this.state.featuresData.therapist} />\r\n                        <SFeatures\r\n                            {...this.state.featuresData.patient} />\r\n                    </div>\r\n                    <SavatarInfo />\r\n                    <SMobile />\r\n                    <SDevelop />\r\n                    <SFooterBar />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = { ...this.state, featuresData };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setUser,\r\n    setBar,\r\n    setParallax,\r\n    showAvatar,\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SLandingPage);\r\n","import SLandingPage from './SLandingPage';\r\nexport default SLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getAvatarVariation = (variationData) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variation`;\r\n\r\n    try {\r\n        const response = await axios.get(url, { params: { ...variationData }});\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const variation = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATION, \r\n            payload: { variation }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getAvatarVariations = (gender, userAvatar) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variations/${gender}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, status, message }} = response;\r\n        \r\n        let variations = status === 200 ? data : { 1: { id: 1, id_avatar: 1 }};\r\n        const error = status !== 200;\r\n\r\n        if (!error && userAvatar) {\r\n            variations = Object.values(variations);\r\n            /** Buscar y eliminar el avatar con el mismo id \r\n              * del avatar del usuario\r\n              */\r\n            let index = 0;\r\n            variations.forEach((variation, i) => {\r\n                if (userAvatar.id === variation.id)\r\n                    index = i;\r\n            });\r\n            variations.splice(index, 1);\r\n            /** Reemplazar el avatar del usuario\r\n              * colocándolo en el primer lugar del arreglo  \r\n              */\r\n            variations.unshift(userAvatar);\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n        }\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATIONS, \r\n            payload: { variations }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };   \r\n    }\r\n}\r\n\r\nexport const setAvatarVariation = (variation) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_VARIATION, \r\n        payload: { variation }\r\n    });\r\n}\r\n\r\nexport const setAvatarVariations = (variations) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_AVATAR_VARIATIONS,\r\n        payload: { variations }\r\n    });\r\n}\r\n\r\nexport const setMessage = (message) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_MESSAGE, \r\n        payload: { message }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarItem.module.css';\r\n\r\nconst SAvatarItem = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <img \r\n                alt=''\r\n                className={styles.image}\r\n                src='/images/avatar/avatar_a_default.png' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarItem;","import SAvatarItem from './SAvatarItem';\r\nexport default SAvatarItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKINS_OWNED,\r\n    SET_USER_SKIN_OWNED,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getCollections = () => async (dispatch) => {\r\n    const url = `${apiURL}/collection`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collections = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTIONS, \r\n            payload: { collections }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getCollectable = (collectionId, collectableId) => async (dispatch) => {\r\n    const url = `${apiURL}/collection/${collectionId}/collectable/${collectableId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collectable = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTABLE, \r\n            payload: { collectable }\r\n        });\r\n        \r\n        return { data, error, message }; \r\n    }\r\n    catch (err) {\r\n        return { data: null, error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Función para verificar si un usuario tiene un aspecto o no */\r\nexport const getPatientSkin = (userId, skinData) => async (dispatch) => {\r\n    const { skinId } = skinData;\r\n    const url = `${apiURL}/patient/${userId}/skin/${skinId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const { single } = skinData;\r\n            dispatch({\r\n                type: single ? SET_USER_SKIN_OWNED : SET_USER_SKINS_OWNED, \r\n                payload: { data: skinData } \r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setCollections = (collections) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_COLLECTIONS, \r\n        payload: { collections }\r\n    });\r\n}\r\n\r\nexport const setCollectable = (collectable) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_COLLECTABLE,\r\n        payload: { collectable }\r\n    });\r\n}\r\n\r\n/** Función para asociar aspectos al usuario */\r\nexport const setPatientSkins = (userId, skinData) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${userId}/skin`;\r\n    const { skins } = skinData;\r\n\r\n    try {\r\n        const response = await axios.post(url, { skins });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            delete skinData.skins;\r\n            /** Agregar aspecto desde la lista de coleccionables */\r\n            if (skinData.single) {\r\n                dispatch({\r\n                    type: SET_USER_SKIN_OWNED, \r\n                    payload: { data: skinData }\r\n                });\r\n            }\r\n            /** Agregar aspectos desde la lista de aspectos */\r\n            else {\r\n                skins.forEach(skin => {\r\n                    skinData.skinId = skin.id;\r\n                    dispatch({\r\n                        type: SET_USER_SKINS_OWNED, \r\n                        payload: { data: skinData }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSkinItem.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\n\r\nclass SSkinItem extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <p className={styles.alt}>\r\n                    { this.props.name }\r\n                </p>\r\n                {\r\n                    this.props.owned ?\r\n                    <div className={styles.owned}>\r\n                        Ya tienes este ítem\r\n                    </div>\r\n                    :\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`primary-btn ${styles.btn}`}\r\n                            onClick={this.onBuyClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>\r\n                                    Comprar por { this.state.price } puntos\r\n                                </span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loading: false,\r\n            price: this.props.price + this.props.collectable.price \r\n        };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkUserSkin();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        /**\r\n         * Si el coleccionable cambió quiere decir que se detectó que\r\n         * uno de sus aspectos pertenece al usuario, por lo que el \r\n         * coleccionable en general es propiedad de usuario. Si esto\r\n         * es así el precio es solamente el del aspecto.\r\n         */\r\n        if (prevProps.collectable !== this.props.collectable)\r\n            this.updatePrice();       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        let data = {\r\n            collectableId: this.props.collectable.id,\r\n            collectionId: this.props.collectable.id_collection,\r\n            single: false,\r\n        }\r\n        if (check) data.skinId = this.props.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkins(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        await this.props.setPatientSkins(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        let _skins = [{ id: this.props.id }];\r\n        /**\r\n         * Si el precio del aspecto es menor al precio calculado en el\r\n         * estado de este componente, entonces el coleccionable no es \r\n         * propiedad del usuario por lo que se debe agregar el aspecto\r\n         * por defecto a los aspectos para comprar.\r\n         */\r\n        if (this.props.price < this.state.price) {\r\n            const Skins = Object.values(this.props.collectable.Skins);\r\n            Skins.forEach(skin => {\r\n                if (skin.is_default && skin.id !== this.props.id) {\r\n                    _skins.push({ id: skin.id });\r\n                }\r\n            });\r\n        }\r\n        this.buySkins(_skins);\r\n    }\r\n\r\n    updatePrice() {\r\n        if (this.props.price !== this.state.price)\r\n            this.setState({ price: this.props.price });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatientSkin,\r\n    setPatientSkins,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SSkinItem);","import SSkinItem from './SSkinItem';\r\nexport default SSkinItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SCarousel.module.css';\r\nimport {\r\n    Carousel,\r\n    CarouselControl,\r\n    CarouselItem,\r\n} from 'reactstrap';\r\n\r\nimport SAvatarItem from './SAvatarIem';\r\nimport SSkinItem from './SSkinItem';\r\n\r\nclass SCarousel extends Component {\r\n    render() {\r\n        const { kind } = this.props;\r\n        let base = styles.style;\r\n        if (kind !== 'avatar')\r\n            base = `${base} ${styles.border}`;\r\n\r\n        return(\r\n            <Carousel\r\n                className={base}\r\n                activeIndex={this.state.activeIndex}\r\n                interval={false}\r\n                next={this.next}\r\n                previous={this.previous}>\r\n                \r\n                {this.buildItems()}\r\n\r\n                <CarouselControl\r\n                    direction='prev'\r\n                    onClickHandler={this.previous} />\r\n                <CarouselControl \r\n                    direction='next'\r\n                    onClickHandler={this.next} />\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0,\r\n            animating: false,\r\n        };\r\n        this.animateItem = this.animateItem.bind(this);\r\n        this.buildItems = this.buildItems.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    animateItem(animate) {\r\n        this.setState({ animating: animate });\r\n    }\r\n\r\n    /** Construir los items que component el Carousel */\r\n    buildItems() {\r\n        return this.props.items.map((item) => {\r\n            return(\r\n                <CarouselItem\r\n                    key={item.id}\r\n                    onExiting={() => { this.animateItem(true); }}\r\n                    onExited={() => { this.animateItem(false); }}>\r\n                    {\r\n                        this.props.kind === 'avatar' ?\r\n                        <SAvatarItem />\r\n                        :\r\n                        <SSkinItem \r\n                            {...item} \r\n                            userId={this.props.userId} />\r\n                    }\r\n                </CarouselItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    goToIndex(newIndex) {\r\n        if (this.state.animating)\r\n            return\r\n        this.setState({ activeIndex: newIndex });\r\n        this.onCarouselChanged(newIndex);\r\n    }\r\n\r\n    next() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === this.props.items.length - 1 ?\r\n                        0 : this.state.activeIndex + 1;\r\n        this.setState({ activeIndex : nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    previous() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === 0 ?\r\n                        this.props.items.length - 1 : this.state.activeIndex - 1;\r\n        this.setState({ activeIndex: nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    onCarouselChanged(index) {\r\n        if (this.props.kind === 'avatar') {\r\n            const selected = this.props.items[index];\r\n            this.props.onCarouselChanged(selected);\r\n        }\r\n    }\r\n}\r\n\r\nexport default SCarousel;","import SCarousel from './SCarousel';\r\nexport default SCarousel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst SContainer = (props) => {\r\n    let padding = 20;\r\n    if (props.padding !== undefined) padding = props.padding;\r\n     \r\n    return(\r\n        <div style={{\r\n            border: '1px solid #E0E0E0',\r\n            borderRadius: '3px',\r\n            boxShadow: '3px 3px 10px -3px #E0E0E0',\r\n            padding: `15px ${padding}px`,\r\n            width: '100%'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SContainer;","import SContainer from './SContainer';\r\nexport default SContainer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const options = {\r\n    eye: { \r\n        id: 1,\r\n        name: 'Ojos', \r\n        dbalias: 'eye' \r\n    },\r\n    hair: { \r\n        id: 2, \r\n        name: 'Cabello', \r\n        dbalias: 'hair'\r\n    },\r\n    torso: { \r\n        id: 3,\r\n        name: 'Torso', \r\n        dbalias: 'torso'\r\n    },\r\n};\r\n\r\nexport const eye = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                name: 'Azul'\r\n            },\r\n            brown: {\r\n                id: 2,\r\n                button: 'brown',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de ojos'\r\n    }\r\n};\r\n\r\nexport const hair = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            black: {\r\n                id: 1,\r\n                button: 'black',\r\n                name: 'Negro'\r\n            },\r\n            blonde: {\r\n                id: 2,\r\n                button: 'blonde',\r\n                name: 'Rubio'\r\n            },\r\n            brown: {\r\n                id: 3,\r\n                button: 'brown',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de cabello'\r\n    }\r\n};\r\n\r\nexport const torso = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                name: 'Azul'\r\n            },\r\n            green: {\r\n                id: 2,\r\n                button: 'green',\r\n                name: 'Verde'\r\n            },\r\n            purple: {\r\n                id: 3,\r\n                button: 'purple',\r\n                name: 'Morado'\r\n            }\r\n        },\r\n        title: 'Color del torso'\r\n    }\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STACustomizer.module.css';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport { options, eye, hair, torso } from '@data/customizer';\r\n\r\nclass STACustomizer extends Component {\r\n    render() {\r\n        return(\r\n            <SContainer padding={0}>\r\n                <div className={`${styles.container} ${styles.header}`}>\r\n                    <Row noGutters>\r\n                        {this.buildOptions()}\r\n                    </Row>\r\n                </div>                \r\n                {this.buildSections()}\r\n            </SContainer>\r\n        );\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { options, eye, hair, torso, option: 'eye' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onSectionOptionClicked = this.onSectionOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Métodos de construcción de la UI */\r\n    buildOptions() {\r\n        const options = Object.values(this.state.options);\r\n        return options.map(option => {\r\n            let style = `ghost-btn ${styles.btn}`;\r\n            if (option.dbalias === this.state.option)\r\n                style = `${style} ${styles.selected}`;\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={style}\r\n                        name={option.dbalias}\r\n                        onClick={this.onOptionClicked}>\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSections() {\r\n        const { option } = this.state;\r\n        const sections = Object.values(this.state[option]);\r\n        return sections.map((section, i) => {\r\n            return( \r\n                <div className={styles.container} key={i}>\r\n                    <div className={styles.title}>\r\n                        {section.title}\r\n                    </div>\r\n                    <Row noGutters>\r\n                        {this.buildSectionsOptions(section)}\r\n                    </Row>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSectionsOptions(section) {\r\n        const { kind, name } = section;\r\n        const options = Object.values(section.options);\r\n        return options.map(option => {\r\n            let style = `ghost-btn ${styles.btn} ${styles[kind]}`;\r\n            if (option.selected) style = `${style} ${styles.selected}`;\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={style}\r\n                        name={`${name}-${option.button}-${option.name}`}\r\n                        onClick={this.onSectionOptionClicked}>\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    /** Eventos */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n\r\n    onSectionOptionClicked(e) {\r\n        const { name } = e.target;\r\n        /** Obtener el nombre de la sección y el nombre del botón */\r\n        const names = name.split('-');\r\n        const section = names[0];\r\n        const sectionOpt = names[1];\r\n        const optionName = names[2];\r\n\r\n        /** Marcar como seleccionado en el estado */\r\n        const { option } = this.state;\r\n        let options = this.state[option];\r\n        let soptions = Object.values(options[section].options);\r\n        soptions.forEach(soption => {\r\n            soption.selected = soption.button === sectionOpt ? true : false;\r\n        });\r\n\r\n        this.setState({ [option]: options });\r\n\r\n        /** Mandar a traer la imagen con las características seleccionadas */\r\n        this.props.onOptionSelected({ \r\n            option, section, selected: optionName \r\n        });\r\n    }\r\n}\r\n\r\nexport default STACustomizer;","import STACustomizer from './STACustomizer';\r\nexport default STACustomizer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STAvatarPanel.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getAvatarVariation, \r\n    getAvatarVariations\r\n} from '@actions/avatar';\r\n\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport STACustomizer from './STACustomizer';\r\n\r\nclass STAvatarPanel extends Component {\r\n    render() {\r\n        let { variations } = this.props;\r\n        variations = variations ? Object.values(variations) : [];\r\n        \r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                <Col className={styles.carousel} sm='12' md='7'>\r\n                    {variations && <SCarousel \r\n                        items={variations}\r\n                        kind='avatar'\r\n                        onCarouselChanged={this.onCarouselChanged} />}\r\n                </Col>\r\n                <Col sm='12' md='5'>\r\n                    <STACustomizer\r\n                        onOptionSelected={this.onOptionSelected} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { current: null, eye: null, hair: null, torso: null };\r\n        this.onCarouselChanged = this.onCarouselChanged.bind(this);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user) this.getVariations();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user && !this.props.variations) \r\n            this.getVariations();\r\n\r\n        if (this.props.variations) {\r\n            const variations = Object.values(this.props.variations);\r\n            if (this.state.current !== variations[0])\r\n                this.setState({ current: variations[0] });\r\n        }\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Obtener una variación determinada */\r\n    async getVariation() {\r\n        let state = Object.assign({}, this.state);\r\n        let current = Object.assign({}, state.current);\r\n        delete state.current;\r\n        /** Construir el data para el request */\r\n        const keys = Object.keys(state);\r\n        let data = { id_avatar: current.id_avatar };\r\n        keys.forEach(key => {\r\n            const value = this.state[key];\r\n            if (value) data[key] = value;\r\n        });\r\n        /** Borrar los valores que no se necesitan en current */\r\n        delete current.id;\r\n        delete current.img_path;\r\n        delete current.thumbnail_path;\r\n        data = { ...current, ...data };\r\n        /** Realizar el request para obtener la variación */\r\n        await this.props.getAvatarVariation(data);\r\n    }\r\n\r\n    /** Obtener una variación dependiendo del género */\r\n    async getVariations() {\r\n        const { Avatar_Variation, gender } = this.props.user;\r\n        await this.props.getAvatarVariations(gender, Avatar_Variation);\r\n    }\r\n\r\n    onCarouselChanged(selected) {\r\n        if (selected !== this.state.current)\r\n            this.setState({ current: selected });\r\n    }\r\n\r\n    onOptionSelected(data) {\r\n        /** Actualizar el valor de la opción seleccionada en el estado */\r\n        const { option, section, selected } = data;\r\n        let current = this.state[option];\r\n        if (current) \r\n            current[section] = selected;\r\n        else\r\n            current = { [section]: selected };\r\n        \r\n        this.setState({ [option]: current }, () => {\r\n            this.getVariation();\r\n        });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        variations: state.avatar.variations\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getAvatarVariation,\r\n    getAvatarVariations\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STAvatarPanel);","import STAvatarPanel from './STAvatarPanel';\r\nexport default STAvatarPanel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nconst STLayout = (props) => {\r\n    /** Calcular el tamaño del layout dependiendo del page */\r\n    const xlSize = props.page === 'feedback' ? '10' : '9';\r\n    const mt = props.mt ? props.mt : 62;\r\n\r\n    return(\r\n        <div className={`flex ${styles.outerContainer}`}>\r\n            <Row \r\n                className={`justify-content-center ${styles.rowContainer}`} \r\n                noGutters>\r\n                <Col\r\n                    xs='12' \r\n                    sm='12' \r\n                    md='12' \r\n                    lg='12' \r\n                    xl={xlSize}>\r\n                    <div \r\n                        className={styles.container}\r\n                        style={{ '--mt': `${mt}px`, '--pt': `${props.pt}px` }}>\r\n                        { props.children }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default STLayout;","import STLayout from './STLayout';\r\nexport default STLayout;","import SUserHero from './SUserHero';\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserHero.module.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL; \r\n\r\nclass SUserHero extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n\r\n                </div>\r\n                <div className={`flex ${styles.userContainer}`}>\r\n                    <Row \r\n                        className={`justify-content-center ${styles.row}`} \r\n                        noGutters>\r\n                        <Col className={`flex ${styles.col}`} xs='12' xl='9'>\r\n                            {\r\n                                user && user.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${user.profile_img}`} />\r\n                                :\r\n                                user && user.thumbnail_alias ?\r\n                                <div \r\n                                    className={`flex ${styles.alias}`}\r\n                                    style={{ backgroundColor: user.color }}>\r\n                                    {user.thumbnail_alias}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div className={styles.uname}>\r\n                                {user && \r\n                                <span>{user.name} {user.last_name}</span>}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SProfilePage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setAvatarVariations } from '@actions/avatar';\r\n\r\nimport STAvatarPanel from '@components/therapist/STAvatarPanel';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nclass SProfilePage extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        let role = null;\r\n        if (user) role = user.Role.name;\r\n\r\n        /** Estilos de los botones */\r\n        const base = `ghost-btn ${styles.btn}`;\r\n        const { option } = this.state;\r\n\r\n        const btnAvatar = option === 'avatar' ? `${base} ${styles.selected}` : base;\r\n        const btnInfo = option === 'info' ? `${base} ${styles.selected}` : base;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={user} />\r\n                <STLayout mt={298}>\r\n                    <div className={styles.options}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span className={`flex ${styles.optContainer}`}>\r\n                                <Button\r\n                                    className={btnInfo}\r\n                                    name='info'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Información\r\n                                </Button>\r\n                                <Button\r\n                                    className={btnAvatar}\r\n                                    name='avatar'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Avatar\r\n                                </Button>\r\n                            </span>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.state.option === 'avatar' ?\r\n                        <STAvatarPanel />\r\n                        :\r\n                        null\r\n                    }\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { option: 'avatar' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAvatarVariations(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setAvatarVariations\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProfilePage);","import SProfilePage from './SProfilePage';\r\nexport default SProfilePage;","import SEmpty from './SEmpty';\r\nexport default SEmpty;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SEmpty.module.css';\r\n\r\nconst SEmpty = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <p className={styles.text}>\r\n                { props.children }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SEmpty;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivity.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createActivitySession, setActivity } from '@actions/activity';\r\nimport { setFullScreen, setModal, setNotification } from '@actions/ui';\r\n\r\nclass SPActivity extends Component {\r\n    render() {\r\n        const { activity, id } = this.props;\r\n        if (this.state.session) {\r\n            const path = `/paciente/${id}/actividades/${activity.id}` +\r\n                          `/sesiones/${this.state.session.id}`;\r\n            return <Redirect to={path} push />\r\n        }\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.gameImage} />\r\n                <div className={styles.gameContainer}>\r\n                    <p className={styles.gameTitle}>\r\n                        { activity.Activity.name }\r\n                    </p>\r\n                    <p className={styles.gameDescription}>\r\n                        { activity.Activity.description }\r\n                    </p>\r\n\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`simple-btn ${styles.btn}`}\r\n                            onClick={this.onTutorialClicked}>\r\n                            Tutorial\r\n                        </Button>\r\n                        <Button \r\n                            className={`${styles.btn} pdf-btn`}\r\n                            onClick={this.onPlayClicked}>\r\n                            { \r\n                                this.state.loading ? \r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>Jugar</span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false,\r\n          session: null, \r\n        };\r\n\r\n        this.onPlayClicked = this.onPlayClicked.bind(this);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async onPlayClicked() {\r\n        this.setState({ loading: true });\r\n        /** Crear una nueva sesión de juego */\r\n        const { activity } = this.props;\r\n        const response = await this.props.createActivitySession(activity.id);\r\n        const { data, error, message } = response;\r\n\r\n        this.setState({ loading: false });\r\n        if (error)\r\n            this.props.setNotification({ error, message, slide: true });\r\n        else {\r\n            this.setState({ session: data }, () => {\r\n                this.props.setActivity(activity);\r\n                this.props.setFullScreen(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    onTutorialClicked() {\r\n        const modal = {\r\n            title: 'Video tutorial',\r\n            type: 'video',\r\n            videoUrl: ''\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createActivitySession,\r\n    setActivity,\r\n    setFullScreen,\r\n    setModal,\r\n    setNotification,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPActivity);","import SPactivity from './SPActivity';\r\nexport default SPactivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintianer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SPLayout extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n        \r\n        return(\r\n            <div className={`flex ${styles.outerContainer}`}>\r\n                <Row className={styles.rowContainer} noGutters>\r\n                    <Col\r\n                        xs='12' \r\n                        sm='12' \r\n                        md={{ size: 7, offset: 5 }}\r\n                        style={{ '--vOffset': `${vOffset}px` }}>\r\n                        <div className={styles.container}>\r\n                            { this.props.children }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SPLayout);","import SPLayout from './SPLayout';\r\nexport default SPLayout;","import SSpinner from './SSpinner';\r\nexport default SSpinner;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst SSpinner = (props) => {\r\n    return(\r\n        <div\r\n            style={{\r\n                marginTop: '30px',\r\n                padding: '5px',\r\n                textAlign: 'center',\r\n                width: '100%' \r\n            }}>\r\n            <Spinner color={props.color} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSpinner;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const messages = {\r\n    activities: [\r\n        'Elige la opción jugar de una de las actividades ' +\r\n        'para comenzar a divertirnos.'\r\n    ],\r\n    collectable: [\r\n        'También puedes cambiar tus puntos por diferentes ' +\r\n        'aspectos. !Colecciónalos todos!'\r\n    ],\r\n    collections: [\r\n        '!Aquí puedes cambiar tus puntos por la colección ' +\r\n        'que más te guste!'        \r\n    ],\r\n    landing: [\r\n        '¡Bienvenido a SATReLO! Es hora de jugar. ' +\r\n        'Para iniciar ingresa tu nombre y clave.',\r\n        '¡Hola! Vamos a divertirnos juntos. Para ' +\r\n        'iniciar ingresa tu nombre y clave.',\r\n    ],\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivitiesPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPActivity from '@components/patient/SPActivity';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { activities } = messages;\r\n\r\nclass SPActivitiesPage extends Component {\r\n    render() {\r\n        const { pid } = this.props.match.params;\r\n        let { activities } = this.props;\r\n        activities = activities ? Object.values(activities) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <p className={styles.title}>\r\n                    Mis actividades\r\n                </p>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        activities && activities.length > 0 ?\r\n                        activities.map((activity) => {\r\n                            return(\r\n                                <SPActivity\r\n                                    activity={activity}\r\n                                    id={pid} \r\n                                    key={activity.id} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty>\r\n                            Aún no tienes actividades asignadas...\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user) {\r\n            /** Enviar mensaje al avatar */\r\n            let message = activities[Math.floor(Math.random() * activities.length)];\r\n            message = `!${this.props.user.name}! ${message}`;\r\n\r\n            if (message !== this.props.avatar.message)\r\n                this.props.setMessage(message);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        avatar: state.avatar,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    setActivities,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPActivitiesPage);","import SPActivitiesPage from './SPActivitiesPage';\r\nexport default SPActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectableInfoPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollectable, setCollectable } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collectable } = messages;\r\n\r\nclass SPCollectableInfoPage extends Component {\r\n    render() {\r\n        const { collectable } = this.props;\r\n\r\n        return(\r\n            <SPLayout>\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='light' />\r\n                    :\r\n                    collectable ?\r\n                    <div className={styles.container}>\r\n                        <p className={styles.title}>\r\n                            { collectable.name }\r\n                        </p>\r\n                        <SCarousel \r\n                            items={Object.values(collectable.Skins)}\r\n                            userId={this.state.userId} />\r\n                        <p className={styles.descriptionTitle}>\r\n                            Resumen\r\n                        </p>\r\n                        <p className={styles.description}>\r\n                            { this.state.currentSkin && \r\n                                this.state.currentSkin.summary }\r\n                        </p>\r\n                    </div>\r\n                    :\r\n                    <SEmpty>\r\n                        No se encontró información del coleccionable.\r\n                    </SEmpty>\r\n                }\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currentSkin: null, loading: true, userId: null \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collectable[Math.floor(Math.random() * collectable.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectableInfo();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollectable(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectableInfo() {\r\n        this.setState({ loading: true });\r\n        let { id, cid } = this.props.match.params;\r\n\r\n        const response = await this.props.getCollectable(id, cid);\r\n        const { data, error } = response;\r\n        const skins = Object.values(data.Skins);\r\n        const skin = error ? null : skins[0];\r\n\r\n        this.setState({ currentSkin: skin, loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollectable,\r\n    setCollectable,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectableInfoPage);","import SPCollectableInfoPage from './SPCollectableInfoPage';\r\nexport default SPCollectableInfoPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectable.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\n\r\nclass SPCollectable extends Component {\r\n    render() {\r\n        const { userId } = this.props;\r\n        const { collectable } = this.props;\r\n        const { id, id_collection } = collectable;\r\n        const cid = id_collection;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Link \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    to={`/paciente/${userId}/colecciones/${cid}/coleccionable/${id}`}>\r\n                </Link>\r\n                <div className={styles.info}>\r\n                    <p className={styles.name}>\r\n                        { collectable.name }\r\n                    </p>\r\n                    <p className={styles.points}>\r\n                        Necesitas { collectable.price } puntos\r\n                    </p>\r\n                </div>\r\n                {\r\n                    collectable.Skins.owned ?\r\n                    <div className={styles.owned}>\r\n                        Adquirido\r\n                    </div>\r\n                    :\r\n                    <Button \r\n                        className={`primary-btn ${styles.btnBuy}`}\r\n                        onClick={this.onBuyClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='' size='sm' /> \r\n                            : <span>Comprar</span>\r\n                        }\r\n                    </Button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkUserSkin();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        const { collectable } = this.props;\r\n        let data = { \r\n            collectableId: collectable.id,\r\n            collectionId: collectable.id_collection,\r\n            single: true\r\n        };\r\n        if (check) data.skinId = collectable.Skins.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkin(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        await this.props.setPatientSkins(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        \r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        const skin = this.props.collectable.Skins;\r\n        this.buySkin([skin]);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatientSkin,\r\n    setPatientSkins,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPCollectable);","import SPCollectable from './SPCollectable';\r\nexport default SPCollectable;","import SPCollection from './SPCollection';\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPCollection.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SPCollectable from './SPCollectable';\r\n\r\nconst SPCollection = (props) => {\r\n    const collectables = Object.values(props.Collectables);\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <p className={styles.title}>\r\n                Colección de {props.name}\r\n            </p>\r\n\r\n            <Row className={styles.rowContainer} noGutters>\r\n                {collectables.map((collectable) => {\r\n                    return(\r\n                        <Col \r\n                            className={styles.col}\r\n                            sm='12' \r\n                            md='4' \r\n                            key={collectable.id}>\r\n                            <SPCollectable\r\n                                collectable={collectable}\r\n                                userId={props.userId} />\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectionsPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollections, setCollections } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPCollection from '@components/patient/SPCollection';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collections } = messages;\r\n\r\nclass SPCollectionsPage extends Component {\r\n    render() {\r\n        let { collections } = this.props;\r\n        collections = collections ? Object.values(collections) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div className={styles.container}>                        \r\n                    <p className={styles.title}>Colecciones</p>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        collections &&\r\n                        collections.length > 0 ?\r\n                        collections.map((collection) => {\r\n                            return(\r\n                                <SPCollection\r\n                                    {...collection}\r\n                                    key={collection.id}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty>\r\n                            No se encontraron colecciones.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, userId: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collections[Math.floor(Math.random() * collections.length)];\r\n        this.props.setMessage(message);\r\n        \r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectionsList();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollections(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectionsList() {\r\n        this.setState({ loading: true });\r\n        await this.props.getCollections();\r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collections: state.collection.collections,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollections,\r\n    setCollections,\r\n    setMessage,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectionsPage);","import SPCollectionsPage from './SPCollectionsPage';\r\nexport default SPCollectionsPage;","import SPPassButton from './SPPassButton';\r\nexport default SPPassButton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPPassButton.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SPPassButton = (props) => {\r\n    let btn = props.kind === 'delete' ? styles.btnInv : styles.btn;\r\n    if (props.kind === 'not')\r\n        btn = `${btn} ${styles.bgWhite}`;\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${btn}`}\r\n            onClick={() => {\r\n                if (props.kind === 'delete')\r\n                    props.onDeletePassClicked();\r\n                else if (props.kind === 'select')\r\n                    props.onPassButtonClicked({\r\n                        name: props.name,\r\n                        src: props.src\r\n                    });\r\n            }}\r\n            style={{ cursor: props.kind === 'not' ? 'default' : 'pointer'}}>\r\n            {\r\n                props.kind === 'delete' ?\r\n                <FontAwesomeIcon \r\n                    icon={faTrash}\r\n                    size='2x' \r\n                    style={{ color: 'black' }} />\r\n                :\r\n                <img\r\n                    alt=''\r\n                    className={styles.icon} \r\n                    src={props.src} />\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default SPPassButton; ","import SPassword from './SPassword';\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPassword.module.css';\r\n\r\nimport SPPassButton from './SPPassButton';\r\n\r\nclass SPassword extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.passwordOptions.map((po) => {\r\n                        return(\r\n                            <SPPassButton\r\n                                key={po.id}\r\n                                {...po}\r\n                                onPassButtonClicked={\r\n                                    this.onPasswordOptionClicked\r\n                                } />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.optionsSelected.map((os) => {\r\n                        return(\r\n                            <SPPassButton key={os.id} {...os} />\r\n                        );\r\n                    })}\r\n                    <SPPassButton \r\n                        kind='delete'\r\n                        onDeletePassClicked={this.onDeleteButtonClicked} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passwordOptions: [\r\n                { id: 1, kind: 'select', name: 'árbol', src: '/images/pwd/tree.png' },\r\n                { id: 2, kind: 'select', name: 'corazón', src: '/images/pwd/heart.png' },\r\n                { id: 3, kind: 'select', name: 'flor', src: '/images/pwd/flower.png' },\r\n                { id: 4, kind: 'select', name: 'nube', src: '/images/pwd/cloud.png' },\r\n                { id: 5, kind: 'select', name: 'sol', src: '/images/pwd/sun.png' },\r\n            ],\r\n            optionsSelected: [\r\n                { id: 1, kind: 'not', name: '', src: '' },\r\n                { id: 2, kind: 'not', name: '', src: '' },\r\n                { id: 3, kind: 'not', name: '', src: '' },\r\n                { id: 4, kind: 'not', name: '', src: '' }\r\n            ]\r\n        };\r\n\r\n        this.onDeleteButtonClicked = this.onDeleteButtonClicked.bind(this);\r\n        this.onPasswordOptionClicked = this.onPasswordOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDeleteButtonClicked() {\r\n        let { optionsSelected } = this.state;\r\n        /** Limpiar las asociaciones */\r\n        optionsSelected.forEach(option => {\r\n            option.name = '';\r\n            option.src = '';\r\n        });\r\n        this.setState({ optionsSelected });\r\n    }\r\n\r\n    onPasswordOptionClicked(selected) {\r\n        let { optionsSelected } = this.state;\r\n        /** Asociar el nombre y el src seleccionado */\r\n        let added = false;\r\n        optionsSelected.forEach(option => {\r\n            if (!added && option.name.trim() === '') {\r\n                option.name = selected.name;\r\n                option.src = selected.src;\r\n                added = true;\r\n            }\r\n        });\r\n        this.setState({ optionsSelected }, () => {\r\n            /** Obtener las nombres de las opciones seleccionadas */\r\n            const words = this.state.optionsSelected.filter((option) => {\r\n                return option.name.trim() !== '';\r\n            }).map((option) => { \r\n                return option.name; \r\n            });\r\n            /** Enviar la lista de palabras hacia el componente padre */\r\n            this.props.setPassword(words);\r\n        });\r\n    }\r\n}\r\n\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLogin.module.css';\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SPassword from '@components/shared/SPassword';\r\n\r\nclass SPLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a las actividades */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/paciente/${userId}/actividades`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Escribe tu nombre de usuario\r\n                        </Label>\r\n                        <Input\r\n                            bsSize='lg'\r\n                            onChange={this.onInputChanged}\r\n                            placeholder='Por ejemplo, mvsierra' \r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Marca tu clave\r\n                        </Label>\r\n                        <SPassword setPassword={this.setPassword} />\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`primary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='light' size='sm' /> \r\n                            : \r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            loading: false,\r\n            password: null,\r\n            userId: null,\r\n            username: ''\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onInputChanged(e) {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, PATIENT);\r\n        const { error, userId } = response;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password) {\r\n                if (password.length === 4)\r\n                    this.onLogin(username, password.join());\r\n                else\r\n                    this.setState({ error: 'La clave debe tener 4 elementos'});\r\n            }\r\n            else\r\n                this.setState({\r\n                    error: 'El usuario y la clave son obligatorios'\r\n                });\r\n        }\r\n    }\r\n\r\n    setPassword(words) {\r\n        this.setState({ password: words });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPLogin);","import SPLogin from './SPLogin';\r\nexport default SPLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { \r\n    setBar,\r\n    setParallax, \r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SPLogin from '@components/patient/SPLogin';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { landing } = messages;\r\n\r\n/** Página Landing del paciente */\r\nclass SPLandingPage extends Component {\r\n    render() {\r\n        const vOffset = this.props.ui.vOffset + 60;\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div \r\n                    className='flex' \r\n                    style={{\r\n                        alignItems: 'center',\r\n                        height: `calc(100vh - ${vOffset}px)`,\r\n                        justifyContent: 'center' \r\n                    }}>\r\n                    <SPLogin />\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = landing[Math.floor(Math.random() * landing.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.props.setBar('patient');\r\n        this.props.setParallax(true);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setMessage,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPLandingPage);","import SPLandingPage from './SPLandingPage';\r\nexport default SPLandingPage;","import SFullScreen from './SFullScreen';\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass SFullScreen extends Component {\r\n    render() {\r\n        return(\r\n            <div \r\n                onKeyDown={this.onKeyHandler}\r\n                ref={this.fullRef}\r\n                tabIndex={0}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fullScreen: false };\r\n        this.fullRef = React.createRef();\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onKeyHandler = this.onKeyHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('fullscreenchange', this.onClosed);\r\n        document.addEventListener('mozfullscreenchange', this.onClosed);\r\n        document.addEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.fullScreen !== this.state.fullScreen) {\r\n            if (this.props.fullScreen)\r\n                this.enterFullScreen();\r\n            else\r\n                this.exitFullScreen();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('fullscreenchange', this.onClosed);\r\n        document.removeEventListener('mozfullscreenchange', this.onClosed);\r\n        document.removeEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async enterFullScreen() {\r\n        if (this.fullRef.current.requestFullRequest) {\r\n            await this.fullRef.current.requestFullRequest();\r\n        }\r\n        else if (this.fullRef.current.mozRequestFullScreen) {\r\n            await this.fullRef.current.mozRequestFullScreen();\r\n        }\r\n        else if (this.fullRef.current.webkitRequestFullScreen) {\r\n            await this.fullRef.current.webkitRequestFullScreen();\r\n        }\r\n\r\n        this.setState({ fullScreen: true });\r\n        this.props.onChange(true);\r\n    }\r\n\r\n    async exitFullScreen() {\r\n        const isFull = document.fullscreenElement || \r\n                       document.mozFullScreenElement ||\r\n                       document.webkitFullScreenElement;\r\n        \r\n        if (isFull) {\r\n            if (document.exitFullscreen) {\r\n                await document.exitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                await document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullScreen) {\r\n                await document.webkitExitFullScreen();\r\n            }\r\n        }\r\n\r\n        this.setState({ fullScreen: false });\r\n        this.props.onChange(false);\r\n    }\r\n\r\n    onClosed() {\r\n        const full = document.fullscreenElement ||\r\n                     document.mozFullScreenElement ||\r\n                     document.webkitFullScreenElement;\r\n        if (!full && this.state.fullScreen)\r\n            this.props.onClosed();\r\n    }\r\n\r\n    onKeyHandler(event) {\r\n        if (event.keyCode === 8) event.preventDefault();\r\n    }\r\n}\r\n\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPPlayPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport SFullScreen from '@components/shared/SFullScreen';\r\nimport { getActivity, updateActivitySession } from '@actions/activity';\r\nimport { setFullScreen, setModal, showAvatar } from '@actions/ui';\r\n\r\nconst FILE_SERVER_URL = process.env.REACT_APP_FILE_SERVER;\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPPlayPage extends Component { \r\n    render() {        \r\n        const { activity, user } = this.props;\r\n        let gamePath = null;\r\n        if (activity && user) {\r\n            const { sid } = this.props.match.params;\r\n            const { build_path } = activity;\r\n            gamePath = `${FILE_SERVER_URL}/${build_path}/index.html` +\r\n                        `?portal=paciente` +\r\n                        `&session=${sid}` +\r\n                        `&score=${user.score}` +\r\n                        `&token=${this.props.auth.pacienteToken}` +\r\n                        `&file_server=${FILE_SERVER_URL}` + \r\n                        `&server=${SERVER_URL}`;\r\n        }\r\n\r\n        return(\r\n            <SFullScreen\r\n                fullScreen={this.props.ui.fullScreen}\r\n                onClosed={this.onClosed}\r\n                onChange={this.onChange}>\r\n                <div className={`flex ${styles.container}`}> \r\n                    <iframe \r\n                        height={window.outerHeight}\r\n                        src={gamePath}\r\n                        title='game'\r\n                        width={window.outerWidth}></iframe>\r\n                </div>\r\n            </SFullScreen>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.ui.fullScreen) this.redirectBack();\r\n\r\n        this.hideAvatar();\r\n        if (this.props.activity === null) {\r\n            const { aid } = this.props.match.params\r\n            this.props.getActivity(aid);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.hideAvatar();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.showAvatar(true);\r\n\r\n        /** Guardar fecha y hora de finalización de la sesión */\r\n        const { sid } = this.props.match.params;\r\n        const session = { date_end: new Date(), id: sid };\r\n        this.props.updateActivitySession(session);\r\n        \r\n        /** Abrir modal para enviar un comentario */\r\n        const modal = {\r\n          title: 'Comenta sobre el desempeño del paciente en el juego',\r\n          type: 'new_comment',\r\n          session: sid\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    hideAvatar() {\r\n        if (this.props.ui.showAvatar)\r\n            this.props.showAvatar(false);\r\n    }\r\n\r\n    onClosed() {\r\n        this.redirectBack();\r\n    }\r\n\r\n    onChange(fullScreen) {\r\n        if (!fullScreen) this.redirectBack();\r\n    }\r\n\r\n    redirectBack() {\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    setFullScreen,\r\n    setModal,\r\n    showAvatar,\r\n    updateActivitySession,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        auth: state.auth,\r\n        ui: state.ui,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPPlayPage);","import SPPlayPage from './SPPlayPage';\r\nexport default SPPlayPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear la asociación entre un terapeuta y un paciente */\r\nexport const createPatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { data: { pid: patientId }});\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = data[patientId];\r\n            dispatch({ \r\n                type: SET_PATIENT,\r\n                payload: { association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la informaión de único paciente por medio de su id */\r\nexport const getPatient = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status}} = response;\r\n\r\n        const patient = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SELECTED_PATIENT, \r\n            payload: { patient }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener pacientes */\r\nexport const getPatients = (userId = null, query = null) => async (dispatch) => {\r\n    let url = userId ? \r\n                /** Pacientes de un usuario terapeuta */\r\n                `${apiURL}/therapist/${userId}/patient`\r\n                :\r\n                /** Todos los pacientes */\r\n                `${apiURL}/patient`; \r\n    \r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const patients = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_PATIENTS, \r\n            payload: { patients }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }  \r\n}\r\n\r\n/** Remover la asociación entre un terapeuta y un paciente */\r\nexport const removePatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient/${patientId}`;\r\n\r\n    try {\r\n        const response = await axios.delete(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = {\r\n                _id_therapist: therapistId,\r\n                _id_patient: patientId,\r\n            }\r\n            dispatch({ \r\n                type: REMOVE_PATIENT, \r\n                payload: { _association: association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setPatient = (patient) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_PATIENT, \r\n        payload: { patient }\r\n    });\r\n}\r\n\r\nexport const setPatients = (patients) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PATIENTS,\r\n        payload: { patients }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nexport const getDatesDifference = (startDate, endDate) => {\r\n    const start = DateTime.fromISO(startDate);\r\n    const end = DateTime.fromISO(endDate);\r\n    const diff = end.diff(start, [ 'minutes' ]).toObject();\r\n\r\n    return diff;\r\n}\r\n\r\nexport const getFormattedDate = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    return luxDate.setLocale('co').toLocaleString(DateTime.DATE_FULL);\r\n}\r\n\r\nexport const getDateBoundaries = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    const startDate = luxDate.startOf('month').toISODate();\r\n    const endDate = luxDate.endOf('month').toISODate();\r\n    \r\n    return { startDate, endDate };\r\n}","/**\r\n * @author Martin Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivityButtons.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { setModal } from '@actions/ui';\r\n\r\nclass STActivityButtons extends Component {\r\n    render() {\r\n        const { Activities_Sessions } = this.props.activity;\r\n        const sessions = Object.values(Activities_Sessions);\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <Button\r\n                    className={`pdf-btn ${styles.btn}`}\r\n                    size='sm'>\r\n                    PDF Ficha\r\n                </Button>\r\n                <div className='flex'>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        onClick={this.onTutorialClicked}\r\n                        size='sm'>\r\n                        Tutorial\r\n                    </Button>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        size='sm'>\r\n                        Reasignar\r\n                    </Button>\r\n                    {sessions.length === 0 && <Button\r\n                        className={`ghost-btn ${styles.delete} ${styles.ml}`}\r\n                        size='sm'>\r\n                        <FontAwesomeIcon \r\n                            icon={faTimesCircle} size='2x' />\r\n                    </Button>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onTutorialClicked() {\r\n        let modal = { \r\n            title: 'Video tutorial', \r\n            type: 'video',\r\n            videoUrl: '',\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STActivityButtons);","import STActivityButtons from './STActivityButtons';\r\nexport default STActivityButtons;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst structures = {\r\n    1: { letter: 'S', color: '#FF7043' },\r\n    2: { letter: 'AD', color: '#42A5F5' },\r\n    3: { letter: 'V', color: '#26A69A' }\r\n}\r\n\r\nconst SSyntacticCircle = (props) => {\r\n    const sid = props.id;\r\n    const structure = structures[sid];\r\n\r\n    let bgColor = 'darkgray';\r\n    if (structure.letter === props.letter)\r\n        bgColor = structure.color;\r\n\r\n    return(\r\n        <div style={{\r\n            alignItems: 'center',\r\n            backgroundColor: `${bgColor}`,\r\n            borderRadius: '50%',\r\n            color: 'white',\r\n            display: 'flex',\r\n            fontWeight: '600',\r\n            height: 37,\r\n            justifyContent: 'center',\r\n            width: 37\r\n        }}>\r\n            {props.letter}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSyntacticCircle;","import STSyntacticCircle from './SSyntacticCircle';\r\nexport default STSyntacticCircle;","import STActivity from './STActivity';\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivity.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nimport STActivityButtons from './STActivityButtons';\r\nimport STSynctaticCircle from './STSyntacticCircle';\r\n\r\nclass STActivity extends Component {\r\n    render() {\r\n        const aid = this.props.activity.id;\r\n        const date = this.props.activity.date_from.split('T')[0];\r\n        const sid = this.props.activity.Syntactic_Structure ? \r\n                    this.props.activity.Syntactic_Structure.id : null;\r\n\r\n        const { pid, tid } = this.props;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.aimage}\r\n                        src='' />\r\n                    <div className={styles.rightContainer}>\r\n                        <div className={`flex ${styles.nameContainer}`}>\r\n                            <div className={styles.title}>\r\n                                { this.props.activity.Activity.name }\r\n                            </div>\r\n                            <div className={styles.date}>\r\n                                { this.getFormattedDate(date) }\r\n                            </div>\r\n                        </div>\r\n                        {sid && <div className={`flex ${styles.syntContainer}`}>\r\n                                <STSynctaticCircle letter='S' id={sid} />\r\n                                <STSynctaticCircle letter='AD' id={sid} />\r\n                                <STSynctaticCircle letter='V' id={sid} />\r\n                            </div>\r\n                        }\r\n                        <div className={styles.description}>\r\n                            { this.props.activity.Activity.description }\r\n                        </div>\r\n                        <Link \r\n                            to={\r\n                                `/terapeuta/${tid}/pacientes/${pid}/` + \r\n                                `actividades/${aid}/evolución`\r\n                            }\r\n                            className={`ghost-btn ${styles.btnEvolution}`}>\r\n                            Ver evolución\r\n                        </Link>\r\n                        <STActivityButtons activity={this.props.activity} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n}\r\n\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivitiesPage.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\nimport { getPatient, setPatient } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport STActivity from '@components/therapist/STActivity';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nclass STActivitiesPage extends Component {\r\n    render() {\r\n        let { activities, patient, user } = this.props;\r\n        const id = user ? user.id : null;\r\n        const pid = patient ? patient.id : null;\r\n\r\n        activities = activities ? Object.values(activities) : [];\r\n        \r\n        /** Obtener ids del route path */\r\n        const { tid } = this.props.match.params;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={patient} />\r\n                <STLayout pt={0} mt={298}>\r\n                    <div className={`flex ${styles.titleContainer}`}>\r\n                        <div className={styles.title}>\r\n                            Actividades asignadas\r\n                        </div>\r\n                        <div className={`flex ${styles.btnContainer}`}>\r\n                            <Link\r\n                                className={styles.link}\r\n                                to={\r\n                                    `/terapeuta/${tid}/pacientes/${pid}` +\r\n                                    `/actividades/histórico`\r\n                                }>\r\n                                <Button \r\n                                    className={`primary-btn left ${styles.btn}`}>\r\n                                    Histórico\r\n                                </Button>\r\n                            </Link>\r\n                            <Link\r\n                                className={styles.link}\r\n                                to={`/terapeuta/${id}/pacientes/${pid}/configuracion`}>\r\n                                <Button className={`secondary-btn ${styles.btn}`}>\r\n                                    Agregar actividad\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.listContainer}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <SSpinner color='primary' />\r\n                            :\r\n                            activities && activities.length > 0 ?\r\n                            activities.map((activity) => {\r\n                                return(\r\n                                    <STActivity\r\n                                        activity={activity} \r\n                                        key={activity.id}\r\n                                        pid={pid}\r\n                                        tid={tid} />\r\n                                );\r\n                            })\r\n                            :\r\n                            <SEmpty>\r\n                                Este paciente aún no tiene actividades asignadas.\r\n                                Recuerda que puedes asignarle una actividad\r\n                                seleccionando la opción Agregar actividad.\r\n                            </SEmpty>\r\n                        }\r\n                    </div>\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n        /** Obtener las actividades del paciente */\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);        \r\n        this.setState({ loading: false });\r\n        \r\n        /** Obtener la información del paciente */\r\n        await this.props.getPatient(pid);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n        this.props.setPatient(null);\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        patient: state.patient.patient,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    getPatient,\r\n    setActivities,\r\n    setPatient\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STActivitiesPage);","import STActivitiesPage from './STActivitiesPage';\r\nexport default STActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STOption.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst STOption = (props) => {\r\n    const selected = props.option.selected ? styles.selected : '';\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${styles.container}`}\r\n            onClick={() => {\r\n                onOptionClicked(props);\r\n            }}>\r\n            <div className={`flex ${styles.inner} ${selected}`}>\r\n                <div className={styles.name}>\r\n                    { props.option.name }\r\n                </div>\r\n                <FontAwesomeIcon\r\n                    icon={faCheckCircle}\r\n                    size='2x' />\r\n            </div>\r\n        </Button>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionClicked = (props) => {\r\n    props.onOptionSelected(props.option);\r\n}\r\n\r\nexport default STOption;","import STOption from './STOption';\r\nexport default STOption;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STField.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STOption from './STOption';\r\n\r\nconst STField = (props) => {\r\n    let { options } = props;\r\n    options = options ? Object.values(options) : [];\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>\r\n                { props.title }\r\n            </div>\r\n            <div className={styles.subtitle}>\r\n                { props.subtitle }\r\n            </div>\r\n            {\r\n                props.loading ?\r\n                <SSpinner color='primary' />\r\n                :\r\n                options && options.length > 0 ?\r\n                <Row className={styles.optionRow} noGutters>\r\n                    {options.map(option => {\r\n                        return(\r\n                            <Col\r\n                                className={styles.optionCol}\r\n                                key={option.id} \r\n                                sm={{ size: 12 }}\r\n                                md={{ size: 4 }}>\r\n                                <STOption\r\n                                    onOptionSelected={(option) => {\r\n                                        onOptionSelected(props, option);\r\n                                    }} \r\n                                    option={option} />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionSelected = (props, option) => {\r\n    props.onOptionSelected(option);\r\n}\r\n\r\nexport default STField;","import STField from './STField';\r\nexport default STField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions\r\n} from '@actions/dynamic';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STDynamicField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props} \r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar configuraciones y selecciones */\r\n        const fields = [\r\n            'mechanic',\r\n            'situations',\r\n            'times',\r\n            'reader'\r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetDynamicOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildDynamic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetDynamicOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        /** Setear la opción seleccionada */\r\n        this.props.setDynamicSelectedOptions({\r\n            fieldId: this.props.id,\r\n            optionId: option.id\r\n        });\r\n\r\n        /** Obtener las opciones del siguiente field */\r\n        if (this.props.next) {\r\n            let data = { fieldId: this.props.next };\r\n            /** \r\n             * Verificar si el siguiente field requiere los ids\r\n             * de las opciones elegidas anteriormente\r\n             */\r\n            const field = this.props.dynamic[this.props.next];\r\n            if (field.required) {\r\n                const requiredIds = this.getRequiredIds(field.required);\r\n                data.required = requiredIds;\r\n            }\r\n\r\n            this.getOptions(data);\r\n        }\r\n        else\r\n            this.props.showCreateActivityButton(true);\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getDynamicOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.dynamic[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildDynamic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STDynamicField);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener las opciones para un field en particular */\r\nexport const getDynamicOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    if (fieldId === 'mechanic' || fieldId === 'situations') {\r\n        let url = `${apiURL}`;\r\n        if (fieldId === 'mechanic') {\r\n            url = `${url}/dynamic/mechanics`;\r\n        }\r\n        else {\r\n            const { mechanicId } = fieldData.required;\r\n            url = `${url}/dynamic/mechanics/${mechanicId}/situations`;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_DYNAMIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };                            \r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n    else { \r\n        let options;\r\n        if (fieldId === 'times') {\r\n            options = {\r\n                1: { id: 1, name: 'Presente' },\r\n                /*2: { id: 2, name: 'Pasado' },\r\n                3: { id: 3, name: 'Futuro' }*/\r\n            };\r\n        }\r\n        else if (fieldId === 'reader') {\r\n            options = {\r\n                1: { id: 1, name: 'Si' },\r\n                2: { id: 2, name: 'No' }\r\n            };\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_DYNAMIC_OPTIONS,\r\n            payload: { fieldId, options }\r\n        });\r\n    }\r\n}\r\n\r\n/** Resetear las opciones seleccionadas */\r\nexport const resetDynamicOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_DYNAMIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Setear las opciones seleccionadas */\r\nexport const setDynamicSelectedOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_DYNAMIC_SELECTED_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}","import STDynamicField from './STDynamicField';\r\nexport default STDynamicField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STDynamicField from './STDynamicField';\r\n\r\nclass STDynamic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STDynamicField {...this.props.dynamic.mechanic} />\r\n                <STDynamicField {...this.props.dynamic.situations} />\r\n                <STDynamicField {...this.props.dynamic.times} />\r\n                <STDynamicField {...this.props.dynamic.reader} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STDynamic);","import STDynamic from './STDynamic';\r\nexport default STDynamic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_STATIC_SELECTED_OPTION,\r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Agregar una opción seleccionada (solo para multichoice) */\r\nexport const addStaticSelectedOption = (fieldData) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_STATIC_SELECTED_OPTION,\r\n        payload: fieldData\r\n    });\r\n}\r\n\r\n/** Obtener la información de las siguientes opciones */\r\nexport const getStaticOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    let url = null;\r\n    if (fieldId === 'category')\r\n        url = `${apiURL}/static/categories`\r\n\r\n    else if (fieldId === 'subcategory') {\r\n        const { categoryId } = fieldData.required;\r\n        url = `${apiURL}/static/categories/${categoryId}/subcategories`;\r\n    }\r\n\r\n    else if (fieldId === 'sintactic')\r\n        url = `${apiURL}/static/structures`;\r\n        \r\n    else if (fieldId === 'vocabulary' || fieldId === 'mechanic') {\r\n        const { subcategoryId, sintacticId } = fieldData.required;\r\n        const sid = subcategoryId;\r\n        const stid = sintacticId;\r\n        url = `${apiURL}/static/subcategories/${sid}/structures/${stid}`;\r\n\r\n        if (fieldId === 'vocabulary')\r\n            url = `${url}/vocabularies`;\r\n        else\r\n            url = `${url}/mechanics`;\r\n    }\r\n    \r\n    if (url) {\r\n        /** Realizar el request */\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_STATIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };\r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n}\r\n\r\n/** Resetear las opciones */\r\nexport const resetStaticOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_STATIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Marcar como opción seleccionada */\r\nexport const setStaticSelectedOptions = (optionData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_STATIC_SELECTED_OPTIONS, \r\n        payload: optionData \r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions, \r\n    setStaticSelectedOptions\r\n} from '@actions/static';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STStaticField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props}\r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar todas las opciones y selecciones configuradas */\r\n        const fields = [ \r\n            'category', \r\n            'subcategory', \r\n            'sintactic', \r\n            'vocabulary',\r\n            'mechanic' \r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetStaticOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildStatic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetStaticOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        let getNextOptions = true;\r\n        if (this.props.multichoice) {\r\n            /** Adicionar opciones seleccionadas */\r\n            this.props.addStaticSelectedOption({\r\n                fieldId: this.props.id,\r\n                optionId: option.id\r\n            });\r\n\r\n            getNextOptions = this.checkMinimun();\r\n        }\r\n        else {\r\n            /** Setear opciones como seleccionadas */\r\n            this.props.setStaticSelectedOptions({ \r\n                fieldId: this.props.id, \r\n                optionId: option.id \r\n            });\r\n        }\r\n\r\n        /** Pedir la información del siguiente field */\r\n        if (getNextOptions) {\r\n            if (this.props.next) {\r\n                let data = { fieldId: this.props.next };\r\n                /** \r\n                 * Verificar si el próximo field requiere ids\r\n                 * de las opciones elegidas\r\n                 */\r\n                const field = this.props.static[this.props.next];\r\n                if (field.required) {\r\n                    const requiredIds = this.getRequiredIds(field.required);\r\n                    data.required = requiredIds;\r\n                }\r\n                \r\n                this.getOptions(data);\r\n            }\r\n            else\r\n                this.props.showCreateActivityButton(true);\r\n        }\r\n    }\r\n\r\n    /** Chequear si se cumple el mínimo de selecciones necesarias */\r\n    checkMinimun() {\r\n        let { options } = this.props;\r\n        options = Object.values(options);\r\n        let selected = 0;\r\n        options.forEach(option => {\r\n            if (option.selected) selected += 1;\r\n        });\r\n\r\n        return selected >= this.props.minimum;\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getStaticOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.static[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildStatic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions,\r\n    setStaticSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STStaticField);","import STStaticField from './STStaticField';\r\nexport default STStaticField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STStaticField from './STStaticField';\r\n\r\nclass STStatic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STStaticField {...this.props.static.category} />\r\n                <STStaticField {...this.props.static.subcategory} />\r\n                <STStaticField {...this.props.static.sintactic} />\r\n                <STStaticField {...this.props.static.vocabulary} />\r\n                <STStaticField {...this.props.static.mechanic} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STStatic);","import STStatic from './STStatic';\r\nexport default STStatic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STConfigurationPage.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createActivity } from '@actions/activity';\r\nimport {\r\n    buildConfiguration,\r\n    resetConfiguration\r\n} from '@actions/configuration';\r\nimport { getPatient } from '@actions/patient';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport STDynamic from '@components/therapist/STDynamic';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STStatic from '@components/therapist/STStatic';\r\n\r\nclass STConfigurationPage extends Component {\r\n    render() {\r\n        if (this.state.redirect) {\r\n            const { tid, pid } = this.props.match.params;\r\n            const url = `/terapeuta/${tid}/pacientes/${pid}/actividades`;\r\n            return <Redirect to={url} push />\r\n        }\r\n\r\n        /** Definir las clases para los botones */\r\n        const buttonStatic = `primary-btn-outline left ${styles.btn} \r\n                                ${this.state.option === 'static' ?\r\n                                styles.btnSelected : ''}`;\r\n\r\n        const buttonDynamic = `primary-btn-outline ${styles.btn} \r\n                                ${this.state.option === 'dynamic' ? \r\n                                styles.btnSelected : ''}`;\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>\r\n                    Configurar una nueva actividad\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    <Button\r\n                        className={buttonStatic}\r\n                        color='primary'\r\n                        name='static'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción estática\r\n                    </Button>\r\n                    <Button\r\n                        className={buttonDynamic}\r\n                        color='primary'\r\n                        name='dynamic'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción dinámica\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    {\r\n                        this.state.option === 'static' ?\r\n                        <STStatic />\r\n                        :\r\n                        <STDynamic />\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.showCreateActivityButton ?\r\n                    <div className={styles.createContainer}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.create}`}\r\n                            onClick={this.onCreateActivityClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='dark' size='sm' />\r\n                                :\r\n                                <span>Crear actividad</span>\r\n                            }\r\n                        </Button>\r\n                    </div> : null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false, \r\n          option: 'static',\r\n          patient: null, \r\n          redirect: false \r\n        };\r\n        this.onCreateActivityClicked = this.onCreateActivityClicked.bind(this);\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.patient === null) {\r\n            const { pid } = this.props.match.params;\r\n            await this.props.getPatient(pid);\r\n        }\r\n        this.setState({ patient: this.props.patient });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetConfiguration();\r\n    }\r\n\r\n    /** Métodos */\r\n    async prepareAndCreateActivity() {\r\n        this.setState({ loading: true });\r\n\r\n        const fields = this.state.option === 'static' ?\r\n                       this.props.static : this.props.dynamic;\r\n\r\n        /** Resetear cualquier configuración previa */\r\n        this.props.resetConfiguration();\r\n        /** Construir la configuración */\r\n        const configuration = this.props.buildConfiguration(\r\n            { fields }, this.state.patient\r\n        );\r\n\r\n        /** Crear la actividad */\r\n        const response = await this.props.createActivity(configuration);\r\n        const { error, message } = response;\r\n\r\n        this.setState({ loading: false, redirect: true });        \r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onCreateActivityClicked() {\r\n        if (!this.state.loading)\r\n            this.prepareAndCreateActivity();\r\n    }\r\n\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic,\r\n        patient: state.patient.patient,\r\n        static: state.static,\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    buildConfiguration,\r\n    createActivity,\r\n    getPatient,\r\n    resetConfiguration,\r\n    setNotification,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STConfigurationPage);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from './types';\r\n\r\nexport const buildConfiguration = (fieldsData, patient) => (dispatch) => {\r\n    const fields = fieldsData.fields;\r\n    const keys = Object.keys(fields);\r\n\r\n    let configuration = {};\r\n    /** Construir la configuración con las opciones seleccionadas */\r\n    keys.forEach(key => {\r\n        const field = fields[key];\r\n        let options = field.options;\r\n        options = Object.values(options);\r\n\r\n        options.forEach(option => {\r\n            /** Verificar que la opción se haya seleccionado */\r\n            if (option.selected) {\r\n                /** Verificar si el field admite múltiples selecciones */\r\n                if (field.multichoice) {\r\n                    /** Verificar si el field ya existe en la configuración */\r\n                    if (configuration[key])\r\n                        /** Si ya existe entonces se anexa la opción */\r\n                        configuration[key].push(option)\r\n                    else\r\n                        /** Si no existe entonces se crea un nuevo array\r\n                         * teniendo como primer elemento la opción\r\n                         */\r\n                        configuration[key] = [option];\r\n                }\r\n                else\r\n                    configuration[key] = option;\r\n            }\r\n        });\r\n    });\r\n\r\n    /** Anexar a la configuración la información del paciente */\r\n    configuration.patient = patient;\r\n\r\n    dispatch({ \r\n        type: SET_CONFIGURATION, \r\n        payload: { configuration }\r\n    });\r\n    \r\n    return configuration;\r\n}\r\n\r\nexport const resetConfiguration = () => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_CONFIGURATION \r\n    });\r\n}","import STConfigurationPage from './STConfigurationPage';\r\nexport default STConfigurationPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener niveles */\r\nexport const getLevels = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/levels` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/levels`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener matches */\r\nexport const getMatches = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) { \r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/matches` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/matches`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener phrases */\r\nexport const getPhrases = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;    \r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/phrases` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/phrases`;\r\n    }    \r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getSecuences = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/secuences` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/secuences`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: SET_FEEDBACK_DATA,\r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener sesiones para histórico de tiempos */\r\nexport const getSessions = (_data) => async (dispatch) => {\r\n    const { pid, startDate, endDate, mid } = _data;\r\n    const url = `${apiURL}/feedback/historical/${pid}/${mid}/sessions` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };        \r\n    };\r\n}\r\n\r\nexport const setFeedData = (feedData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATA, \r\n        payload: { feedData }\r\n    });\r\n}\r\n\r\nexport const setFeedDate = (feedDate) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATE, \r\n        payload: { feedDate }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SDatePicker.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setFeedDate } from '@actions/feedback';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport es from 'date-fns/locale/es';\r\nregisterLocale('es', es);\r\n\r\nclass SDatePicker extends Component {\r\n    render() {\r\n        const { form } = this.props;\r\n        let showMonthYear = true;\r\n        let showYearDropdown = false;\r\n        let style = styles.input;\r\n        let dateFormat = \"MMMM 'de' yyyy\";\r\n        if (form) {\r\n            showMonthYear = false;\r\n            showYearDropdown = true;\r\n            style = styles.completeInput;\r\n            dateFormat = \"dd/MM/yyyy\";\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <DatePicker\r\n                    className={style}\r\n                    dateFormat={dateFormat}\r\n                    locale='es'\r\n                    onChange={this.onDateChanged}\r\n                    popperPlacement='top-end'\r\n                    ref={this.pickerRef}\r\n                    selected={this.state.date}\r\n                    showMonthYearPicker={showMonthYear}\r\n                    showFullMonthYearPicker\r\n                    showYearDropdown={showYearDropdown}\r\n                    scrollableYearDropdown\r\n                    withPortal />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: null };\r\n        this.pickerRef = React.createRef();\r\n        this.onDateChanged = this.onDateChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Deshabilitar el teclado */\r\n        if (this.pickerRef && this.pickerRef.current.input)\r\n            this.pickerRef.current.input.readOnly = true;\r\n        \r\n        const { date, feedDate, form } = this.props;\r\n        this.setState({ date: form ? date : feedDate });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date)\r\n            this.setState({ date: this.props.date });\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDateChanged(date) {\r\n        this.setState({ date });\r\n        const { form, name } = this.props;\r\n        if (form)\r\n            this.props.onChange({ target: { value: date, name }});\r\n        else\r\n            this.props.setFeedDate(date);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedDate: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setFeedDate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SDatePicker);","import SDatePicker from './SDatePicker';\r\nexport default SDatePicker;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { getDatesDifference } from './date&time';\r\n\r\nconst structuresData = {\r\n    Pronombre: { color: 'rgba(248, 196, 113, 0.8)', title: 'Pronombre'},\r\n    Sustantivo: { color: 'rgba(240, 178, 122, 0.8)', title: 'Sustantivo' },\r\n    Adjetivo: { color: 'rgba(127, 179, 213, 0.8)', title: 'Adjetivo' },\r\n    Verbo: { color: 'rgba(115, 198, 182, 0.8)', title: 'Verbo' },\r\n    Artículo: { color: 'rgba(241, 148, 138, 0.8)', title: 'Artículo' },\r\n    Conjunción: { color: 'rgba(247, 220, 111, 0.8)', title: 'Conjunción' }\r\n};\r\n\r\n/** Funciones públicas */\r\n\r\n/** Construir data para stackbar de palabras */\r\nexport const buildWordHitsData = (data, kind, color) => {\r\n    /** Obtener sólo los registros pertenecientes al tipo correcto */\r\n    const feeds = Object.values(data);\r\n    let records = [];\r\n    feeds.forEach(feed => {\r\n        if (feed.kind === kind) \r\n            records.push(feed);\r\n    });\r\n\r\n    /** Construir los labels a partir de las palabras */\r\n    let labels = [];\r\n    records.forEach(record => {\r\n        if (!labels.includes(record.word)) \r\n            labels.push(record.word);\r\n    });\r\n\r\n    /** Construir porcentajes de aciertos y desaciertos por cada palabra */\r\n    let hits = [];\r\n    let misses = [];\r\n    labels.forEach((label, i) => {\r\n        let wordTotal = 0;\r\n        let hitTotal = 0;\r\n        records.forEach(record => {\r\n            if (record.word === label) {\r\n                /** Contar el número de aciertos */\r\n                if (record.checked) hitTotal += 1;\r\n                wordTotal += 1;\r\n            }            \r\n        });\r\n\r\n        /** Cálculo de porcentajes */\r\n        const hitsPercentage = Math.floor((hitTotal * 100) / wordTotal);\r\n        const missesPercentage = 100 - hitsPercentage;\r\n\r\n        /** Agregar los porcentajes a sus respectivos arrays */\r\n        hits.push(hitsPercentage);\r\n        misses.push(missesPercentage);\r\n        labels[i] = `${label}(${wordTotal})`;\r\n    });\r\n\r\n    /** retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Aciertos',\r\n            data: hits,\r\n            backgroundColor: color\r\n        }, {\r\n            label: 'Desaciertos',\r\n            data: misses,\r\n            backgroundColor: 'rgba(229, 231, 233, 0.7)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Construir data para linebar de palabras */\r\nexport const buildMatchErrorsData = (data, word) => {\r\n    /** Obtener los registros del tipo correcto */\r\n    const matches = Object.values(data);\r\n    let records = [];\r\n    matches.forEach(match => {\r\n        if (match.variable === word)\r\n            records.push(match);\r\n    });\r\n\r\n    /** Construir data */\r\n    let labels = []; /** Apariciones de la variable */\r\n    let occurrence = 1;\r\n    let attempts = [];\r\n    let errors = 0;\r\n    records.forEach(record => {\r\n        /** Verificar si el registro actual fue un match correcto */\r\n        if (record.is_good) {\r\n            /** Si es correcto (orden del siguiente código):\r\n              * a. Guardar una ocurrencia.\r\n              * b. Guardar los errores por intento.\r\n              * c. Sumar la ocurrencia para la siguiente verificación.\r\n              * d. Resetear los errores.\r\n              */\r\n            labels.push(occurrence);\r\n            attempts.push(errors);\r\n\r\n            occurrence += 1;\r\n            if (errors > 0) errors = 0;\r\n        }\r\n        else\r\n            /** Contar el error para la misma ocurrencia */\r\n            errors += 1;\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de errores',\r\n            data: attempts,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** */\r\nexport const buildPhrasesSummary = (groupedPhrases) => {\r\n    /** Contar el porcetaje de frases 100% correctas */\r\n    let hits = 0;\r\n    groupedPhrases.forEach(phrase => {\r\n        if (phrase.percentage === 100)\r\n            hits += 1;\r\n    });\r\n\r\n    /** Calcular porcentajes */\r\n    const totalPhrases = groupedPhrases.length;\r\n    const hitsPercentage = Math.floor((hits * 100) / totalPhrases);\r\n    const errorPencetage = 100 - hitsPercentage;\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        chartData: {\r\n            labels: [ 'Correctas', 'Incorrectas' ],\r\n            datasets: [{\r\n                label: '',\r\n                data: [ hitsPercentage, errorPencetage ],\r\n                backgroundColor: [\r\n                    '#73C6B6',\r\n                    '#E5E7E9'\r\n                ]\r\n            }]\r\n        },\r\n        hits,\r\n        total: totalPhrases\r\n    };\r\n}\r\n\r\n/** Construir los datos de los tiempos a partir de las sesiones */\r\nexport const buildTimes = (data) => {\r\n    const sessions = Object.values(data);\r\n\r\n    let labels = [];\r\n    let minutes = [];\r\n    sessions.forEach(session => {\r\n        /** Obtener la diferencia de tiempos en minutos */\r\n        const diff = getDatesDifference(session.date_start, session.date_end);\r\n\r\n        minutes.push(Math.round(diff.minutes));\r\n        labels.push(`ID ${session.id}`);\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de tiempo',\r\n            data: minutes,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Obtener estructuras trabajadas */\r\nexport const getStructures = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Construir el objeto de estructuras */\r\n    let structures = {};\r\n    phrases.forEach(phrase => {\r\n        /** Incluir el tipo de estructura siempre y cuando no\r\n          * esté presente en el array\r\n          */\r\n        const keys = Object.keys(structures);\r\n        const { kind } = phrase;\r\n        if (!keys.includes(kind))\r\n            structures[kind] = structuresData[kind];\r\n    });\r\n\r\n    /** Retornar como un array */\r\n    return Object.values(structures);\r\n}\r\n\r\n/** Obtener el vocabulario trabajado */\r\nexport const getWords = (matchesData) => {\r\n    const matches = Object.values(matchesData);\r\n\r\n    /** Construir el array de palabras */\r\n    let words = [];\r\n    matches.forEach(match => {\r\n        if (!words.includes(match.variable))\r\n            words.push(match.variable);\r\n    });\r\n\r\n    return words;\r\n}\r\n\r\n/** Agrupar las frases */\r\nexport const groupPhrases = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Agrupar frases con su porcentage de palabras correctas */\r\n    let grouped = [];\r\n    let lastPhrase = phrases.shift();\r\n    let words = [ lastPhrase ];\r\n    let hits = lastPhrase.checked ? 1 : 0;\r\n    phrases.forEach((phrase, i) => {\r\n        if (phrase.id_phrase === lastPhrase.id_phrase) {\r\n            words.push(phrase);\r\n            /** Contabilizar correctas */\r\n            if (phrase.checked) hits += 1;\r\n            /** Si el phrase es el último, agregar registro al \r\n              * array de frases agrupadas\r\n              */\r\n            if (i === (phrases.length - 1)) {\r\n                const record = buildRecord(words, hits);\r\n                grouped.push(record);\r\n            }\r\n        }\r\n        else if (phrase.id_phrase !== lastPhrase.id_phrase) {\r\n            /** Agregar nuevo registro al array de frases agrupadas */\r\n            const record = buildRecord(words, hits);\r\n            grouped.push(record);\r\n\r\n            /** Resetear valores */\r\n            lastPhrase = phrase;\r\n            words = [ lastPhrase ];\r\n            hits = lastPhrase.checked ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return grouped;\r\n}\r\n\r\n/** Funciones privadas */\r\n\r\n/** Construir un registro */\r\nconst buildRecord = (words, hits) => {\r\n    /** Calcular el porcentaje de palabras correctas */\r\n    const totalWords = words.length;\r\n    const percentage = Math.floor((hits * 100) / totalWords);\r\n    /** Ordenar el array de words */\r\n    words.sort((a, b) => {\r\n        return a.order_phrase > b.order_phrase ? 1 : -1;\r\n    });\r\n\r\n    return { percentage, words };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nconst chartOptions = {\r\n    doughnut: () => {\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        const label = data.labels[tooltipItem.index];\r\n                        const value = data.datasets[0].data[tooltipItem.index];\r\n                        return `${value}% de ${label.toLowerCase()}`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    line: (metric) => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Apariciones del vocabulario' : 'Sesiones'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Número de errores' : 'Minutos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: metric === 'match' ? 1 : 10,\r\n                        max: metric === 'match' ? 10 : 60\r\n                    }\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let label = tooltipItem.yLabel;\r\n                        label = label + `${metric === 'match' ?\r\n                                ' error(es)' : ' minuto(s)'}`;\r\n                                    \r\n                        return label;\r\n\r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        if (metric === 'match') {\r\n                            const label = tooltipItems[0].yLabel;\r\n                            return `${label} error(es) de ${label + 1} intento(s)`\r\n                        }\r\n                        else {\r\n                            const label = tooltipItems[0].xLabel;\r\n                            return `Sesión ${label}`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    stackBar: () => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Palabras asociadas'\r\n                    },\r\n                    stacked: true\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: '% de aciertos/desaciertos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: 10,\r\n                        max: 100\r\n                    },\r\n                    stacked: true\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let yLabel = data.datasets[tooltipItem.datasetIndex].label;\r\n                        return tooltipItem.yLabel + '% de ' +\r\n                                yLabel.toLowerCase();\r\n                                \r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        const split = tooltipItems[0].xLabel.split('(');\r\n                        const word = split[0];\r\n                        const right = split[1];\r\n                        const total = parseInt(right.split(')')[0], 10);\r\n                        const part = Math.round((tooltipItems[0].yLabel) * total / 100);\r\n\r\n                        return `${word}(${part} de ${total})`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default chartOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { buildPhrasesSummary } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { doughnut } = charts;\r\n\r\nclass STDoughnut extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm}\r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n\r\n                    <Doughnut \r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n\r\n                    <div className={styles.percentage}>\r\n                        {this.state.percentage}%\r\n                    </div>\r\n                    <p className={styles.description}>\r\n                        {this.state.description}\r\n                    </p>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            description: '',\r\n            options: doughnut(),\r\n            percentage: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        const { chartData, hits, total } = buildPhrasesSummary(data);\r\n        /** Obtener porcentaje de correctas */\r\n        const { datasets } = chartData;\r\n        const percentage = datasets[0].data[0];\r\n\r\n        const description = `El paciente pronunció correctamente ${hits} ` +\r\n                            `de un total de ${total} frases`;\r\n\r\n        this.setState({ \r\n            chartData,\r\n            description,\r\n            percentage,\r\n        });\r\n    }\r\n}\r\n\r\nexport default STDoughnut;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { getDatesDifference } from '@utils/date&time';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STLevel extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return(\r\n            <Col\r\n                sm={this.props.sm}\r\n                md={this.props.md}\r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <div className='flex'>\r\n                        <div style={{ width: '100%' }}>\r\n                            <div className='flex'>\r\n                                <div className={styles.title}>\r\n                                    Nivel {data.level}\r\n                                </div>\r\n                                <div className={styles.title}>\r\n                                    Sesión {data.id_session}\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.score}>{data.score}</div>\r\n                            <div className={styles.subtitle}>Puntos ganados</div>\r\n                            <div className={`${styles.score} ${styles.mt20}`}>\r\n                                {this.setLevelTime()}\r\n                            </div>\r\n                            <div className={styles.subtitle}>\r\n                                Minutos para terminar nivel\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevelTime() {\r\n        const { date_start, date_end } = this.props.data;\r\n        const diff = getDatesDifference(date_start, date_end).minutes;\r\n        return Math.round(diff);\r\n    }\r\n}\r\n\r\nexport default STLevel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { \r\n    buildMatchErrorsData, \r\n    buildTimes \r\n} from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { line } = charts;\r\n\r\nclass STLine extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {\r\n                            this.props.metric === 'match' ?\r\n                            <span>{this.props.title}</span>\r\n                            :\r\n                            <span>Tiempos en minutos</span>\r\n                        }\r\n                    </p>\r\n\r\n                    <Line\r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: line(this.props.metric)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, metric, title } = this.props;\r\n        if (data) {\r\n            const chartData = metric === 'match' ? \r\n                                buildMatchErrorsData(data, title)\r\n                                :\r\n                                buildTimes(data);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STLine;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STPhrases extends Component {\r\n    render() {\r\n        return(\r\n            <Col sm='12' md='7' className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        Palabras correctas por frases\r\n                    </p>\r\n\r\n                    {this.state.phrases.map((phrase, i) => {\r\n                        return (\r\n                            <div className='flex' key={i}>\r\n                                <div className={`flex ${styles.wordsContainer}`}>\r\n                                    {phrase.words.map((word, j) => {\r\n                                        return(\r\n                                            <div\r\n                                                className={styles.word} \r\n                                                key={j}\r\n                                                style={{\r\n                                                    color: word.checked ?\r\n                                                    'black': '#F1948A'\r\n                                                }}>\r\n                                                {word.word}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div className={styles.phrasePercentage}>\r\n                                    {phrase.percentage}%\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phrases: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ phrases: this.props.data });\r\n    }\r\n}\r\n\r\nexport default STPhrases;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { buildWordHitsData } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { stackBar } = charts;\r\n\r\nclass STStackBar extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n                    <Bar\r\n                        data={this.state.chartData}\r\n                        options={this.state.options} \r\n                        height={this.props.height} />\r\n                </SContainer>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: stackBar()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { color, data, title } = this.props;\r\n        if (data) {\r\n            const chartData = buildWordHitsData(data, title, color);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STStackBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @mintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getWords } from '@utils/feedback';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\n\r\nclass STInGame extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Emparejamiento de vocabulario\r\n                    </div>\r\n                </Col>\r\n                {this.state.words.map((word, i) => {\r\n                    return <STLine\r\n                                sm='12'\r\n                                md='4'\r\n                                data={this.state.matchesData}\r\n                                height={230}\r\n                                key={i}\r\n                                metric='match'\r\n                                title={word} />\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { matchesData: null, words: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const matchesData = feedData.Matches_Feeds;\r\n        if (matchesData) {\r\n            const words = getWords(matchesData);\r\n            this.setState({ matchesData, words });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STInGame);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STLevel from '@components/therapist/charts/STLevel';\r\n\r\nclass STLevels extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Niveles en la sesión\r\n                    </div>\r\n                </Col>\r\n                {this.state.levels.map(level => {\r\n                    return(\r\n                        <STLevel \r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            data={level} \r\n                            key={level.id} />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { levels: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLevels();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setLevels();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevels() {\r\n        const { Levels_Feeds } = this.props.feedData;\r\n        const { levels } = this.state;\r\n        if (Levels_Feeds && levels.length === 0) {\r\n            const levels = Object.values(Levels_Feeds);\r\n            this.setState({ levels });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STLevels);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\n\r\nclass STTimes extends Component {\r\n    render() {\r\n        const { sessionsData } = this.state;\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Tiempos por sesiones de la actividad\r\n                    </div>\r\n                </Col>\r\n                {sessionsData &&\r\n                <STLine\r\n                    sm='12'\r\n                    md='6'\r\n                    data={sessionsData}\r\n                    height={200}\r\n                    metric='time' />}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { sessionsData: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const sessionsData = feedData.Sessions_Feeds;\r\n        if (sessionsData)\r\n            this.setState({ sessionsData });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STTimes);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getStructures, groupPhrases } from '@utils/feedback';\r\n\r\nimport { \r\n    STDoughnut,\r\n    STPhrases,\r\n    STStackBar \r\n} from '@components/therapist/charts';\r\n\r\nclass STVocalization extends Component {\r\n    render() {\r\n        const { groupedPhrases } = this.state;        \r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Frases trabajadas en la actividad\r\n                    </div>\r\n                </Col>\r\n                {groupedPhrases && <STDoughnut \r\n                    sm='12'\r\n                    md='5'\r\n                    data={groupedPhrases}\r\n                    height={160}\r\n                    title='Resumen de las frases' />}\r\n                {this.props.feedback === 'evolution' && groupedPhrases &&\r\n                    <STPhrases data={groupedPhrases} />}\r\n\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Discriminación por estructura sintáctica\r\n                    </div>\r\n                </Col>\r\n                {this.state.structures.map((structure, i) => {\r\n                    return (\r\n                        <STStackBar\r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            color={structure.color}\r\n                            data={this.state.phrasesData}\r\n                            height={230}\r\n                            key={i} \r\n                            title={structure.title} />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupedPhrases: null, \r\n            phrasesData: null, \r\n            structures: [] \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const phrasesData = feedData.Phrases_Feeds;\r\n        if (phrasesData) {\r\n            const groupedPhrases = groupPhrases(phrasesData);\r\n            const structures = getStructures(phrasesData);\r\n            this.setState({ \r\n                groupedPhrases,\r\n                phrasesData, \r\n                structures \r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STVocalization);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const mechanics = {\r\n    1: { \r\n        id: 1, \r\n        name: 'Dominó', \r\n        alias: 'Do', \r\n        semantic_description: 1 \r\n    },\r\n    3: {\r\n        id: 3,\r\n        name: 'Secuencia',\r\n        alias: 'Se',\r\n        semantic_description: 2\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedOptions.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STFeedOptions extends Component {\r\n    render() {\r\n        const { option } = this.state;\r\n        const base = `secondary-btn-outline ${styles.btn}`;\r\n        /** Definición de los estilos de los botones */\r\n        let btnVocal = option === 'vocalization' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnMecha = option === 'inGame' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnLevel = option === 'levels' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnTimes = option === 'times' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        /** Deshabilitar botones de acuerdo a la descripción semántica */\r\n        if (this.state.description === 2) {\r\n            btnVocal = `${btnVocal} ${styles.disabled}`;\r\n            btnMecha = `${btnMecha} ${styles.disabled}`;\r\n        }\r\n        \r\n        const { feedback } = this.props;\r\n        let contWidth = 400;\r\n        let btnWidth = 32.5;\r\n        if (feedback === 'historical') {\r\n            contWidth = 500;\r\n            btnWidth = 24.5;\r\n        }\r\n\r\n        return(\r\n            <div \r\n                className={`flex ${styles.btnContainer}`}\r\n                style={{ '--contWidth': `${contWidth}px` }}>\r\n                <Button\r\n                    className={btnVocal}\r\n                    name='vocalization'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    {\r\n                        this.props.windowWidth < 767 &&\r\n                        feedback === 'historical' ?\r\n                        <span className={styles.span}>\r\n                            Vocaliza...\r\n                        </span>\r\n                        :\r\n                        <span className={styles.span}>\r\n                            Vocalización\r\n                        </span>\r\n                    }\r\n                </Button>\r\n                <Button\r\n                    className={btnMecha}\r\n                    name='inGame'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Juego\r\n                </Button>\r\n                <Button\r\n                    className={btnLevel}\r\n                    name='levels'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Niveles\r\n                </Button>\r\n                {feedback === 'historical' && <Button\r\n                    className={btnTimes}\r\n                    name='times'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Tiempos\r\n                </Button>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { description: 1, option: 'vocalization' }\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStateValues();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mechanic !== this.props.mechanic)\r\n            this.setStateValues();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        const { name } = e.target;\r\n        const { description } = this.state;\r\n        this.setState({ option: name });\r\n        this.props.onOptionClicked({ description, option: name });\r\n    }\r\n\r\n    setStateValues() {\r\n        const { feedback } = this.props;\r\n        let description = 1;\r\n        if (feedback === 'historical')\r\n            description = mechanics[this.props.mechanic].semantic_description;\r\n        else\r\n            description = this.props.activity.Mechanic.semantic_description;\r\n\r\n        const option = description === 1 ? 'vocalization' : 'levels';\r\n        this.setState({ description, option });\r\n        this.props.onOptionClicked({ description, option });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STFeedOptions);","import STFeedOptions from './STFeedOptions';\r\nexport default STFeedOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSession.module.css';\r\nimport { Button, Col } from 'reactstrap';\r\nimport { \r\n    getDatesDifference,\r\n    getFormattedDate\r\n } from '@utils/date&time';\r\nimport { connect } from 'react-redux';\r\n\r\nclass STSession extends Component {\r\n    render() {\r\n        /** Configuración del estilo del contenedor */\r\n        const { index, session, sessionSelected } = this.props;\r\n        let container = styles.container;\r\n        let innerContainer = styles.innerContainer;\r\n\r\n        /** Aplicar estilo al primer elemento y último elemento */\r\n        if (index === 0) container = `${container} ${styles.first}`;\r\n        else if (index === 2) container = `${container} ${styles.last}`;\r\n\r\n        if (sessionSelected && session.id === sessionSelected.id)\r\n            innerContainer = `${innerContainer} ${styles.selected}`;\r\n\r\n        return(\r\n            <Col xs='12' sm='6' md='4' className={container}>                \r\n                <Button \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    onClick={this.onClicked}>\r\n                    <div className={innerContainer}>\r\n                        <div className={`flex ${styles.title}`}>\r\n                            <span>Sesión</span>\r\n                            <span>ID: {session.id}</span>\r\n                        </div>\r\n                        <div className={styles.date}>\r\n                            Registro del {this.getFormattedDate(session.date_start)}\r\n                        </div>\r\n                        <div className={styles.time}>\r\n                            {this.getDifference(\r\n                                session.date_start, \r\n                                session.date_end)} minutos\r\n                        </div>\r\n                    </div>\r\n                </Button>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClicked = this.onClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extras */\r\n    /** Obtener la diferencia de tiempos en minutos */\r\n    getDifference(date_start, date_end) {\r\n        const diff = getDatesDifference(date_start, date_end);\r\n        return Math.round(diff.minutes);\r\n    }\r\n\r\n    getFormattedDate(date) {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    onClicked() {\r\n        this.props.onClicked(this.props.session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionSelected: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STSession);","import STSession from './STSession';\r\nexport default STSession;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis \r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSessions.module.css';\r\nimport { Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setSession } from '@actions/activity';\r\n\r\nimport STSession from './STSession';\r\n\r\nclass STSessions extends Component {\r\n    render() {\r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                {\r\n                    this.props.sessions.map((session, i) => {\r\n                        return <STSession \r\n                                    index={i}\r\n                                    key={session.id}\r\n                                    onClicked={this.onSessionClicked}\r\n                                    session={session} />\r\n                    })\r\n                }                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSessionClicked = this.onSessionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const session = this.props.sessions[0];\r\n        this.setSession(session);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onSessionClicked(session) {\r\n        this.setSession(session);\r\n    }\r\n\r\n    setSession(session) {\r\n        this.props.setSession(session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STSessions);","import STSessions from './STSessions';\r\nexport default STSessions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STEvolution.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getLevels, getMatches, getPhrases, getSecuences } from '@actions/feedback';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STSessions from './STSessions';\r\n\r\nclass STEvolution extends Component {\r\n    render() {        \r\n        const sessions = Object.values(this.props.sessions);\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <STSessions sessions={sessions} />\r\n                <STFeedOptions\r\n                    feedback='evolution'\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :                    \r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='evolution' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    <STLevels />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'vocalization' };        \r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.session !== this.props.session)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getFeedback() {\r\n        const { session } = this.props;\r\n        if (session) {\r\n            const { id } = session;\r\n            const { option } = this.state;\r\n            \r\n            this.setState({ loading: true });\r\n            if (option === 'vocalization')\r\n                await this.props.getPhrases({ id });\r\n            else if (option === 'inGame')\r\n                await this.props.getMatches({ id });\r\n            else if (option === 'levels') {\r\n                const { activity: { Mechanic: { semantic_description }}} = this.props;\r\n                if (semantic_description === 1)\r\n                    await this.props.getLevels({ id });\r\n                else\r\n                    await this.props.getSecuences({ id });\r\n            }\r\n            \r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ option: data.option }, () => this.getFeedback());\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        feedData: state.feedback.feedData,\r\n        sessions: state.activity.sessions,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STEvolution);","import STEvolution from './STEvolution';\r\nexport default STEvolution;","import STMechanics from './STMechanics';\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STMechanics.module.css';\r\nimport { Button, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STMechanics extends Component {\r\n    render() {\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                {this.state.mechanics.map(mechanic => {\r\n                    let base = styles.btn;\r\n                    if (mechanic.id === this.state.selected)\r\n                        base = `${base} ${styles.selected}`;\r\n\r\n                    return (\r\n                        <div key={mechanic.id}>\r\n                            <Button\r\n                                className={`ghost-btn ${base}`}\r\n                                id={`utooltip${mechanic.name}`}\r\n                                name={mechanic.id}\r\n                                onClick={this.onMechanicClicked}>\r\n                                {mechanic.alias}\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                                placement='right'\r\n                                target={`utooltip${mechanic.name}`}>\r\n                                {mechanic.name}\r\n                            </UncontrolledTooltip>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            mechanics: Object.values(mechanics),\r\n            selected: 1\r\n        };\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMechanicClicked(e) {\r\n        let { name } = e.target;\r\n        name = parseInt(name, 10);\r\n        this.setState({ selected: name });\r\n        this.props.onMechanicClicked(name);\r\n    }\r\n}\r\n\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STHistorical.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getLevels, \r\n    getMatches, \r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions \r\n} from '@actions/feedback';\r\nimport { getDateBoundaries } from '@utils/date&time';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STTimes,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STMechanics from './STMechanics';\r\n\r\nclass STHistorical extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <STMechanics onMechanicClicked={this.onMechanicClicked} />\r\n                <STFeedOptions\r\n                    feedback='historical'\r\n                    mechanic={this.state.mid}\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='historical' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    this.state.option === 'levels' ?\r\n                    <STLevels />\r\n                    :\r\n                    <STTimes />                        \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            description: 1,\r\n            loading: false, \r\n            mid: 1,\r\n            option: 'vocalization' \r\n        };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { date } = this.props;\r\n        const { mid } = this.state;\r\n        if (date !== prevProps.date || mid !== prevState.mid)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extras */\r\n    async getFeedback() {\r\n        const { date, pid } = this.props;\r\n        const { description, mid, option } = this.state;\r\n        /** Calcular las fechas límites */\r\n        const { startDate, endDate } = getDateBoundaries(date.toISOString());\r\n        const data = { pid, startDate, endDate, mid };\r\n\r\n        this.setState({ loading: true });\r\n        if (option === 'vocalization')\r\n            await this.props.getPhrases(data, true);\r\n        else if (option === 'inGame')\r\n            await this.props.getMatches(data, true);\r\n        else if (option === 'levels') {\r\n            if (description === 1)\r\n                await this.props.getLevels(data, true);\r\n            else\r\n                await this.props.getSecuences(data, true);\r\n        }\r\n        else if (option === 'times')\r\n            await this.props.getSessions(data, true);\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ description: data.description, option: data.option }, \r\n            () => this.getFeedback());\r\n    }\r\n\r\n    onMechanicClicked(mechanic) {\r\n        this.setState({ mid: mechanic });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        date: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STHistorical);","import STHistorical from './STHistorical';\r\nexport default STHistorical;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedbackPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getActivity,\r\n    setActivity,\r\n    setSessions,\r\n    setSession\r\n} from '@actions/activity';\r\nimport { setFeedData } from '@actions/feedback';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STEvolution from '@components/therapist/STEvolution';\r\nimport STHistorical from '@components/therapist/STHistorical';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass STFeedbackPage extends Component {\r\n    render() {\r\n        const { kind, loading } = this.state;\r\n        const title = kind === 'evolución' ?\r\n                        'Evolución por sesiones' : 'Histórico por mes'\r\n        \r\n        const { pid } = this.props.match.params;\r\n        \r\n        return(\r\n            <STLayout page='feedback' pt={50}>\r\n                <div className={`flex ${styles.container}`}>\r\n                    <div className={styles.title}>\r\n                        {title}\r\n                    </div>\r\n                    {kind === 'histórico' && <SDatePicker />}\r\n                </div>\r\n                {\r\n                    loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.sessions && kind === 'evolución' ?\r\n                    <STEvolution />\r\n                    :\r\n                    kind === 'histórico' ?\r\n                    <STHistorical pid={pid} />\r\n                    :\r\n                    null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { kind: 'evolución', loading: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { aid, kind } = this.props.match.params;\r\n        if (kind === 'evolución') \r\n            this.getActivity(aid);\r\n        \r\n        this.setState({ kind });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivity(null);\r\n        this.props.setFeedData(null);\r\n        this.props.setSessions(null);\r\n        this.props.setSession(null);       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getActivity(aid) {\r\n        this.setState({ loading: true });\r\n        await this.props.getActivity(aid);\r\n        this.setFirstSessions();\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    /** Setear las tres primeras sesiones de la actividad */\r\n    setFirstSessions() {\r\n        const { activity } = this.props;\r\n        let sessions = [];\r\n        if (activity) {\r\n            sessions = Object.values(activity.Activities_Sessions);\r\n            sessions = Object.assign({}, ...sessions.slice(0, 3).map(session => {\r\n                return { [session.id]: session };\r\n            }));\r\n        }\r\n        this.props.setSessions(sessions);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        sessions: state.activity.sessions\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    setActivity,\r\n    setFeedData,\r\n    setSessions,\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STFeedbackPage);","import STFeedbackPage from './STFeedbackPage';\r\nexport default STFeedbackPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STLogin.module.css';\r\nimport { \r\n    Button, \r\n    Form, \r\n    FormGroup, \r\n    Input, \r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\n/** Login para el terapeuta */\r\nclass STLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a los pacientes */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/terapeuta/${userId}/pacientes`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.title}>Ingreso</div>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Nombre de usuario</Label>\r\n                        <Input \r\n                            name='username'\r\n                            onChange={this.onInputChanged}\r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Contraseña</Label>\r\n                        <Input\r\n                            name='password'\r\n                            onChange={this.onInputChanged} \r\n                            type='password' />\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`secondary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='dark' size='sm' />\r\n                            :\r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            error: null, \r\n            loading: false,\r\n            password: '', \r\n            userId: null,\r\n            username: '',\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos */\r\n    onInputChanged(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, THERAPIST);\r\n        const { error, userId } = response;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password.trim() !== '')\r\n                this.onLogin(username, password);\r\n            else\r\n                this.setState({ \r\n                    error: 'El usuario y la contraseña son obligatorios' \r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STLogin);","import STLogin from './STLogin';\r\nexport default STLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport STLogin from '@components/therapist/STLogin';\r\n\r\n/** Página Landing del terapeuta */\r\nclass STLandingPage extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12' md='6'>\r\n                </Col>\r\n                <Col sm='12' md='6'>\r\n                    <div \r\n                        className='flex' \r\n                        style={{\r\n                            alignItems: 'flex-start', \r\n                            justifyContent: 'center',\r\n                            height: `calc(100vh - ${vOffset}px)`\r\n                        }}>\r\n                        <STLogin />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STLandingPage);","import STLandingPage from './STLandingPage';\r\nexport default STLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSearch.module.css';\r\nimport { Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { getPatients } from '@actions/patient';\r\nimport { getUsers } from '@actions/user';\r\n\r\nclass SSearch extends Component {\r\n    render() {\r\n        let searchContainer = styles.searchContainer;\r\n        if (this.props.patients)\r\n            searchContainer = `${searchContainer} ${styles.marginTop}`;\r\n\r\n        return(\r\n            <div className={`flex ${searchContainer}`}>\r\n                <FontAwesomeIcon \r\n                    className={styles.searchIcon}\r\n                    icon={faSearch} />\r\n                <Input \r\n                    className={styles.search}\r\n                    type='text'\r\n                    placeholder='Busca por nombre o identificación'\r\n                    onChange={this.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async onChange({ target: { value }}) {\r\n        const { patients } = this.props;\r\n        if (patients) {\r\n            const userId = patients === 'my' ? this.props.userId : null;\r\n            await this.props.getPatients(userId, value);\r\n        }\r\n        else\r\n            await this.props.getUsers(value);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    getUsers\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SSearch);","import SSearch from './SSearch';\r\nexport default SSearch;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatient.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createPatient, removePatient } from '@actions/patient';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STPatient extends Component {\r\n    render() {\r\n        const { userId, patient } = this.props;\r\n        const { id } = patient;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Link\r\n                    className={`ghost-btn ${styles.link}`}\r\n                    to={`/terapeuta/${userId}/pacientes/${id}/actividades`}>\r\n                    <div className={`flex ${styles.height} ${styles.padding}`}>\r\n                        <div className='flex'>\r\n                            {\r\n                                patient.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${patient.profile_img}`} />\r\n                                :\r\n                                <div\r\n                                    className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                    style={{ backgroundColor: patient.color}}>\r\n                                    { patient.thumbnail_alias }\r\n                                </div>\r\n                            }\r\n                            <div className={styles.padding}>\r\n                                <div className={styles.uname}>\r\n                                    { patient.name }&nbsp; \r\n                                    { patient.last_name }\r\n                                </div>\r\n                                <div className={styles.uinfo}>\r\n                                    Paciente desde 2019\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Button \r\n                            className={`ghost-btn ${this.state.check}`}\r\n                            onClick={this.onAssignPatientClicked}>\r\n                            <FontAwesomeIcon \r\n                                icon={faCheckCircle} \r\n                                size='2x' />\r\n                        </Button>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { check: styles.btn };\r\n        this.onAssignPatientClicked = this.onAssignPatientClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCheck();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setCheck();\r\n    }\r\n\r\n    /** Métodos */\r\n    checkTherapist(userId, patient) {\r\n        /** \r\n         * Verificar si el terapeuta asignado es el mismo terapeuta\r\n         * logueado \r\n         */\r\n        if (patient.Therapists) {\r\n            if (patient.Therapists[userId])\r\n                return true;\r\n        }\r\n        else if (patient.Therapists_Patients) {\r\n            if (userId === patient.Therapists_Patients.id_therapist)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    async onAssignPatientClicked(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const { userId, patient } = this.props;\r\n        if (this.checkTherapist(userId, patient))\r\n            await this.props.removePatient(userId, patient.id);\r\n        else\r\n            await this.props.createPatient(userId, patient.id);\r\n    }\r\n\r\n    setCheck() {\r\n        const { userId, patient } = this.props;\r\n        const check = this.checkTherapist(userId, patient) ?\r\n                      styles.btnActive : styles.btn;\r\n\r\n        if (check !== this.state.check)\r\n            this.setState({ check });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createPatient,\r\n    removePatient,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STPatient);","import STPatient from './STPatient';\r\nexport default STPatient;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatientsPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatients, setPatients } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STPatient from '@components/therapist/STPatient';\r\n\r\nclass STPatientsPage extends Component {\r\n    render() {\r\n        /** Definir las clases para los botones */\r\n        const buttonMy = `primary-btn-outline left ${styles.btn} \r\n                            ${this.state.option === 'my' ? \r\n                            styles.btnSelected : ''}`;\r\n\r\n        const buttonAll = `primary-btn-outline ${styles.btn} \r\n                            ${this.state.option === 'all' ?\r\n                            styles.btnSelected : ''}`;\r\n\r\n        let { patients } = this.props;\r\n        patients = patients ? Object.values(this.props.patients) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Pacientes</div>\r\n                <div className={`flex ${styles.searchContainer}`}>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button\r\n                            className={buttonMy}\r\n                            name='my'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Mis pacientes\r\n                        </Button>\r\n                        <Button\r\n                            className={buttonAll}\r\n                            name='all'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Todos los pacientes\r\n                        </Button>\r\n                    </div>\r\n                    <SSearch \r\n                        patients={this.state.option}\r\n                        userId={this.state.userId} />\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        patients && patients.length > 0 ?\r\n                        patients.map(patient => {\r\n                            return(\r\n                                <STPatient\r\n                                    key={patient.id} \r\n                                    patient={patient}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        : \r\n                        <SEmpty>\r\n                            No se encontraron pacientes. Recuerda que puedes\r\n                            asignarte pacientes en la opción Todos los pacientes.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'my', userId: null };\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ userId: this.props.match.params.tid }, () => {\r\n            this.getPatientsList(this.state.userId);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPatients(null);\r\n    }\r\n\r\n    /** Métodos */\r\n    async getPatientsList(userId) {\r\n        this.setState({ loading: true });\r\n        await this.props.getPatients(userId);\r\n\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionSelected(e) {\r\n        this.setState({ option: e.target.name }, () => {\r\n            let userId = this.state.option === 'my' ? this.state.userId : null;\r\n            this.getPatientsList(userId);\r\n        });\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        patients: state.patient.patients,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    setPatients\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STPatientsPage);","import STPatientsPage from './STPatientsPage';\r\nexport default STPatientsPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUser.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { setToUpdate } from '@actions/user';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SAUser extends Component {\r\n    render() {\r\n        const { userId, user } = this.props;\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={`flex`}>\r\n                    {\r\n                        user.profile_img ?\r\n                        <img\r\n                            alt=''\r\n                            className={styles.uimage}\r\n                            src={`${serverURL}${user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                            style={{ backgroundColor: user.color }}>\r\n                            { user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                    <div className={styles.infoContainer}>\r\n                        <div className={styles.name}>\r\n                            { user.name } {user.last_name}\r\n                        </div>\r\n                        <div className={styles.identification}>\r\n                            ID { user.id }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className={`ghost-btn ${styles.btnEdit}`}\r\n                    onClick={this.onLinkClicked}\r\n                    to={`/terapeuta/${userId}/editar/${user.id}`}>\r\n                    <FontAwesomeIcon icon={faEdit} size='lg' />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        this.props.setToUpdate(this.props.user);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SAUser);","import SAUser from './SAUser';\r\nexport default SAUser;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUsersPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, setUsers } from '@actions/user';\r\n\r\nimport SAUser from '@components/admin/SAUser';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass SAUsersPage extends Component {\r\n    render() {\r\n        const { tid } = this.props.match.params;\r\n        let { users } = this.props;\r\n        users = users ? Object.values(users) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Todos los usuarios</div>\r\n                <div className={`flex ${styles.toolsContainer}`}>\r\n                    <SSearch />\r\n                    <Link to={`/terapeuta/${tid}/nuevo`}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.btnCreate}`}>\r\n                            Nuevo\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        users.length > 0 ?\r\n                        users.map(user => {\r\n                            return <SAUser \r\n                                admin={true}\r\n                                key={user.id} \r\n                                user={user}\r\n                                userId={tid} />\r\n                        })\r\n                        :\r\n                        <SEmpty>\r\n                            No se han encontrado usuarios en el sistema.\r\n                            Recuerda que como administrador puedes crear \r\n                            usuarios nuevos\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setUsers(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getAllUsers() {\r\n        this.setState({ loading: true });\r\n        await this.props.getUsers();\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUsers,\r\n    setUsers\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUsersPage);","import SAUsersPage from './SAUsersPage';\r\nexport default SAUsersPage;","import SAImageLoader from './SAImageLoader';\r\nexport default SAImageLoader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAImageLoader.module.css';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SAImageLoader extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={`flex ${styles.iconContainer}`}>\r\n                        { !this.state.encodedImage && <FontAwesomeIcon \r\n                            className={styles.icon}\r\n                            icon={faImage}\r\n                            size='3x' /> }\r\n                        <canvas\r\n                          style={{ display: this.state.encodedImage ? 'block' : 'none' }} \r\n                          ref={this.canvasRef} />\r\n                        <img \r\n                            alt=''\r\n                            className={styles.hiddenImage} \r\n                            ref={this.imageRef}\r\n                            src='' />\r\n                    </div>\r\n                </div>\r\n                <p className={styles.text}>\r\n                    Si lo deseas puedes agregar una imagen de perfil\r\n                </p>\r\n                <FormGroup>\r\n                    <Input\r\n                        className={styles.hidden}\r\n                        onChange={this.onFileChanged} \r\n                        type='file' \r\n                        id='profilePicture' />\r\n                    <Label\r\n                        className={`secondary-btn ${styles.btnFile}`} \r\n                        for='profilePicture'>\r\n                        Agregar Imagen\r\n                    </Label>\r\n                </FormGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { encodedImage: null };\r\n      this.canvasRef = React.createRef();\r\n      this.imageRef = React.createRef();\r\n\r\n      this.onFileChanged = this.onFileChanged.bind(this);\r\n      this.onFileReaderLoaded = this.onFileReaderLoaded.bind(this);\r\n      this.onImageLoaded = this.onImageLoaded.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    \r\n    /** Método que detecta cuando hay un cambio en el input de tipo file */\r\n    onFileChanged(e) {\r\n      const file = e.target.files[0];    \r\n      if (!file) return;\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = this.onFileReaderLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de un archivo en el FileReader */\r\n    onFileReaderLoaded(e) {\r\n      this.imageRef.current.src = e.target.result;\r\n      this.imageRef.current.onload = this.onImageLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de la imagen en el tag img */\r\n    onImageLoaded(e) {\r\n      const MAX_WIDTH = 180;\r\n      const MAX_HEIGHT = 180;\r\n\r\n      /** Calcular el valor de la escala para respetar el aspect ratio */\r\n      const scale = e.target.width > e.target.height && e.target.width > MAX_WIDTH ? MAX_WIDTH / e.target.width :\r\n                    e.target.height > MAX_HEIGHT ? MAX_HEIGHT / e.target.height : \r\n                    1;\r\n\r\n      /** Asignar el tamaño del canvas */\r\n      this.canvasRef.current.width = e.target.width * scale;\r\n      this.canvasRef.current.height = e.target.height * scale;\r\n\r\n      /** Obtener el contexto 2d del canvas, dibujar la imagen y obtener imagen codificada */\r\n      const context = this.canvasRef.current.getContext('2d');\r\n      context.drawImage(e.target, 0, 0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n      const encodedImage = context.canvas.toDataURL(e.target, 'image/png');\r\n\r\n      this.setState({ encodedImage }, () => { \r\n        this.canvasRef.current.toBlob((blob) => {\r\n          this.props.onImageLoaded(blob);\r\n        }); \r\n      });\r\n    }\r\n}\r\n\r\nexport default SAImageLoader;","import SCheckField from './SCheckField';\r\nexport default SCheckField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SCheckField = (props) => {\r\n    return(\r\n        <FormGroup check>\r\n            <Input \r\n                type='checkbox'\r\n                name={props.name}\r\n                checked={props.checked}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n            <Label>{props.children}</Label>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SCheckField;","import SDateField from './SDateField';\r\nexport default SDateField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Label } from 'reactstrap';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\n\r\nconst SDateField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <SDatePicker\r\n                date={props.date}\r\n                form={true}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SDateField;","import SInputField from './SInputField';\r\nexport default SInputField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormFeedback, FormGroup, FormText, Input, Label } from 'reactstrap';\r\n\r\nconst SInputField = (props) => {\r\n    const type = props.name === 'email' ? 'email' : 'text';\r\n    \r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            {props.form === 'admin' && props.name === 'password' && \r\n            <FormText>\r\n                Recuerda que la contraseña para el paciente debe \r\n                contener cuatro palabras del conjunto árbol, corazón,\r\n                flor, nube y sol, separadas por coma y sin espacios. Ej.: \r\n                árbol,flor,nube,sol.\r\n            </FormText>}\r\n            <Input\r\n                disabled={props.disabled}\r\n                type={type}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}\r\n                invalid={props.error !== null} />\r\n            {props.error && <FormFeedback>{props.error}</FormFeedback>}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SInputField;","import SSelectField from './SSelectField';\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SSelectField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <Input\r\n                type='select'\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}>\r\n                {props.options.map((opt, i) => {\r\n                    return <option key={i} value={opt.value}>\r\n                        {opt.title}\r\n                    </option>\r\n                })}\r\n            </Input>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const genders = [\r\n    { title: 'Femenino', value: 'F' },\r\n    { title: 'Masculino', value: 'M' }\r\n];\r\n\r\nexport const users = [\r\n    { title: 'Paciente', value: 1 },\r\n    { title: 'Terapeuta', value: 2 }\r\n];","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n * \r\n * @description Archivo encargado de realizar acciones relaionadas al usuario\r\n */\r\n\r\nexport const buildRandomColor = () => {\r\n    const hex = '0123456789ABCDEF'\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++)\r\n        color += hex[Math.floor(Math.random() * 16)];\r\n\r\n    return color;\r\n}\r\n\r\nexport const buildUserAlias = (name, last_name) => {\r\n    const firstLetter = name.charAt(0);\r\n    const secondLetter = last_name.charAt(0);\r\n    return (firstLetter + secondLetter).toUpperCase();\r\n}\r\n\r\nexport const checkUserFields = (state, update) => {\r\n    let user = Object.assign({}, state);\r\n\r\n    let hasErrors = false;\r\n    /** Verificar que los campos no estén vacíos */\r\n    if (user.name.value.trim() === '') {\r\n        user.name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (user.last_name.value.trim() === '') {\r\n        user.last_name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.email.value.trim() === '') {\r\n        user.email.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.id.value.trim() === '') {\r\n        user.id.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.username.value.trim() === '') {\r\n        user.username.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    let checkPassword = true;\r\n    if (!update && user.password.value.trim() === '') {\r\n        user.password.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n        checkPassword= false;\r\n    }\r\n    \r\n    /** Verificar que el campo email sea un email correcto */\r\n    const emailRegex = /[a-zA-Z0-9.+_-]+@[a-z]+\\.[a-z]+/;\r\n    if (!emailRegex.test(user.email.value.trim())) {\r\n        user.email.error = 'Debes ingresar un email válido.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    /** Verificar el campo contraseña para el paciente */\r\n    if (checkPassword) {\r\n        if (user.password.value.trim() !== '' && user.id_role.value === 1) {\r\n            /** Verificar que la contraseña sólo contenga comas */\r\n            const pwdRegex = /[ `!@#$%^g*()_+\\-=[\\]{};':\"\\\\|.<>/?~]/;\r\n            if (pwdRegex.test(user.password.value.trim())) {\r\n                user.password.error = 'La contraseña del paciente no puede ' +\r\n                                      'tener ningún caracter especial exceptuando ' +\r\n                                      'la coma (,).';\r\n                hasErrors = true; \r\n            }\r\n            else {\r\n                /** Verificar que la contraseña tenga 4 palabras */\r\n                const words = user.password.value.trim().split(',');\r\n                if (words.length !== 4) {\r\n                    user.password.error = 'La contraseña del paciente debe tener ' +\r\n                                          '4 palabras separadas por coma (,).';\r\n                    hasErrors = true;\r\n                }\r\n                else {\r\n                    /** Verificar que las palabras pertenezcan al conjunto */\r\n                    const wordsSet = ['árbol', 'corazón', 'flor', 'nube', 'sol'];\r\n                    let notInSet = false;\r\n                    words.forEach(word => {\r\n                        if (!wordsSet.includes(word)) notInSet = true;\r\n                    });\r\n\r\n                    if (notInSet) {\r\n                        user.password.error = 'La contraseña del paciente debe ' + \r\n                                              'tener palabras pertenecientes ' + \r\n                                              'al conjunto descrito.';\r\n                        hasErrors = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return { hasErrors, user };\r\n}","import SAUserForm from './SAUserForm';\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Form, Row } from 'reactstrap';\r\n\r\nimport SCheckField from '@components/shared/form/SCheckField';\r\nimport SDateField from '@components/shared/form/SDateField';\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSelectField from '@components/shared/form/SSelectField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nimport { genders, users } from '@data/form';\r\nimport { checkUserFields } from '@utils/user';\r\n\r\nclass SAUserForm extends Component {\r\n    render() {\r\n        const disabled = this.props.update ? true : false;\r\n        return(\r\n            <Form>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.name.error}\r\n                            name='name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.name.value}>\r\n                            Nombre *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.last_name.error}\r\n                            name='last_name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.last_name.value}>\r\n                            Apellido *\r\n                        </SInputField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField \r\n                    error={this.state.email.error} \r\n                    name='email' \r\n                    onChange={this.onChange}\r\n                    value={this.state.email.value}>\r\n                    Email *\r\n                </SInputField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField\r\n                            disabled={disabled} \r\n                            error={this.state.id.error}\r\n                            name='id'\r\n                            onChange={this.onChange}\r\n                            value={this.state.id.value}>\r\n                            Identificación *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SDateField\r\n                            date={this.state.birthday_date.value}\r\n                            name='birthday_date'\r\n                            onChange={this.onChange}>\r\n                            Fecha de nacimiento *\r\n                        </SDateField>\r\n                    </Col>\r\n                </Row>\r\n                <SSelectField\r\n                    name='gender'\r\n                    onChange={this.onChange}\r\n                    options={genders}\r\n                    value={this.state.gender.value}>\r\n                    Género *\r\n                </SSelectField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.username.error}\r\n                            name='username'\r\n                            onChange={this.onChange}\r\n                            value={this.state.username.value}>\r\n                            Nombre de usuario *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SSelectField\r\n                            name='id_role'\r\n                            onChange={this.onChange}\r\n                            options={users}\r\n                            value={this.state.id_role.value}>\r\n                            Tipo de usuario *\r\n                        </SSelectField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField\r\n                    error={this.state.password.error}\r\n                    form='admin'\r\n                    name='password'\r\n                    onChange={this.onChange}\r\n                    value={this.state.password.value}>\r\n                    Contraseña *\r\n                </SInputField>\r\n                <SCheckField \r\n                    name='active'\r\n                    checked={this.state.active.value}\r\n                    onChange={this.onChange}>\r\n                    ¿Este usuario está activo?\r\n                </SCheckField>\r\n                {this.state.id_role.value === 2 && <SCheckField \r\n                    name='is_admin'\r\n                    checked={this.state.is_admin.value}\r\n                    onChange={this.onChange} >\r\n                    ¿Este usuario es administrador?\r\n                </SCheckField>}\r\n                <SSubmitField\r\n                    className='secondary-btn mt-4 w-100'\r\n                    loading={this.props.loading}\r\n                    onClick={this.onSaveClicked}>\r\n                    Guardar\r\n                </SSubmitField>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: { value: true },\r\n            birthday_date: { value: new Date() },\r\n            email: { value: '', error: null },\r\n            gender: { value: 'F' },\r\n            id: { value: '', error: null },\r\n            is_admin: { value: false },\r\n            last_name: { value: '', error: null },\r\n            name: { value: '', error: null },\r\n            password: { value: '', error: null },\r\n            username: { value: '', error: null },\r\n            id_role: { value: 1 },\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user && this.props.user !== prevProps.user)\r\n            this.setState({...this.props.user});\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildUserData() {\r\n        const keys = Object.keys(this.state);\r\n        let userData = {};\r\n        keys.forEach(key => {\r\n            let { value } = this.state[key];\r\n            if (key === 'name' || key === 'last_name' || key === 'email' ||\r\n                key === 'id' || key === 'username' || key === 'password')\r\n                value = value.trim();\r\n\r\n            userData[key] = value;\r\n        });\r\n\r\n        return userData;\r\n    }\r\n\r\n    onChange(e) {\r\n        let { name, value } = e.target;\r\n        if (name === 'active' || name === 'is_admin')\r\n            value = !this.state[name].value;\r\n        else if (name === 'id_role') \r\n            value = parseInt(value, 10);\r\n\r\n        /** Asignar el valor y resetear el error */\r\n        let field = this.state[name];\r\n        field.value = value;\r\n        if (field.error) field.error = null;\r\n        \r\n        this.setState({ [name]: field });\r\n    }\r\n\r\n    onSaveClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.props.loading) {\r\n            const { update } = this.props;\r\n            const check = checkUserFields(this.state, update);\r\n            if (!check.hasErrors) {\r\n                const userData = this.buildUserData();\r\n                this.props.onSave(userData);\r\n            }\r\n            else\r\n                this.setState({...check.user});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUpdateUserPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getUser,\r\n    updateUser,\r\n    setToUpdate \r\n} from '@actions/user';\r\nimport { register } from '@actions/auth';\r\nimport { uploadProfileImage } from '@actions/plugin';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SAImageLoader from '@components/admin/SAImageLoader';\r\nimport SAUserForm from '@components/admin/SAUserForm';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nimport { buildRandomColor, buildUserAlias } from '@utils/user';\r\n\r\nclass SAUpdateUserPage extends Component {\r\n    render() {\r\n        const { uid } = this.props.match.params;\r\n        const title = uid ? 'Editar usuario' : 'Crear usuario';\r\n        const { update, user } = this.state;\r\n        \r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>{title}</div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.formContainer}>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <SAImageLoader onImageLoaded={this.onImageLoaded} />\r\n                            </Col>\r\n                            <Col md={8}>\r\n                                <p className={styles.userData}>\r\n                                    Datos del usuario\r\n                                </p>\r\n                                <SAUserForm \r\n                                    loading={this.state.loading}\r\n                                    onSave={this.onSave}\r\n                                    update={update}\r\n                                    user={user} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { image: null, loading: false, update: false, user: null };\r\n        this.onImageLoaded = this.onImageLoaded.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { uid } = this.props.match.params;\r\n        if (this.props.toUpdate)\r\n            this.prepareUserForUpdate();\r\n        else if (uid)\r\n            this.getUserToUpdate(uid);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.toUpdate && !this.state.user)\r\n            this.prepareUserForUpdate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setToUpdate(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getUserToUpdate(id) {\r\n        this.props.getUser(id, true);\r\n    }\r\n\r\n    prepareUserForUpdate() {\r\n        const { toUpdate } = this.props;\r\n        const user = {\r\n            id: { value: toUpdate.id, error: null },\r\n            active: { value: toUpdate.active },\r\n            birthday_date: { value: new Date(toUpdate.birthday_date) },\r\n            email: { value: toUpdate.email, error: null },\r\n            gender: { value: toUpdate.gender },\r\n            is_admin: { value: toUpdate.is_admin },\r\n            last_name: { value: toUpdate.last_name, error: null },\r\n            name: { value: toUpdate.name, error: null },\r\n            username: { value: toUpdate.username, error: null },\r\n            id_role: { value: toUpdate.Role.id },\r\n        };\r\n        this.setState({ update: true, user });\r\n    }        \r\n\r\n    /** Eventos */\r\n    onImageLoaded(image) {\r\n      this.setState({ image });\r\n    }\r\n\r\n    async onSave(formData) {\r\n        let userData = Object.assign({}, formData);\r\n        if (userData.password.trim() === '') delete userData.password;\r\n\r\n        /** Completar algunos campos */\r\n        const alias = buildUserAlias(userData.name, userData.last_name);\r\n        userData['thumbnail_alias'] = alias;\r\n            \r\n        const { update } = this.state;\r\n        if (!update) { /** Crear usuario */\r\n            userData['color'] = buildRandomColor();\r\n            if (userData.id_role === 2)\r\n                userData['id_avatar_variation'] = 1;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n        /** Si se seleccionó una imagen, guardarla en el backend y obtener el path */\r\n        if (this.state.image) {\r\n          const blob = this.state.image;\r\n          const name = `${formData.username}.png`;\r\n          const res = await this.props.uploadProfileImage(blob, name);\r\n          if (!res.error) {\r\n            const { path } = res.data;\r\n            userData['profile_img'] = path;\r\n          }\r\n        }\r\n\r\n        const { tid } = this.props.match.params;        \r\n        const response = update ? \r\n                         await this.props.updateUser(userData, tid) \r\n                         :\r\n                         await this.props.register(userData);\r\n            \r\n        const { error, message } = response;\r\n        \r\n        this.setState({ loading: false });\r\n        this.props.setNotification({ error, message, slide: true });\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toUpdate: state.user.toUpdate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    register,\r\n    updateUser,\r\n    uploadProfileImage,\r\n    setNotification,\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUpdateUserPage);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Subir una imagen */\r\nexport const uploadProfileImage = (image, name) => async () => {\r\n  const url = `${apiURL}/plugin/upload-profile-image`;\r\n\r\n  try {\r\n    const form = new FormData();\r\n    form.append('file', image, name);\r\n\r\n    const response = await axios.post(url, form, {\r\n      headers: { \"Content-Type\": 'multipart/form-data;' }\r\n    });\r\n    const { data: { data, message, status }} = response;\r\n    const error = status !== 200;\r\n\r\n    return { data, error, message };\r\n  }\r\n  catch (err) {\r\n    return { error: true, message: err };\r\n  }\r\n}","import SAUpdateUserPage from './SAUpdateUserPage';\r\nexport default SAUpdateUserPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  showMobileMenu, \r\n  setFullScreen, \r\n  setNotification,\r\n  setWindowWidth, \r\n  setVOffset \r\n} from '@actions/ui';\r\nimport { ping, setConnectedId } from '@actions/connection';\r\nimport Speaker from '@utils/Speaker';\r\nimport Messenger from '@utils/Messenger';\r\nimport ServerStatus from '@utils/ServerStatus';\r\n\r\n/** Import de componentes */\r\nimport SAvatar from '@components/shared/SAvatar';\r\nimport SBubbleNotification from '@components/shared/SBubbleNotification';\r\nimport SHeaderBar from '@components/shared/SHeaderBar';\r\nimport SMobileAvatar from '@components/mobile/SMobileAvatar';\r\nimport SMobileMenu from '@components/mobile/SMobileMenu';\r\nimport SModal from '@components/shared/SModal';\r\nimport SProtectedRoute from '@components/SProtectedRoute';\r\n\r\n/** Importar pages */\r\nimport SLandingPage from '@pages/shared/SLandingPage';\r\nimport SProfilePage from '@pages/shared/SProfilePage';\r\nimport SPActivitiesPage from '@pages/patient/SPActivitiesPage';\r\nimport SPCollectableInfoPage from '@pages/patient/SPCollectableInfoPage';\r\nimport SPCollectionsPage from '@pages/patient/SPCollectionsPage';\r\nimport SPLandingPage from '@pages/patient/SPLandingPage';\r\nimport SPPlayPage from '@pages/patient/SPPlayPage';\r\nimport STActivitiesPage from '@pages/therapist/STActivitiesPage';\r\nimport STConfigurationPage from '@pages/therapist/STConfigurationPage';\r\nimport STFeedbackPage from '@pages/therapist/STFeedbackPage';\r\nimport STLandingPage from '@pages/therapist/STLandingPage';\r\nimport STPatientsPage from '@pages/therapist/STPatientsPage';\r\nimport SAUsersPage from '@pages/admin/SAUsersPage';\r\nimport SAUpdateUserPage from '@pages/admin/SAUpdateUserPage';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.ui.parallax && <div className='App-parallax-bg'></div>}\r\n        <SHeaderBar />\r\n        {\r\n          /** Bloque para mostrar el avatar */\r\n          this.props.ui.showAvatar ?\r\n            this.props.ui.windowWidth >= 768 ?\r\n            <div \r\n              className='flex avatar-container'\r\n              style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n              <SAvatar />\r\n            </div>\r\n            : <SMobileAvatar />\r\n          : null\r\n        }\r\n        { this.props.ui.modal && <SModal /> }\r\n        { /** Bloque para mostrar el menú móvil */\r\n          this.props.ui.showMobileMenu && <SMobileMenu /> }\r\n        \r\n        { /** Bloque para mostrar las notificaciones */ \r\n          this.props.ui.notification &&\r\n          <SBubbleNotification /> }\r\n        \r\n        {/** Rutas */}\r\n        <Container \r\n          className='App-container' \r\n          fluid \r\n          style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n          <Switch>\r\n            <Route exact path='/' component={SLandingPage} />\r\n\r\n            {/** Rutas para paciente */}\r\n            <Route\r\n              exact \r\n              path='/paciente' \r\n              component={SPLandingPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades'\r\n              component={SPActivitiesPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones'\r\n              component={SPCollectionsPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones/:id/coleccionable/:cid'\r\n              component={SPCollectableInfoPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades/:aid/sesiones/:sid'\r\n              component={SPPlayPage} />\r\n\r\n            {/** Rutas para terapeuta */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/perfil'\r\n              component={SProfilePage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes/:pid/actividades'\r\n              component={STActivitiesPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/configuracion' \r\n              component={STConfigurationPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:aid/:kind'\r\n              component={STFeedbackPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:kind'\r\n              component={STFeedbackPage} />\r\n            <Route\r\n              exact \r\n              path='/terapeuta' \r\n              component={STLandingPage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes' \r\n              component={STPatientsPage} />\r\n            \r\n            {/** Rutas relacionadas al administrador */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/admin'\r\n              component={SAUsersPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/nuevo'\r\n              component={SAUpdateUserPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/terapeuta/:tid/editar/:uid'\r\n              component={SAUpdateUserPage} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.calculateVOffset = this.calculateVOffset.bind(this);\r\n    this.setWindowSize = this.setWindowSize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.setWindowSize);\r\n    this.calculateVOffset(window.innerWidth);\r\n    Speaker.init('es-MX');\r\n    this.status = new ServerStatus(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) { \r\n      this.calculateVOffset(window.innerWidth);\r\n\r\n      const { connectSocket, checkServerStatus } = this.props.connection;\r\n      if (connectSocket !== prevProps.connection.connectSocket)\r\n        Messenger.handleConnection(this.props.connection, this);\r\n      \r\n      if (checkServerStatus !== prevProps.connection.checkServerStatus)\r\n        this.checkServerStatus(checkServerStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.setWindowSize);\r\n  }\r\n\r\n  /** Métodos extra */\r\n  calculateVOffset(windowWidth) {\r\n    const vOffset = this.props.ui.showAvatar && windowWidth < 768 ? 182 : 62;\r\n    if (!this.props.ui.vOffset || vOffset !== this.props.ui.vOffset) \r\n      this.props.setVOffset(vOffset);\r\n  }\r\n\r\n  checkServerStatus(check) {\r\n    this.status.checkServerStatus(check, false, Messenger);\r\n  }\r\n\r\n  setWindowSize() {\r\n    const windowWidth = window.innerWidth;\r\n    this.props.setWindowWidth(windowWidth);\r\n    if (windowWidth >= 768) this.props.showMobileMenu(false);\r\n    this.calculateVOffset(windowWidth);\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    connection: state.connection,\r\n    ui: state.ui,\r\n  };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  ping,\r\n  setConnectedId,\r\n  showMobileMenu,\r\n  setFullScreen,\r\n  setNotification,\r\n  setVOffset,\r\n  setWindowWidth,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(App);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY, \r\n    SET_SELECTED_SESSION,\r\n    SET_SESSIONS\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    activities: null,\r\n    activity: null,\r\n    sessions: null,\r\n    session: null\r\n};\r\n\r\nconst activityReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload.activities\r\n            };\r\n\r\n        case SET_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                activity: action.payload.activity\r\n            };\r\n        \r\n        case SET_SESSIONS:\r\n            return {\r\n                ...state,\r\n                sessions: action.payload.sessions\r\n            };\r\n        \r\n        case SET_SELECTED_SESSION: {\r\n            return {\r\n                ...state,\r\n                session: action.payload.session\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activityReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from '../actions/types';\r\n\r\nimport { PATIENT, THERAPIST } from '@data/roles';\r\n\r\nconst PATIENT_TOKEN = `${PATIENT}Token`;\r\nconst THERAPIST_TOKEN = `${THERAPIST}Token`;\r\n\r\nlet initialState = {\r\n    [PATIENT_TOKEN]: localStorage.getItem(PATIENT_TOKEN) || null,\r\n    [THERAPIST_TOKEN]: localStorage.getItem(THERAPIST_TOKEN) || null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PATIENT_TOKEN:\r\n            return {\r\n                ...state,\r\n                [PATIENT_TOKEN]: action.payload.token\r\n            };\r\n\r\n        case SET_THERAPIST_TOKEN:\r\n            return {\r\n                ...state,\r\n                [THERAPIST_TOKEN]: action.payload.token\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    message: null,\r\n    variations: null,\r\n}\r\n\r\nconst avatarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AVATAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            };\r\n\r\n        case SET_AVATAR_VARIATION:\r\n            const { variation } = action.payload;\r\n            let variations  = Object.values(state.variations);\r\n            /** Recorrer las variaciones */\r\n            let index = 0;\r\n            variations.forEach((v, i) => {\r\n                if (variation.id === v.id && variation.id_avatar === v.id_avatar)\r\n                    index = i;\r\n            });\r\n            /** Reemplazar la variación */\r\n            variations[index] = variation;\r\n\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n\r\n            return { ...state, variations };\r\n\r\n        case SET_AVATAR_VARIATIONS:\r\n            return {\r\n                ...state,\r\n                variations: action.payload.variations\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default avatarReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKIN_OWNED,\r\n    SET_USER_SKINS_OWNED,\r\n} from \"../actions/types\";\r\n\r\nlet initialState = {\r\n    collections: null,\r\n    collectable: null,\r\n};\r\n\r\nconst collectionReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_COLLECTIONS:\r\n            return {\r\n                ...state,\r\n                collections: action.payload.collections\r\n            };\r\n\r\n        \r\n        case SET_COLLECTABLE:\r\n            return {\r\n                ...state,\r\n                collectable: action.payload.collectable\r\n            };\r\n\r\n\r\n        case SET_USER_SKIN_OWNED:\r\n            const data = action.payload.data;\r\n            const collectableId = data.collectableId;\r\n            const collectionId = data.collectionId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const collections = state.collections;\r\n            const collection = collections[collectionId];\r\n            const Collectables = collection.Collectables;\r\n            const collectable = Collectables[collectableId];\r\n            const Skins = collectable.Skins;\r\n\r\n            return {\r\n                ...state,\r\n                collections: {\r\n                    ...collections,\r\n                    [collectionId]: {\r\n                        ...collection,\r\n                        Collectables: {\r\n                            ...Collectables,\r\n                            [collectableId]: {\r\n                                ...collectable,\r\n                                Skins: {\r\n                                    ...Skins,\r\n                                    owned: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        \r\n        case SET_USER_SKINS_OWNED:\r\n            const _data = action.payload.data;\r\n            const _skinId = _data.skinId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const _collectable = state.collectable;\r\n            const _Skins = _collectable.Skins;\r\n            const skin = _Skins[_skinId];\r\n\r\n            return {\r\n                ...state,\r\n                collectable: {\r\n                    ..._collectable,\r\n                    Skins: {\r\n                        ..._Skins,\r\n                        [_skinId]: {\r\n                            ...skin,\r\n                            owned: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default collectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    configuration: null\r\n}\r\n\r\nconst configurationReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case RESET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: null\r\n            };\r\n        \r\n        case SET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: action.payload.configuration\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default configurationReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    checkServerStatus: false,\r\n    connectedId: null,\r\n    connectSocket: false\r\n};\r\n\r\nconst connectionReducer = (state = initialState, action) => {\r\n    switch (action.type) {        \r\n        case SET_CHECK_SERVER_STATUS:\r\n            return {\r\n                ...state,\r\n                checkServerStatus: action.payload.check\r\n            };\r\n\r\n        case SET_CONNECTED_ID:\r\n            return {\r\n                ...state,\r\n                connectedId: action.payload.connectedId\r\n            };\r\n            \r\n        case SET_CONNECT_SOCKET:\r\n            return {\r\n                ...state,\r\n                connectSocket: action.payload.connectSocket\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default connectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        first: true,\r\n        multichoice: false,\r\n        next: 'situations',\r\n        options: null,\r\n        reset: [ 'situations', 'times', 'reader' ], \r\n        subtitle: `Selecciona la mecánica de la actividad que deseas trabajar\r\n                    con tu paciente. Esta selección desbloquea las situaciones\r\n                    que se pueden trabajar en la actividad.`,\r\n        title: '1. Mecánica de la actividad',\r\n    },\r\n    situations: {\r\n        id: 'situations',\r\n        multichoice: false,\r\n        next: 'times',\r\n        options: null,\r\n        required: [ 'mechanic' ],\r\n        reset: [ 'times', 'reader' ],\r\n        subtitle: `Elige una situación particular para trabajar en la actividad.\r\n                    Esta selección desbloquea los tiempos gramaticales.`,\r\n        title: '2. Situaciones',\r\n    },\r\n    times: {\r\n        id: 'times',\r\n        multichoice: false,\r\n        next: 'reader',\r\n        options: null,\r\n        reset: [ 'reader' ],\r\n        subtitle: `Selecciona el tiempo gramatical (pasado, presente, futuro...)\r\n                    que deseas trabajar en la actividad.`,\r\n        title: '3. Tiempos gramaticales',\r\n    },\r\n    reader: {\r\n        id: 'reader',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        reset: null,\r\n        subtitle: `Selecciona si tu paciente cuenta con proceso lector o no.`,\r\n        title: '4. ¿El paciente cuenta con proceso lector?',\r\n    }\r\n}\r\n\r\nconst dynamicReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n\r\n    switch(action.type) {\r\n        case RESET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            /** Obtener la lista de opciones del field */\r\n            let options = Object.values({ ...field.options });\r\n            let optionId = action.payload.optionId;\r\n            /** Marcar como seleccionada la opción elegida */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dynamicReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    feedDate: new Date(),\r\n    feedData: null\r\n};\r\n\r\nconst feedbackReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_FEEDBACK_DATA:\r\n            return {\r\n                ...state,\r\n                feedData: action.payload.feedData\r\n            };\r\n        \r\n        case SET_FEEDBACK_DATE:\r\n            return {\r\n                ...state,\r\n                feedDate: action.payload.feedDate\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default feedbackReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    patients: null,\r\n    patient: null,\r\n};\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_PATIENT:\r\n            const { _association } = action.payload;\r\n            /** Obtener los ids de la asociación */\r\n            const { _id_therapist, _id_patient } = _association;\r\n            const _patient = state.patients[_id_patient];\r\n\r\n            /** Verificar que opción está teniendo lugar */\r\n            if (_patient.Therapists_Patients) { /** my */\r\n                let _patients = { ...state.patients };\r\n                delete _patients[_id_patient];\r\n\r\n                return { ...state, patients: _patients };\r\n            }\r\n            else { /** all */\r\n                let _Therapists = { ..._patient.Therapists };\r\n                delete _Therapists[_id_therapist];\r\n                \r\n                return {\r\n                    ...state, patients: {\r\n                        ...state.patients, [_id_patient]: {\r\n                            ..._patient, 'Therapists': _Therapists\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n        \r\n        case SET_PATIENT:\r\n            const { association } = action.payload;\r\n            const { id_therapist, id_patient } = association;\r\n            const patient = state.patients[id_patient];\r\n            const { Therapists } = patient;\r\n\r\n            return {\r\n                ...state, patients: {\r\n                    ...state.patients, [id_patient]: {\r\n                        ...patient, 'Therapists': {\r\n                            ...Therapists, [id_therapist]: association\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        \r\n        case SET_PATIENTS:\r\n            return {\r\n                ...state,\r\n                patients: action.payload.patients\r\n            }\r\n\r\n        case SET_SELECTED_PATIENT:\r\n            return {\r\n                ...state,\r\n                patient: action.payload.patient\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default patientReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    ADD_STATIC_SELECTED_OPTION,   \r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    category: {\r\n        id: 'category',\r\n        first: true,\r\n        next: 'subcategory',\r\n        multichoice: false,\r\n        options: null,\r\n        reset: [ 'subcategory', 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una categoría semántica para desbloquear la opción\r\n                    Subcategoría semántica.`,\r\n        title: '1. Categoría semántica',\r\n    },\r\n    subcategory: {\r\n        id: 'subcategory',\r\n        multichoice: false,\r\n        next: 'sintactic',\r\n        options: null,\r\n        required: [ 'category' ],\r\n        reset: [ 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una de las subcategorías semánticas asociadas a la\r\n                    categoría semántica elegida. Esta selección desbloquea la\r\n                    opción Estructura sintáctica.`,\r\n        title: '2. Subcategoría semántica',\r\n    },\r\n    sintactic: {\r\n        id: 'sintactic',\r\n        multichoice: false,\r\n        next: 'vocabulary',\r\n        options: null,\r\n        reset: [ 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige la estructura sintáctica que deseas trabajar con tu\r\n                    paciente y desbloquea el vocabulario asociado.`,\r\n        title: '3. Estructura sintáctica',\r\n    },\r\n    vocabulary: {\r\n        id: 'vocabulary',\r\n        minimum: 3,\r\n        multichoice: true,\r\n        next: 'mechanic',\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: [ 'mechanic' ],\r\n        subtitle: `Elige las palabras asociadas que quieres trabajar con tu\r\n                    paciente en la actividad (mínimo 3). Al elegir el vocabulario\r\n                    se desbloquea la mecánica de la actividad.`,\r\n        title: '4. Vocabulario asociado',\r\n    },\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: null,\r\n        subtitle: `Elige la mecánica de la actividad que deseas trabajar con\r\n                    tu paciente.`,\r\n        title: '5. Mecánica de la actividad',\r\n    }\r\n}\r\n\r\nconst staticReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n    let optionId;\r\n    let options;\r\n\r\n    switch(action.type) {\r\n        case ADD_STATIC_SELECTED_OPTION:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            optionId = action.payload.optionId;\r\n            options = { ...field.options };\r\n\r\n            /** Marcar como seleccionada o no la opción elegida */\r\n            let option = options[optionId];\r\n            option.selected = option.selected ? !option.selected: true;\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        case RESET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n        \r\n        case SET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_STATIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            optionId = action.payload.optionId;\r\n\r\n            field = state[fieldId];\r\n            options = Object.values({ ...field.options });\r\n            /** Remover las selecciones */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n            /** Convertir las opciones a un objeto */\r\n            options = Object.assign({}, ...options.map((option) => {\r\n                return { [option.id]: option };\r\n            }));\r\n\r\n            return {\r\n                ...state,\r\n                [field.id]: { ...field, options } \r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staticReducer;","/**\r\n * @author Martín Vladimir Alonsos Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU,\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    bar: 'standard',\r\n    fullScreen: false,\r\n    modal: null,\r\n    notification: null,\r\n    parallax: false,\r\n    showAvatar: false,\r\n    showCreateActivityButton: false,\r\n    showMobileMenu: false,\r\n    vOffset: null,\r\n    windowWidth: window.innerWidth\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_BAR:\r\n            return {\r\n                ...state,\r\n                bar: action.payload.bar\r\n            };\r\n            \r\n        case SET_FULLSCREEN:\r\n            return {\r\n                ...state,\r\n                fullScreen: action.payload.fullScreen\r\n            };\r\n\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.payload.modal\r\n            };\r\n        \r\n        case SET_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: action.payload.notification\r\n            };\r\n\r\n        case SET_PARALLAX:\r\n            return {\r\n                ...state,\r\n                parallax: action.payload.parallax\r\n            };\r\n\r\n        case SET_V_OFFSET:\r\n            return {\r\n                ...state,\r\n                vOffset: action.payload.vOffset\r\n            };\r\n\r\n        case SET_WINDOW_WIDTH:\r\n            return {\r\n                ...state,\r\n                windowWidth: action.payload.width\r\n            };\r\n\r\n        case SHOW_AVATAR:\r\n            return {\r\n                ...state,\r\n                showAvatar: action.payload.show\r\n            }\r\n\r\n        case SHOW_CREATE_ACTIVITY_BUTTON:\r\n            return {\r\n                ...state,\r\n                showCreateActivityButton: action.payload.show\r\n            };\r\n        \r\n        case SHOW_MOBILE_MENU:\r\n            return {\r\n                ...state,\r\n                showMobileMenu: action.payload.show\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    user: null,\r\n    users: null,\r\n    toUpdate: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            };\r\n\r\n        case SET_TO_UPDATE:\r\n            return {\r\n                ...state,\r\n                toUpdate: action.payload.user\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { combineReducers } from 'redux';\r\n/** Imports de los reducers */\r\nimport activityReducer from './activity';\r\nimport authReducer from './auth';\r\nimport avatarReducer from './avatar';\r\nimport collectionReducer from './collection';\r\nimport configurationReducer from './configuration';\r\nimport connectionReducer from './connection';\r\nimport dynamicReducer from './dynamic';\r\nimport feedbackReducer from './feedback';\r\nimport patientReducer from './patient';\r\nimport staticReducer from './static';\r\nimport uiReducer from './ui';\r\nimport userReducer from './user';\r\n\r\n/** Combinar reducers */\r\nconst allReducers = combineReducers({\r\n    activity: activityReducer,\r\n    auth: authReducer,\r\n    avatar: avatarReducer,\r\n    collection: collectionReducer,\r\n    configuration: configurationReducer,\r\n    connection: connectionReducer,\r\n    dynamic: dynamicReducer,\r\n    feedback: feedbackReducer,\r\n    patient: patientReducer,\r\n    static: staticReducer,\r\n    ui: uiReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default allReducers;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst composedEnhancers = composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\n/** Crear el store de redux */\r\nconst store = createStore(\r\n    allReducers,\r\n    composedEnhancers,\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SUserNav_container__piflN\",\"link\":\"SUserNav_link__1lXdk\",\"uimage\":\"SUserNav_uimage__JCXUR\",\"thumb\":\"SUserNav_thumb__2Xh2m\",\"linksContainer\":\"SUserNav_linksContainer__1HsbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenu_container__2Yxhb\",\"image\":\"SMenu_image__3j8T_\",\"item\":\"SMenu_item__2y48J\",\"menu\":\"SMenu_menu__1wwem\",\"name\":\"SMenu_name__2VPRa\",\"toggle\":\"SMenu_toggle__3ImI5\",\"thumb\":\"SMenu_thumb__1bxk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivitiesPage_container__Dkttc\",\"listContainer\":\"STActivitiesPage_listContainer__3H82W\",\"link\":\"STActivitiesPage_link__Zp_iB\",\"title\":\"STActivitiesPage_title__3hloJ\",\"titleContainer\":\"STActivitiesPage_titleContainer__15GGo\",\"btn\":\"STActivitiesPage_btn__10Nfo\",\"btnContainer\":\"STActivitiesPage_btnContainer___q4t_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STConfigurationPage_btn__2Q1aY\",\"btnContainer\":\"STConfigurationPage_btnContainer__2lvgp\",\"btnSelected\":\"STConfigurationPage_btnSelected__3TLjP\",\"container\":\"STConfigurationPage_container__1SfrO\",\"create\":\"STConfigurationPage_create__V1e0R\",\"createContainer\":\"STConfigurationPage_createContainer__ejmW4\",\"title\":\"STConfigurationPage_title__SAFHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STSession_btn__1HRAO\",\"container\":\"STSession_container__3BTNV\",\"date\":\"STSession_date__1obRt\",\"first\":\"STSession_first__305GI\",\"innerContainer\":\"STSession_innerContainer__267Re\",\"last\":\"STSession_last__9rLEC\",\"selected\":\"STSession_selected__3sDgP\",\"time\":\"STSession_time__AqmmZ\",\"title\":\"STSession_title__3nRh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Feedback_subtitle__2jAva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SBubbleNotification_border__2HzhK\",\"container\":\"SBubbleNotification_container__1FKzp\",\"containerDesktop\":\"SBubbleNotification_containerDesktop__rEvZS\",\"slide\":\"SBubbleNotification_slide__1vY3y\",\"containerMobile\":\"SBubbleNotification_containerMobile__3rxZT\",\"slide-mobile\":\"SBubbleNotification_slide-mobile__1HxUQ\",\"error\":\"SBubbleNotification_error__30IdJ\",\"iconContainer\":\"SBubbleNotification_iconContainer__3mpCw\",\"message\":\"SBubbleNotification_message__3kJu1\",\"success\":\"SBubbleNotification_success__6BfMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SAvatarInfo_description__3-0RK\",\"title\":\"SAvatarInfo_title__2_kr2\",\"image\":\"SAvatarInfo_image__33PTx\",\"avatarSide\":\"SAvatarInfo_avatarSide__2ypT8\",\"container\":\"SAvatarInfo_container__1oU3a\",\"innerContainer\":\"SAvatarInfo_innerContainer__DZUKW\",\"sides\":\"SAvatarInfo_sides__2mJaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alias\":\"SUserHero_alias__30gX0\",\"col\":\"SUserHero_col__2-y6V\",\"container\":\"SUserHero_container__2HQOn\",\"header\":\"SUserHero_header__208gI\",\"row\":\"SUserHero_row__2JNLW\",\"userContainer\":\"SUserHero_userContainer__2iKG9\",\"uimage\":\"SUserHero_uimage__1pTXn\",\"uname\":\"SUserHero_uname__ahWoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPActivity_btn__31_lh\",\"btnContainer\":\"SPActivity_btnContainer__kCgAz\",\"container\":\"SPActivity_container__DgMeO\",\"gameContainer\":\"SPActivity_gameContainer__3PhTU\",\"gameDescription\":\"SPActivity_gameDescription__WhuKO\",\"gameTitle\":\"SPActivity_gameTitle__2kzT7\",\"gameImage\":\"SPActivity_gameImage__2yi6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivityButtons_container__1PhPU\",\"delete\":\"STActivityButtons_delete__2Uhk7\",\"ml\":\"STActivityButtons_ml__2AZ8H\",\"btn\":\"STActivityButtons_btn__3YbeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSelected\":\"STPatientsPage_btnSelected__1YXjO\",\"listContainer\":\"STPatientsPage_listContainer__2Gd2S\",\"searchContainer\":\"STPatientsPage_searchContainer__3wZs0\",\"title\":\"STPatientsPage_title__ShvPl\",\"btn\":\"STPatientsPage_btn__3XsPy\",\"btnContainer\":\"STPatientsPage_btnContainer__2U2bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnEdit\":\"SAUser_btnEdit__31k6p\",\"container\":\"SAUser_container__3jGeH\",\"identification\":\"SAUser_identification__10yNg\",\"infoContainer\":\"SAUser_infoContainer__1c1tt\",\"name\":\"SAUser_name__2r1LZ\",\"thumb\":\"SAUser_thumb__3j8ix\",\"uimage\":\"SAUser_uimage__12AXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFile\":\"SAImageLoader_btnFile__yC3tC\",\"container\":\"SAImageLoader_container__1TFBc\",\"hidden\":\"SAImageLoader_hidden__22hCG\",\"hiddenImage\":\"SAImageLoader_hiddenImage__5cF78\",\"icon\":\"SAImageLoader_icon__gFXGj\",\"iconContainer\":\"SAImageLoader_iconContainer__1f591\",\"innerContainer\":\"SAImageLoader_innerContainer__wBoVn\",\"text\":\"SAImageLoader_text__nMsm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SDevelop_container__HmJ_4\",\"innerContainer\":\"SDevelop_innerContainer__1B2tR\",\"icon\":\"SDevelop_icon__3Z57o\",\"logoImage\":\"SDevelop_logoImage__3Nyb1\",\"logoContainer\":\"SDevelop_logoContainer__2JtP6\",\"text\":\"SDevelop_text__19GGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPCollectable_btn__3F17S\",\"btnBuy\":\"SPCollectable_btnBuy__11AV6\",\"container\":\"SPCollectable_container__CqgDH\",\"info\":\"SPCollectable_info__3Xpgw\",\"owned\":\"SPCollectable_owned__2OLUo\",\"name\":\"SPCollectable_name__3fJXU\",\"points\":\"SPCollectable_points__HH131\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapse\":\"SNav_collapse__2uCCs\",\"container\":\"SNav_container__3BYn3\",\"link\":\"SNav_link__2b-Aa\",\"nav\":\"SNav_nav__2ju7l\",\"navItem\":\"SNav_navItem__3yLMc\",\"toggler\":\"SNav_toggler___z89_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenuHeader_container__2AI3m\",\"email\":\"SMenuHeader_email__24phy\",\"image\":\"SMenuHeader_image__1tOAl\",\"name\":\"SMenuHeader_name__1VaY3\",\"thumb\":\"SMenuHeader_thumb__2X4El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SMobileMenu_btn__7TQ_l\",\"container\":\"SMobileMenu_container__jacuL\",\"linksContainer\":\"SMobileMenu_linksContainer__2x0sy\",\"menu\":\"SMobileMenu_menu__1s-WZ\",\"menuAppear\":\"SMobileMenu_menuAppear__nI2vG\",\"appearing\":\"SMobileMenu_appearing__1o-EH\",\"menuDissapear\":\"SMobileMenu_menuDissapear__1w5mU\",\"dissapearing\":\"SMobileMenu_dissapearing__1bsOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMobile_container__oh5ja\",\"description\":\"SMobile_description__14LjU\",\"image\":\"SMobile_image__117mR\",\"imageContainer\":\"SMobile_imageContainer__PDg_q\",\"innerContainer\":\"SMobile_innerContainer__3ytUQ\",\"title\":\"SMobile_title__1WjAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SProfilePage_btn__1Wku0\",\"container\":\"SProfilePage_container__2q-hR\",\"selected\":\"SProfilePage_selected__1AZjc\",\"options\":\"SProfilePage_options__pByhO\",\"optContainer\":\"SProfilePage_optContainer__1jqmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SHeaderBar_bar__1eNh0\",\"logo\":\"SHeaderBar_logo__3n5pz\",\"navbrand\":\"SHeaderBar_navbrand__1-Xwa\",\"patientBar\":\"SHeaderBar_patientBar__3eQ_s\",\"standardBar\":\"SHeaderBar_standardBar__3xag7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SLandingPage_container__K3tRn\",\"features\":\"SLandingPage_features__21L35\",\"featuresTitle\":\"SLandingPage_featuresTitle__MBjjQ\",\"mainIdea\":\"SLandingPage_mainIdea__1bR4Q\",\"mainPhrase\":\"SLandingPage_mainPhrase__1dI-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeature_container__3-EK4\",\"description\":\"SFeature_description__3okm9\",\"infoContainer\":\"SFeature_infoContainer__zhU2k\",\"logo\":\"SFeature_logo__fkInR\",\"title\":\"SFeature_title__3GzMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SSkinItem_btn__100ay\",\"btnContainer\":\"SSkinItem_btnContainer__1G1SF\",\"container\":\"SSkinItem_container__26nnT\",\"alt\":\"SSkinItem_alt__cvVGs\",\"owned\":\"SSkinItem_owned__3WvlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STField_container__kHP5P\",\"optionCol\":\"STField_optionCol__2DSLX\",\"optionRow\":\"STField_optionRow__2-rBu\",\"title\":\"STField_title__2uhn3\",\"subtitle\":\"STField_subtitle__ZguRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STLogin_btn__3Kn5c\",\"container\":\"STLogin_container__2KaZ9\",\"label\":\"STLogin_label__3ot6S\",\"title\":\"STLogin_title__zrpZb\"};"],"sourceRoot":""}