{"version":3,"sources":["components/shared/SPassword/SPPassButton/SPPassButton.module.css","components/therapist/STField/STField.module.css","components/shared/SComments/SComments.module.css","components/shared/SPasswordRecover/SPasswordRecover.module.css","components/shared/SFooterBar/SFooterBar.module.css","pages/patient/SPCollectionsPage/SPCollectionsPage.module.css","components/patient/SPCollection/SPCollection.module.css","components/therapist/STField/STOption/STOption.module.css","components/shared/SSearch/SSearch.module.css","pages/admin/SAUsersPage/SAUsersPage.module.css","pages/admin/SAUpdateUserPage/SAUpdateUserPage.module.css","components/shared/SModal/SModal.module.css","components/shared/SVideo/SVideo.module.css","components/landing/SFeatures/SFeatures.module.css","components/layout/STLayout/STLayout.module.css","components/layout/SPLayout/SPLayout.module.css","components/shared/SPassword/SPassword.module.css","components/therapist/STHistorical/STMechanics/STMechanics.module.css","components/shared/SEmpty/SEmpty.module.css","components/therapist/STAvatarPanel/STAvatarPanel.module.css","components/shared/SCarousel/SCarousel.module.css","components/shared/SCarousel/SAvatarIem/SAvatarItem.module.css","pages/patient/SPActivitiesPage/SPActivitiesPage.module.css","pages/therapist/STFeedbackPage/STFeedbackPage.module.css","components/shared/SDatePicker/SDatePicker.module.css","components/shared/SMenuLink/SMenuLink.module.css","pages/patient/SPPlayPage/SPPlayPage.module.css","components/therapist/STEvolution/STEvolution.module.css","components/therapist/STEvolution/STSessions/STSessions.module.css","components/therapist/charts/Charts.module.css","components/therapist/STHistorical/STHistorical.module.css","components/therapist/STPatient/STPatient.module.css","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.module.css","components/landing/SHero/SHero.module.css","components/therapist/STActivity/STActivity.module.css","components/therapist/STActivity/STActivityButtons/STActivityButtons.module.css","components/therapist/feedback/STFeedOptions/STFeedOptions.module.css","store/actions/types.js","store/actions/ui.js","store/actions/connection.js","utils/Speaker.js","utils/Messenger.js","utils/ServerStatus.js","components/shared/SAvatar/SAvatar.jsx","components/shared/SAvatar/index.js","components/shared/SBubbleNotification/SBubbleNotification.jsx","components/shared/SBubbleNotification/index.js","components/shared/SHeaderBar/SNav/SNav.jsx","components/shared/SHeaderBar/SNav/index.js","data/roles.js","components/shared/SMenuHeader/SMenuHeader.jsx","components/shared/SMenuHeader/index.js","store/actions/auth.js","components/shared/SMenuLink/SMenuLink.jsx","components/shared/SMenuLink/index.js","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.jsx","components/shared/SHeaderBar/SUserNav/SMenu/index.js","components/shared/SHeaderBar/SUserNav/SUserNav.jsx","components/shared/SHeaderBar/SUserNav/index.js","components/shared/SHeaderBar/SHeaderBar.jsx","components/shared/SHeaderBar/index.js","components/mobile/SMobileAvatar/SMobileAvatar.jsx","components/mobile/SMobileAvatar/index.js","components/mobile/SMobileMenu/SMobileMenu.jsx","components/mobile/SMobileMenu/index.js","utils/date&time.js","components/shared/SEmpty/SEmpty.jsx","components/shared/SEmpty/index.js","components/shared/SSpinner/SSpinner.jsx","components/shared/SSpinner/index.js","components/shared/SComments/SComments.jsx","components/shared/SComments/index.js","store/actions/activity.js","store/actions/plugin.js","components/shared/form/SSubmitField/SSubmitField.jsx","components/shared/form/SSubmitField/index.js","components/shared/SModal/SNewComment/SNewComment.jsx","components/shared/SModal/SNewComment/index.js","store/actions/user.js","utils/user.js","components/shared/form/SInputField/SInputField.jsx","components/shared/form/SInputField/index.js","components/shared/SPasswordRecover/SPasswordRecover.jsx","components/shared/SPasswordRecover/index.js","components/shared/SVideo/SVideo.jsx","components/shared/SVideo/index.js","components/shared/SModal/SModal.jsx","components/shared/SModal/index.js","components/SProtectedRoute/SProtectedRoute.jsx","components/SProtectedRoute/index.js","components/landing/SAvatarInfo/SAvatarInfo.jsx","components/landing/SAvatarInfo/index.js","components/landing/SDevelop/SDevelop.jsx","components/landing/SDevelop/index.js","components/landing/SFeatures/SFeature/SFeature.jsx","components/landing/SFeatures/SFeature/index.js","components/landing/SFeatures/SFeatures.jsx","components/landing/SFeatures/index.js","components/shared/SFooterBar/SFooterBar.jsx","components/shared/SFooterBar/index.js","components/landing/SHero/SHero.jsx","components/landing/SHero/index.js","components/landing/SMobile/SMobile.jsx","components/landing/SMobile/index.js","data/features.js","pages/shared/SLandingPage/SLandingPage.jsx","pages/shared/SLandingPage/index.js","store/actions/avatar.js","components/shared/SInfoPanel/SInfoPanel.jsx","components/shared/SInfoPanel/index.js","components/shared/SCarousel/SAvatarIem/SAvatarItem.jsx","components/shared/SCarousel/SAvatarIem/index.js","store/actions/collection.js","components/shared/SCarousel/SSkinItem/SSkinItem.jsx","components/shared/SCarousel/SSkinItem/index.js","components/shared/SCarousel/SCarousel.jsx","components/shared/SCarousel/index.js","components/shared/SContainer/SContainer.jsx","components/shared/SContainer/index.js","data/customizer.js","components/therapist/STAvatarPanel/STACustomizer/STACustomizer.jsx","components/therapist/STAvatarPanel/STACustomizer/index.js","components/therapist/STAvatarPanel/STAvatarPanel.jsx","components/therapist/STAvatarPanel/index.js","components/layout/STLayout/index.js","components/layout/STLayout/STLayout.jsx","components/shared/SUserHero/index.js","components/shared/SUserHero/SUserHero.jsx","pages/shared/SProfilePage/SProfilePage.jsx","pages/shared/SProfilePage/index.js","components/patient/SPActivity/SPActivity.jsx","components/patient/SPActivity/index.js","components/layout/SPLayout/SPLayout.jsx","components/layout/SPLayout/index.js","data/messages.js","pages/patient/SPActivitiesPage/SPActivitiesPage.jsx","pages/patient/SPActivitiesPage/index.js","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.jsx","pages/patient/SPCollectableInfoPage/index.js","components/patient/SPCollection/SPCollectable/SPCollectable.jsx","components/patient/SPCollection/SPCollectable/index.js","components/patient/SPCollection/index.js","components/patient/SPCollection/SPCollection.jsx","pages/patient/SPCollectionsPage/SPCollectionsPage.jsx","pages/patient/SPCollectionsPage/index.js","components/shared/SPassword/SPPassButton/index.js","components/shared/SPassword/SPPassButton/SPPassButton.jsx","components/shared/SPassword/index.js","components/shared/SPassword/SPassword.jsx","components/patient/SPLogin/SPLogin.jsx","components/patient/SPLogin/index.js","pages/patient/SPLandingPage/SPLandingPage.jsx","pages/patient/SPLandingPage/index.js","components/shared/SFullScreen/index.js","components/shared/SFullScreen/SFullScreen.jsx","pages/patient/SPPlayPage/SPPlayPage.jsx","pages/patient/SPPlayPage/index.js","store/actions/patient.js","components/therapist/STActivity/STActivityButtons/STActivityButtons.jsx","components/therapist/STActivity/STActivityButtons/index.js","components/therapist/STActivity/STSyntacticCircle/SSyntacticCircle.jsx","components/therapist/STActivity/STSyntacticCircle/index.js","components/therapist/STActivity/index.js","components/therapist/STActivity/STActivity.jsx","pages/therapist/STActivitiesPage/STActivitiesPage.jsx","pages/therapist/STActivitiesPage/index.js","components/therapist/STField/STOption/STOption.jsx","components/therapist/STField/STOption/index.js","components/therapist/STField/STField.jsx","components/therapist/STField/index.js","components/therapist/STDynamic/STDynamicField/STDynamicField.jsx","store/actions/dynamic.js","components/therapist/STDynamic/STDynamicField/index.js","components/therapist/STDynamic/STDynamic.jsx","components/therapist/STDynamic/index.js","store/actions/static.js","components/therapist/STStatic/STStaticField/STStaticField.jsx","components/therapist/STStatic/STStaticField/index.js","components/therapist/STStatic/STStatic.jsx","components/therapist/STStatic/index.js","pages/therapist/STConfigurationPage/STConfigurationPage.jsx","store/actions/configuration.js","pages/therapist/STConfigurationPage/index.js","store/actions/feedback.js","components/shared/SDatePicker/SDatePicker.jsx","components/shared/SDatePicker/index.js","utils/feedback.js","data/charts.js","components/therapist/charts/STDoughnut.jsx","components/therapist/charts/STLevel.jsx","components/therapist/charts/STLine.jsx","components/therapist/charts/STPhrases.jsx","components/therapist/charts/STStackBar.jsx","components/therapist/feedback/STInGame.jsx","components/therapist/feedback/STLevels.jsx","components/therapist/feedback/STTimes.jsx","components/therapist/feedback/STVocalization.jsx","data/mechanics.js","components/therapist/feedback/STFeedOptions/STFeedOptions.jsx","components/therapist/feedback/STFeedOptions/index.js","components/therapist/STEvolution/STSessions/STSession/STSession.jsx","components/therapist/STEvolution/STSessions/STSession/index.js","components/therapist/STEvolution/STSessions/STSessions.jsx","components/therapist/STEvolution/STSessions/index.js","components/therapist/STEvolution/STEvolution.jsx","components/therapist/STEvolution/index.js","components/therapist/STHistorical/STMechanics/index.js","components/therapist/STHistorical/STMechanics/STMechanics.jsx","components/therapist/STHistorical/STHistorical.jsx","components/therapist/STHistorical/index.js","pages/therapist/STFeedbackPage/STFeedbackPage.jsx","pages/therapist/STFeedbackPage/index.js","components/therapist/STLogin/STLogin.jsx","components/therapist/STLogin/index.js","pages/therapist/STLandingPage/STLandingPage.jsx","pages/therapist/STLandingPage/index.js","components/shared/SSearch/SSearch.jsx","components/shared/SSearch/index.js","components/therapist/STPatient/STPatient.jsx","components/therapist/STPatient/index.js","pages/therapist/STPatientsPage/STPatientsPage.jsx","pages/therapist/STPatientsPage/index.js","components/admin/SAUser/SAUser.jsx","components/admin/SAUser/index.js","pages/admin/SAUsersPage/SAUsersPage.jsx","pages/admin/SAUsersPage/index.js","components/admin/SAImageLoader/index.js","components/admin/SAImageLoader/SAImageLoader.jsx","components/shared/form/SCheckField/index.js","components/shared/form/SCheckField/SCheckField.jsx","components/shared/form/SDateField/index.js","components/shared/form/SDateField/SDateField.jsx","components/shared/form/SSelectField/index.js","components/shared/form/SSelectField/SSelectField.jsx","data/form.js","components/admin/SAUserForm/index.js","components/admin/SAUserForm/SAUserForm.jsx","pages/admin/SAUpdateUserPage/SAUpdateUserPage.jsx","pages/admin/SAUpdateUserPage/index.js","App.js","store/reducers/activity.js","store/reducers/auth.js","store/reducers/avatar.js","store/reducers/collection.js","store/reducers/configuration.js","store/reducers/connection.js","store/reducers/dynamic.js","store/reducers/feedback.js","store/reducers/patient.js","store/reducers/static.js","store/reducers/ui.js","store/reducers/user.js","store/reducers/index.js","store/index.js","index.js","components/shared/SHeaderBar/SUserNav/SUserNav.module.css","components/shared/SHeaderBar/SUserNav/SMenu/SMenu.module.css","components/patient/SPCollection/SPCollectable/SPCollectable.module.css","pages/therapist/STActivitiesPage/STActivitiesPage.module.css","pages/therapist/STConfigurationPage/STConfigurationPage.module.css","components/therapist/STEvolution/STSessions/STSession/STSession.module.css","components/therapist/feedback/Feedback.module.css","components/shared/SBubbleNotification/SBubbleNotification.module.css","components/mobile/SMobileAvatar/SMobileAvatar.module.css","components/landing/SAvatarInfo/SAvatarInfo.module.css","components/shared/SUserHero/SUserHero.module.css","components/patient/SPActivity/SPActivity.module.css","pages/therapist/STPatientsPage/STPatientsPage.module.css","components/admin/SAUser/SAUser.module.css","components/admin/SAImageLoader/SAImageLoader.module.css","components/shared/SAvatar/SAvatar.module.css","components/landing/SDevelop/SDevelop.module.css","components/shared/SCarousel/SSkinItem/SSkinItem.module.css","components/therapist/STLogin/STLogin.module.css","components/shared/SHeaderBar/SNav/SNav.module.css","components/shared/SMenuHeader/SMenuHeader.module.css","components/mobile/SMobileMenu/SMobileMenu.module.css","components/shared/SModal/SNewComment/SNewComment.module.css","components/landing/SMobile/SMobile.module.css","pages/shared/SProfilePage/SProfilePage.module.css","pages/patient/SPCollectableInfoPage/SPCollectableInfoPage.module.css","components/patient/SPLogin/SPLogin.module.css","components/shared/SHeaderBar/SHeaderBar.module.css","pages/shared/SLandingPage/SLandingPage.module.css","components/landing/SFeatures/SFeature/SFeature.module.css","components/shared/SInfoPanel/SInfoPanel.module.css"],"names":["module","exports","REMOVE_ACTIVITY","SET_ACTIVITIES","SET_ACTIVITY","SET_SELECTED_SESSION","SET_SESSIONS","UPDATE_ACTIVITY","SET_PATIENT_TOKEN","SET_THERAPIST_TOKEN","SET_AVATAR_MESSAGE","SET_AVATAR_VARIATION","SET_AVATAR_VARIATIONS","RESET_CONFIGURATION","SET_CONFIGURATION","RESET_DYNAMIC_OPTIONS","SET_DYNAMIC_OPTIONS","SET_DYNAMIC_SELECTED_OPTIONS","ADD_STATIC_SELECTED_OPTION","RESET_STATIC_OPTIONS","SET_STATIC_OPTIONS","SET_STATIC_SELECTED_OPTIONS","SET_COLLECTIONS","SET_COLLECTABLE","SET_USER_SKINS_OWNED","SET_USER_SKIN_OWNED","SET_CHECK_SERVER_STATUS","SET_CONNECTED_ID","SET_CONNECT_SOCKET","SET_FEEDBACK_DATA","SET_FEEDBACK_DATE","REMOVE_PATIENT","SET_PATIENT","SET_PATIENTS","SET_SELECTED_PATIENT","SET_BAR","SET_FULLSCREEN","SET_MODAL","SET_NOTIFICATION","SET_PARALLAX","SET_V_OFFSET","SET_WINDOW_WIDTH","SHOW_AVATAR","SHOW_CREATE_ACTIVITY_BUTTON","SHOW_MOBILE_MENU","SET_USER","SET_USERS","SET_TO_UPDATE","setBar","bar","dispatch","type","payload","setFullScreen","fullScreen","setModal","modal","setNotification","notification","setParallax","parallax","showAvatar","show","showCreateActivityButton","showMobileMenu","gameServerURL","process","serverURL","setConnectedId","connectedId","Speaker","instance","this","synthesis","window","speechSynthesis","voice","lang","setVoices","voices","console","log","forEach","voiceS","Promise","resolve","timer","setInterval","getVoices","length","clearInterval","message","speakMsg","SpeechSynthesisUtterance","rate","pitch","speak","SpeakerSingleton","Messenger","socketURL","socketClient","heartbeat","userId","context","socketIOClient","connect","reconnection","emit","handleSocketEvents","props","connectSocket","setConnectSocket","disconnect","connection","disconnectSocket","on","closeSocket","MessengerSingleton","ServerStatus","interval","check","game","a","ping","error","status","errorData","handleGameServerStatus","handleServerStatus","ui","serverStatus","slide","handleConnection","DEFAULT_AVATAR","SAvatar","state","avatar_img","soundEnabled","showMessage","onMessageClicked","bind","onRepeatClicked","onSoundClicked","avatarImage","auth","pacienteToken","className","styles","container","image","alt","src","buttons","Button","onClick","buttonIcon","avatar","setTherapistAvatar","prevProps","setState","user","therapists","Object","values","Therapists","avatarVariationImage","Avatar_Variation","img_path","Component","SBubbleNotification","windowWidth","faIcon","faDizzy","faGrinBeam","success","containerDesktop","containerMobile","finalSlide","border","style","iconContainer","icon","size","setTimeout","mapActionsToProps","SNav","useState","isOpen","setIsOpen","toggle","NavbarToggler","toggler","Collapse","collapse","navbar","Nav","nav","NavItem","navItem","link","to","PATIENT","THERAPIST","SMenuHeader","profile_img","thumb","backgroundColor","color","thumbnail_alias","name","last_name","email","apiURL","login","credentials","role","url","axios","post","response","data","headers","token","id","localStorage","setItem","SMenuLink","onLinkClicked","onLogout","children","logout","removeItem","SMenu","Role","Dropdown","DropdownToggle","DropdownMenu","menu","DropdownItem","header","divider","item","SUserNav","onMenuButtonClicked","is_admin","linksContainer","uimage","SHeaderBar","base","patientBar","standardBar","Navbar","expand","fixed","light","NavbarBrand","navbrand","logo","SMobileAvatar","buttonMargin","SMobileMenu","animation","menuAppear","onAnimatedCloseClicked","onSimpleCloseClicked","btn","menuDissapear","getDatesDifference","startDate","endDate","start","DateTime","fromISO","diff","toObject","getFormattedDate","date","setLocale","toLocaleString","DATE_FULL","getDateBoundaries","luxDate","startOf","toISODate","endOf","SEmpty","text","SSpinner","marginTop","padding","textAlign","width","Spinner","SComments","comments","loading","map","comment","i","split","commentContainer","key","audio","controls","getCommentsFromSessions","sessions","session","date_end","trim","push","getActivity","get","activity","getActivities","patientId","activities","setActivity","setActivities","setSession","updateActivitySession","put","SSubmitField","FormGroup","minWidth","e","SNewComment","recording","onCancelClicked","onTextChanged","onRecordAudioClicked","onSaveClicked","recordState","recorded","notRecording","Form","Input","onChange","placeholder","rows","resize","invalid","FormFeedback","microphoneText","recorderContainer","microphone","URL","createObjectURL","marginLeft","justifyContent","target","value","audioChunks","navigator","mediaDevices","getUserMedia","stream","recorder","MediaRecorder","ondataavailable","blob","Blob","stop","audioError","audioPath","uploadAudioFile","path","saveError","audioFile","form","FormData","append","getUser","toUpdate","getUsers","query","users","updateUser","setUser","setToUpdate","buildRandomColor","Math","floor","random","buildUserAlias","charAt","toUpperCase","checkEmail","test","SInputField","Label","FormText","disabled","SPasswordRecover","done","onEmailChange","onSendClicked","infoText","btnContainer","doneMessage","preventDefault","recoverPassword","errorMsg","SVideo","absolute","video","SModal","closeModal","Modal","centered","contentClassName","ModalHeader","title","ModalBody","body","videoUrl","SProtectedRoute","getRoleFromPath","hasToken","component","rest","render","checkServerStatus","computedMatch","letter","params","setCheckServerStatus","defaults","common","SAvatarInfo","innerContainer","sides","avatarSide","description","SDevelop","faHeart","logoContainer","logoImage","SFeature","Col","sm","md","feature","infoContainer","SFeatures","Row","noGutters","features","SFooterBar","copyright","SHero","outerContainer","subtitle","SMobile","imageContainer","featuresData","therapist","patient","SLandingPage","xs","mainPhrase","mainIdea","featuresTitle","setMessage","SInfoPanel","label","SAvatarItem","avatarPath","getPatientSkin","skinData","skinId","single","setPatientSkins","skins","skin","SSkinItem","price","collectable","onBuyClicked","collectableImg","owned","checkPrice","cannotBuy","checkUserSkin","updatePrice","collectableId","collectionId","id_collection","buildData","newScore","score","_skins","Skins","is_default","buySkins","collection","SCarousel","activeIndex","animating","animateItem","buildItems","goToIndex","next","previous","kind","Carousel","CarouselControl","direction","onClickHandler","animate","items","CarouselItem","onExiting","onExited","newIndex","onCarouselChanged","nextIndex","index","selected","SContainer","undefined","borderRadius","boxShadow","options","eye","dbalias","hair","torso","colors","blue","button","colorHex","brown","black","blonde","green","purple","STACustomizer","option","onOptionClicked","onSectionOptionClicked","buildOptions","buildSections","styleClass","col","backgroundImage","backgroundSize","section","buildSectionsOptions","inStyle","names","sectionOpt","optionName","soption","onOptionSelected","STAvatarPanel","current","variations","carousel","getVariations","assign","keys","id_avatar","thumbnail_path","getAvatarVariation","variationData","userData","id_avatar_variation","gender","getAvatarVariations","getVariation","variation","userAvatar","1","splice","unshift","v","STLayout","xlSize","page","mt","rowContainer","lg","xl","pt","SUserHero","userContainer","row","alias","uname","SProfilePage","btnAvatar","btnInfo","optContainer","setAvatarVariations","SPActivity","onPlayClicked","onTutorialClicked","date_from","logo_path","Activity","gameImage","gameContainer","gameTitle","fontWeight","marginBottom","Syntactic_Structure","gameDescription","createActivitySession","Mechanic","tutorial_path","activityUserId","sessionData","date_start","Date","id_activity_user","SPactivity","SPLayout","vOffset","offset","messages","SPActivitiesPage","pid","match","listContainer","SPCollectableInfoPage","currentSkin","scoreIcon","descriptionTitle","summary","getCollectableInfo","setCollectable","cid","getCollectable","itemSelected","SPCollectable","info","points","btnBuy","buySkin","SPCollection","collectables","Collectables","collections","SPCollectionsPage","getCollectionsList","setCollections","getCollections","SPPassButton","btnInv","bgWhite","onDeletePassClicked","onPassButtonClicked","cursor","faTrash","SPassword","passwordOptions","optionsSelected","onDeleteButtonClicked","onPasswordOptionClicked","po","os","added","words","filter","setPassword","SPLogin","password","username","onInputChanged","onForgotClicked","onLogin","onLoginClicked","bsSize","btnForgot","join","landing","SPLandingPage","alignItems","height","SFullScreen","fullRef","React","createRef","onClosed","onKeyHandler","onKeyDown","ref","tabIndex","document","addEventListener","enterFullScreen","exitFullScreen","removeEventListener","requestFullRequest","mozRequestFullScreen","webkitRequestFullScreen","fullscreenElement","mozFullScreenElement","webkitFullScreenElement","exitFullscreen","mozCancelFullScreen","webkitExitFullScreen","event","keyCode","FILE_SERVER_URL","SPPlayPage","gamePath","sid","build_path","avatarURL","outerHeight","outerWidth","redirectBack","hideAvatar","aid","history","goBack","getPatient","getPatients","patients","STActivityButtons","onCommentsClicked","onDeleteClicked","onPDFClicked","onReassignClicked","Activities_Sessions","mr","faCommentAlt","ml","delete","faTimesCircle","removeActivity","pdf_path","file","open","today","weekLater","setDate","getDate","activityData","date_to","updateActivity","activityId","structures","2","3","STSyntacticCircle","structure","bgColor","display","STActivity","tid","aimage","rightContainer","nameContainer","syntContainer","btnEvolution","STActivitiesPage","titleContainer","setPatient","STOption","inner","faCheckCircle","STField","optionRow","optionCol","STDynamicField","first","getOptions","fieldId","field","resetDynamicOptions","reset","r","setDynamicSelectedOptions","optionId","dynamic","required","requiredIds","getRequiredIds","getDynamicOptions","rIds","rField","buildDynamic","fieldData","mechanicId","STDynamic","mechanic","situations","times","reader","STStaticField","resetStaticOptions","getNextOptions","multichoice","addStaticSelectedOption","checkMinimun","setStaticSelectedOptions","static","minimum","getStaticOptions","buildStatic","categoryId","subcategoryId","sintacticId","stid","optionData","STStatic","category","subcategory","sintactic","vocabulary","STConfigurationPage","redirect","onCreateActivityClicked","buttonStatic","btnSelected","buttonDynamic","outline","createContainer","create","resetConfiguration","fields","configuration","buildConfiguration","createActivity","prepareAndCreateActivity","fieldsData","getLevels","_data","historical","mid","feedData","getMatches","getPhrases","getSecuences","registerLocale","es","SDatePicker","pickerRef","onDateChanged","showMonthYear","showYearDropdown","input","dateFormat","completeInput","locale","popperPlacement","showMonthYearPicker","showFullMonthYearPicker","scrollableYearDropdown","withPortal","readOnly","feedDate","setFeedDate","feedback","structuresData","Pronombre","Sustantivo","Adjetivo","Verbo","Artículo","Conjunción","Preposición","buildRecord","hits","totalWords","percentage","sort","b","order_phrase","chartOptions","doughnut","legend","labels","boxWidth","usePointStyle","tooltips","enabled","mode","callbacks","tooltipItem","datasets","toLowerCase","line","metric","align","scales","xAxes","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepSize","max","yLabel","tooltipItems","xLabel","stackBar","stacked","datasetIndex","word","right","total","parseInt","part","round","charts","STDoughnut","chartData","groupedPhrases","phrase","totalPhrases","hitsPercentage","buildPhrasesSummary","STLevel","level","id_session","mt20","setLevelTime","minutes","STLine","matches","records","variable","occurrence","attempts","errors","record","is_good","borderColor","buildMatchErrorsData","buildTimes","STPhrases","phrases","wordsContainer","j","checked","phrasePercentage","STStackBar","feeds","feed","includes","misses","wordTotal","hitTotal","missesPercentage","buildWordHitsData","STInGame","matchesData","Matches_Feeds","getWords","STLevels","levels","setLevels","Levels_Feeds","STTimes","sessionsData","Sessions_Feeds","STVocalization","phrasesData","Phrases_Feeds","grouped","lastPhrase","shift","id_phrase","groupPhrases","getStructures","mechanics","semantic_description","STFeedOptions","btnVocal","btnMecha","btnLevel","btnTimes","contWidth","btnWidth","span","setStateValues","STSession","onClicked","sessionSelected","last","time","getDifference","STSessions","onSessionClicked","STEvolution","getFeedback","STMechanics","onMechanicClicked","UncontrolledTooltip","placement","STHistorical","prevState","toISOString","getSessions","STFeedbackPage","setFeedData","setSessions","setFirstSessions","slice","STLogin","STLandingPage","SSearch","searchContainer","searchIcon","faSearch","search","STPatient","onAssignPatientClicked","uinfo","setCheck","Therapists_Patients","id_therapist","stopPropagation","checkTherapist","removePatient","createPatient","btnActive","therapistId","association","_association","_id_therapist","_id_patient","STPatientsPage","buttonMy","buttonAll","getPatientsList","setPatients","SAUser","identification","btnEdit","faEdit","SAUsersPage","toolsContainer","btnCreate","admin","getAllUsers","setUsers","SAImageLoader","encodedImage","canvasRef","imageRef","onFileChanged","onFileReaderLoaded","onImageLoaded","faImage","hiddenImage","hidden","btnFile","for","files","fileReader","FileReader","readAsDataURL","onload","result","scale","getContext","drawImage","canvas","toDataURL","toBlob","SCheckField","SDateField","SSelectField","opt","genders","SAUserForm","active","birthday_date","id_role","update","hasErrors","checkPassword","wordsSet","notInSet","checkUserFields","buildUserData","onSave","SAUpdateUserPage","uid","formContainer","prepareUserForUpdate","getUserToUpdate","formData","uploadProfileImage","res","register","App","calculateVOffset","setWindowSize","Container","fluid","exact","innerWidth","init","setVOffset","setWindowWidth","initialState","activityReducer","action","activitiesForRemoval","updatedActivity","activitiesForUpdate","PATIENT_TOKEN","THERAPIST_TOKEN","getItem","authReducer","avatarReducer","collectionReducer","_skinId","_collectable","_Skins","configurationReducer","connectionReducer","dynamicReducer","feedbackReducer","patientReducer","_patient","_patients","_Therapists","id_patient","staticReducer","uiReducer","userReducer","allReducers","combineReducers","middleware","thunk","composedEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.530249cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgWhite\":\"SPPassButton_bgWhite__5Ltrk\",\"btn\":\"SPPassButton_btn__194iE\",\"btnInv\":\"SPPassButton_btnInv__1o0Ms\",\"icon\":\"SPPassButton_icon__3VFz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STField_container__kHP5P\",\"optionCol\":\"STField_optionCol__2DSLX\",\"optionRow\":\"STField_optionRow__2-rBu\",\"title\":\"STField_title__2uhn3\",\"subtitle\":\"STField_subtitle__ZguRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"SComments_comment__2BuSV\",\"commentContainer\":\"SComments_commentContainer__2OKNy\",\"container\":\"SComments_container__3G_Ox\",\"date\":\"SComments_date__1ookR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"SPasswordRecover_btnContainer__3gMeU\",\"container\":\"SPasswordRecover_container__2-BNE\",\"doneMessage\":\"SPasswordRecover_doneMessage__O9IDS\",\"infoText\":\"SPasswordRecover_infoText__1bbvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFooterBar_container__1gSB7\",\"copyright\":\"SFooterBar_copyright__ESh8s\",\"innerContainer\":\"SFooterBar_innerContainer__1lM3b\",\"logo\":\"SFooterBar_logo__2D-6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectionsPage_container__3W7c6\",\"score\":\"SPCollectionsPage_score__3fwFX\",\"scoreIcon\":\"SPCollectionsPage_scoreIcon__1VAHF\",\"title\":\"SPCollectionsPage_title__auwrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"SPCollection_col__2K7XX\",\"container\":\"SPCollection_container__27A6j\",\"rowContainer\":\"SPCollection_rowContainer__29q42\",\"title\":\"SPCollection_title__3Uf03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STOption_container__2b_7b\",\"inner\":\"STOption_inner__1PEEH\",\"name\":\"STOption_name__oY1xP\",\"selected\":\"STOption_selected__14b_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marginTop\":\"SSearch_marginTop__lV0l0\",\"search\":\"SSearch_search__BEsUo\",\"searchContainer\":\"SSearch_searchContainer__3Dpat\",\"searchIcon\":\"SSearch_searchIcon__3B77W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnCreate\":\"SAUsersPage_btnCreate__3E2Im\",\"listContainer\":\"SAUsersPage_listContainer__KhrhP\",\"title\":\"SAUsersPage_title__ePhGC\",\"toolsContainer\":\"SAUsersPage_toolsContainer__2f4UM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAUpdateUserPage_container__33K79\",\"formContainer\":\"SAUpdateUserPage_formContainer__2_Iev\",\"title\":\"SAUpdateUserPage_title__zc6GE\",\"userData\":\"SAUpdateUserPage_userData__1NyED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SModal_body__KRael\",\"modal\":\"SModal_modal__EefRS\",\"title\":\"SModal_title__rzR2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"absolute\":\"SVideo_absolute__39LAH\",\"container\":\"SVideo_container__LFvgA\",\"video\":\"SVideo_video__2EZSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeatures_container__TuY4d\",\"innerContainer\":\"SFeatures_innerContainer__1T4yv\",\"title\":\"SFeatures_title__2D6NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STLayout_container__3lOal\",\"outerContainer\":\"STLayout_outerContainer__nbEQl\",\"rowContainer\":\"STLayout_rowContainer__ObmR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPLayout_container__3A-ua\",\"outerContainer\":\"SPLayout_outerContainer__1BQ8D\",\"rowContainer\":\"SPLayout_rowContainer__2WCxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"SPassword_btnContainer__1l-cK\",\"container\":\"SPassword_container__2IKTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STMechanics_btn__Tqd2i\",\"container\":\"STMechanics_container__1tM1K\",\"selected\":\"STMechanics_selected__2D98J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SEmpty_container__17HkQ\",\"text\":\"SEmpty_text__7_-8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel\":\"STAvatarPanel_carousel__13Etq\",\"container\":\"STAvatarPanel_container__1VzPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SCarousel_border__23GFp\",\"style\":\"SCarousel_style__4G1i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SAvatarItem_container__SylU4\",\"image\":\"SAvatarItem_image__GThs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"SPActivitiesPage_listContainer__1zQ0g\",\"title\":\"SPActivitiesPage_title__st4Q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STFeedbackPage_container__3IMrm\",\"title\":\"STFeedbackPage_title__cOZYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completeInput\":\"SDatePicker_completeInput__3Qnnh\",\"input\":\"SDatePicker_input__186S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"SMenuLink_style__3mouR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnClose\":\"SPPlayPage_btnClose__3bovR\",\"closeContainer\":\"SPPlayPage_closeContainer__prnKn\",\"container\":\"SPPlayPage_container__1JXN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STEvolution_container__1JFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STSessions_container__tZ9Rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3RhdX\",\"description\":\"Charts_description__2a5hw\",\"mt20\":\"Charts_mt20__3ckh6\",\"percentage\":\"Charts_percentage__bjF4d\",\"phrasePercentage\":\"Charts_phrasePercentage__vJ19C\",\"score\":\"Charts_score___ZO4Z\",\"subtitle\":\"Charts_subtitle__15rOk\",\"title\":\"Charts_title__3d5vo\",\"word\":\"Charts_word__2sd5u\",\"wordsContainer\":\"Charts_wordsContainer__1Nt_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STHistorical_container__3XXqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STPatient_btn__2j08s\",\"btnActive\":\"STPatient_btnActive__1pd4a\",\"link\":\"STPatient_link__tNTSf\",\"container\":\"STPatient_container__2X2DS\",\"height\":\"STPatient_height__1E83-\",\"padding\":\"STPatient_padding__T-Vv2\",\"thumb\":\"STPatient_thumb__1_vlU\",\"uimage\":\"STPatient_uimage__3am3r\",\"uinfo\":\"STPatient_uinfo__2X0Mb\",\"uname\":\"STPatient_uname__v9FdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STACustomizer_btn__36HiN\",\"col\":\"STACustomizer_col__3fIsC\",\"container\":\"STACustomizer_container__3fiR_\",\"header\":\"STACustomizer_header__2M7hK\",\"rounded\":\"STACustomizer_rounded__3mSP5\",\"selected\":\"STACustomizer_selected__1PA7P\",\"title\":\"STACustomizer_title__90vX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SHero_btn__ed6WQ\",\"btnContainer\":\"SHero_btnContainer__1PllE\",\"container\":\"SHero_container__3qLwg\",\"innerContainer\":\"SHero_innerContainer__1OoLy\",\"link\":\"SHero_link__2NUmS\",\"outerContainer\":\"SHero_outerContainer__3f7_s\",\"subtitle\":\"SHero_subtitle__eo5s7\",\"title\":\"SHero_title__qCU9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivity_container__r4OSJ\",\"date\":\"STActivity_date__IsoC9\",\"description\":\"STActivity_description__cO8RH\",\"btnEvolution\":\"STActivity_btnEvolution__3bVYL\",\"aimage\":\"STActivity_aimage__1FOej\",\"innerContainer\":\"STActivity_innerContainer__1b6Cz\",\"nameContainer\":\"STActivity_nameContainer__2xVy_\",\"rightContainer\":\"STActivity_rightContainer__3nmb0\",\"syntContainer\":\"STActivity_syntContainer__AsPHV\",\"title\":\"STActivity_title__1HtrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"STActivityButtons_comments__1F8al\",\"container\":\"STActivityButtons_container__1PhPU\",\"delete\":\"STActivityButtons_delete__2Uhk7\",\"ml\":\"STActivityButtons_ml__2AZ8H\",\"mr\":\"STActivityButtons_mr__ZNUXu\",\"btn\":\"STActivityButtons_btn__3YbeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STFeedOptions_btn__lNh_P\",\"btnContainer\":\"STFeedOptions_btnContainer__VPsem\",\"disabled\":\"STFeedOptions_disabled__1icUf\",\"selected\":\"STFeedOptions_selected__1wOWG\",\"span\":\"STFeedOptions_span__d7zy9\"};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Actividades */\r\nexport const REMOVE_ACTIVITY = 'REMOVE_ACTIVITY';\r\nexport const SET_ACTIVITIES = 'SET_ACTIVITIES';\r\nexport const SET_ACTIVITY = 'SET_ACTIVITY';\r\nexport const SET_SELECTED_SESSION = 'SET_SELECTED_SESSION';\r\nexport const SET_SESSIONS = 'SET_SESSIONS';\r\nexport const UPDATE_ACTIVITY = 'UPDATE_ACTIVITY';\r\n\r\n/** Auth */\r\nexport const SET_PATIENT_TOKEN = 'SET_PATIENT_TOKEN';\r\nexport const SET_THERAPIST_TOKEN = 'SET_THERAPIST_TOKEN';\r\n\r\n/** Avatar */\r\nexport const SET_AVATAR_MESSAGE = 'SET_AVATAR_MESSAGE';\r\nexport const SET_AVATAR_VARIATION = 'SET_AVATAR_VARIATION';\r\nexport const SET_AVATAR_VARIATIONS = 'SET_AVATAR_VARIATIONS';\r\n\r\n/** Configuración */\r\nexport const RESET_CONFIGURATION = 'RESET_CONFIGURATION';\r\nexport const SET_CONFIGURATION = 'SET_CONFIGURATION';\r\n\r\n/** Configuración dinámica */\r\nexport const RESET_DYNAMIC_OPTIONS = 'RESET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_OPTIONS = 'SET_DYNAMIC_OPTIONS';\r\nexport const SET_DYNAMIC_SELECTED_OPTIONS = 'SET_DYNAMIC_SELECTED_OPTIONS';\r\n\r\n/** Configuración estática */\r\nexport const ADD_STATIC_SELECTED_OPTION = 'ADD_STATIC_SELECTED_OPTION';\r\nexport const RESET_STATIC_OPTIONS = 'RESET_STATIC_OPTIONS';\r\nexport const SET_STATIC_OPTIONS = 'SET_STATIC_OPTIONS';\r\nexport const SET_STATIC_SELECTED_OPTIONS = 'SET_STATIC_SELECTED_OPTIONS';\r\n\r\n/** Colecciones */\r\nexport const SET_COLLECTIONS = 'SET_COLLECTIONS';\r\nexport const SET_COLLECTABLE = 'SET_COLLECTABLE';\r\nexport const SET_USER_SKINS_OWNED = 'SET_USER_SKINS_OWNED';\r\nexport const SET_USER_SKIN_OWNED = 'SET_USER_SKIN_OWNED';\r\n\r\n/** Conexión */\r\nexport const SET_CHECK_SERVER_STATUS = 'SET_CHECK_SERVER_STATUS';\r\nexport const SET_CONNECTED_ID = 'SET_CONNECTED_ID';\r\nexport const SET_CONNECT_SOCKET = 'SET_CONNECT_SOCKET';\r\n\r\n/** Feedback */\r\nexport const SET_FEEDBACK_DATA = 'SET_FEEDBACK_DATA';\r\nexport const SET_FEEDBACK_DATE = 'SET_FEEDBACK_DATE';\r\n\r\n/** Pacientes */\r\nexport const REMOVE_PATIENT = 'REMOVE_PATIENT';\r\nexport const SET_PATIENT = 'SET_PATIENT';\r\nexport const SET_PATIENTS = 'SET_PATIENTS';\r\nexport const SET_SELECTED_PATIENT = 'SET_SELECTED_PATIENT';\r\n\r\n/** UI */\r\nexport const SET_BAR = 'SET_BAR';\r\nexport const SET_FULLSCREEN = 'SET_FULLSCREEN';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\r\nexport const SET_PARALLAX = 'SET_PARALLAX';\r\nexport const SET_V_OFFSET = 'SET_V_OFFSET';\r\nexport const SET_WINDOW_WIDTH = 'SET_WINDOW_WIDTH';\r\nexport const SHOW_AVATAR = 'SHOW_AVATAR';\r\nexport const SHOW_CREATE_ACTIVITY_BUTTON = 'SHOW_CREATE_ACTIVITY_BUTTON';\r\nexport const SHOW_MOBILE_MENU = 'SHOW_MOBILE_MENU';\r\n\r\n/** User */\r\nexport const SET_USER = 'SET_USER';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_TO_UPDATE = 'SET_TO_UPDATE';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU\r\n} from './types';\r\n\r\n\r\nexport const setBar = (bar) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_BAR,\r\n        payload: { bar }\r\n    });\r\n}\r\n\r\nexport const setFullScreen = (fullScreen) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FULLSCREEN, \r\n        payload: { fullScreen }\r\n    });\r\n}\r\n\r\nexport const setModal = (modal) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_MODAL, \r\n        payload: { modal }\r\n    });\r\n}\r\n\r\nexport const setNotification = (notification) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_NOTIFICATION, \r\n        payload: { notification }\r\n    });\r\n}\r\n\r\nexport const setParallax = (parallax) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PARALLAX,\r\n        payload: { parallax }\r\n    });\r\n}\r\n\r\nexport const setVOffset = (vOffset) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_V_OFFSET, \r\n        payload: { vOffset }\r\n    });\r\n}\r\n\r\nexport const setWindowWidth = (width) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_WINDOW_WIDTH, \r\n        payload: { width }\r\n    });\r\n}\r\n\r\nexport const showAvatar = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_AVATAR, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showCreateActivityButton = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_CREATE_ACTIVITY_BUTTON, \r\n        payload: { show }\r\n    });\r\n}\r\n\r\nexport const showMobileMenu = (show) => (dispatch) => {\r\n    dispatch({ \r\n        type: SHOW_MOBILE_MENU, \r\n        payload: { show }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from './types';\r\n\r\nconst gameServerURL = process.env.REACT_APP_FILE_SERVER;\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const ping = (game = false) => async () => {\r\n    const url = `${game ? gameServerURL : serverURL}/ping`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n        \r\n        return { error, message, status };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, status: 500 };\r\n    }\r\n}\r\n\r\nexport const setCheckServerStatus = (check) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CHECK_SERVER_STATUS, \r\n        payload: { check }\r\n    });\r\n}\r\n\r\nexport const setConnectedId = (connectedId) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECTED_ID, \r\n        payload: { connectedId }\r\n    });\r\n}\r\n\r\nexport const setConnectSocket = (connectSocket) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_CONNECT_SOCKET, \r\n        payload: { connectSocket }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\n/** Definición de la clase */\r\nclass Speaker {\r\n\r\n    /** Constructor */\r\n    constructor() {\r\n        if (Speaker.instance instanceof Speaker)\r\n            return Speaker.instance;\r\n\r\n        this.synthesis = window.speechSynthesis;\r\n        this.voice = null;\r\n        Speaker.instance = this;\r\n    }\r\n\r\n    async init(lang) {\r\n        const { voices } = await this.setVoices();\r\n        console.log(voices);   \r\n        voices.forEach(voiceS => {\r\n            if (voiceS.lang === lang) {\r\n                this.voice = voiceS;\r\n            }\r\n        });\r\n    }\r\n\r\n    setVoices() {\r\n        return new Promise((resolve) => {\r\n            const timer = setInterval(() => {\r\n                const voices = this.synthesis.getVoices();\r\n                \r\n                if (voices.length !== 0) {\r\n                    resolve({ voices });\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    speak(message) {\r\n        if (!message)\r\n            return;\r\n        \r\n        const speakMsg = new SpeechSynthesisUtterance(message);\r\n        speakMsg.lang = 'es-MX';\r\n        speakMsg.voice = this.voice;\r\n        speakMsg.rate = 1;\r\n        speakMsg.pitch = 1;\r\n\r\n        this.synthesis.speak(speakMsg);\r\n    }\r\n}\r\n\r\n/** Transforma la clase en un singleton */\r\nconst SpeakerSingleton = new Speaker();\r\nexport default SpeakerSingleton; ","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nclass Messenger {\r\n\r\n    constructor() {\r\n        /** Singleton */\r\n        if (Messenger.instance instanceof Messenger) \r\n            return Messenger.instance;\r\n\r\n        this.socketURL = process.env.REACT_APP_SOCKET_URL;\r\n        this.socketClient = null;\r\n        this.heartbeat = null;\r\n        Messenger.instance = this;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Conectar el socket al servidor */\r\n    connectSocket(userId, context) {\r\n        if (!this.socketClient) {\r\n            this.socketClient = socketIOClient.connect(this.socketURL, {\r\n                reconnection: false\r\n            });\r\n            /** Enviar un mensaje para registrar el usuario */\r\n            this.socketClient.emit('register', { userId });\r\n            this.handleSocketEvents(context);\r\n        }\r\n    }\r\n\r\n    closeSocket(context) {\r\n        if (this.socketClient) {\r\n            this.socketClient = null;\r\n            context.props.setConnectedId(null);\r\n            /** Cuado se presenta un error de conexión */\r\n            if (context.props.connectSocket)\r\n                context.props.setConnectSocket(false);\r\n        }\r\n    }\r\n\r\n    /** Desconectar el socket del servidor */\r\n    disconnectSocket(userId) {\r\n        if (this.socketClient) {\r\n            /** Enviar un mensaje para eliminar al usuario del registro */\r\n            this.socketClient.emit('unregister', { userId });\r\n            this.socketClient.disconnect();\r\n        }\r\n    }\r\n\r\n    /** Manejar la conexión del socket */\r\n    handleConnection(connection, context) {\r\n        const { connectSocket, connectedId } = connection;\r\n        if (connectSocket) \r\n            this.connectSocket(connectedId, context);\r\n        else\r\n            this.disconnectSocket(connectedId);\r\n    }\r\n\r\n    /** Manejar todos los eventos detectados por el socket */\r\n    handleSocketEvents(context) {\r\n        this.socketClient.on('disconnect', () => {\r\n            console.log('Socket desconectado!');\r\n            this.closeSocket(context);\r\n            clearInterval(this.heartbeat);\r\n        });\r\n\r\n        this.socketClient.on('error', () => {\r\n            this.closeSocket(context);\r\n        });\r\n\r\n        /** Eventos propios */\r\n        this.socketClient.on('avatar_message', (message) => {\r\n            console.log(message);\r\n        });\r\n\r\n        this.socketClient.on('beat', () => {\r\n            console.log('beat');\r\n        });\r\n\r\n        this.socketClient.on('exit_game', (message) => {\r\n            console.log(message);\r\n            context.props.setFullScreen(false);\r\n        });\r\n\r\n        this.socketClient.on('registered', () => {\r\n            this.heartbeat = setInterval(() => {\r\n                this.socketClient.emit('heart');\r\n            }, 3000);\r\n        });\r\n    }\r\n}\r\n\r\nconst MessengerSingleton = new Messenger();\r\nexport default MessengerSingleton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nclass ServerStatus {\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.interval = null;\r\n    }\r\n\r\n    /** Métodos de la clase */\r\n    /** Verificar el estado del servidor */\r\n    checkServerStatus(check, game, Messenger) {\r\n        if (check) {\r\n            /** Lanzar un intervalo de 3 segundos para verificar */\r\n            this.interval = setInterval(async () => {\r\n                const { error, status } = await this.context.props.ping(game);\r\n                const errorData = error ? { error, status } : null;\r\n\r\n                if (game) \r\n                    this.handleGameServerStatus();\r\n                else\r\n                    this.handleServerStatus(errorData, Messenger);\r\n            }, \r\n            3000);\r\n        }\r\n        else\r\n            this.clearInterval();\r\n    }\r\n\r\n    /** Detener el intervalo */\r\n    clearInterval() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = null;\r\n        }\r\n    }\r\n\r\n    handleServerStatus(error, Messenger) {\r\n        const { props } = this.context;\r\n        const { connection, ui } = props;\r\n\r\n        if (error) {\r\n            const { status } = error;\r\n                        \r\n            if (status === 500) {\r\n                const message = '¡El servidor está desconectado!';\r\n                if (!ui.notification)\r\n                    props.setNotification({ \r\n                        error: true, \r\n                        message, \r\n                        serverStatus: true, \r\n                        slide: false \r\n                    });\r\n            }\r\n            else if (status === 401)\r\n                console.log('¡Token inválido!');\r\n        }\r\n        else {\r\n            Messenger.handleConnection(connection, this.context);\r\n            if (ui.notification && ui.notification.serverStatus) \r\n                props.setNotification(null);\r\n        }\r\n    }\r\n\r\n    handleGameServerStatus() {\r\n\r\n    }\r\n}\r\n\r\nexport default ServerStatus;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAvatar.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nconst DEFAULT_AVATAR = process.env.REACT_APP_DEFAULT_AVATAR;\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SAvatar extends Component {\r\n    render() {\r\n        const { soundEnabled, showMessage } = this.state;\r\n        const avatarImage = this.props.auth.pacienteToken ? this.state.avatar_img : DEFAULT_AVATAR;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img \r\n                    className={styles.image}\r\n                    alt=''\r\n                    src={avatarImage} />\r\n                <div className={`flex ${styles.buttons}`}>\r\n                    <Button className='ghost-btn' onClick={this.onSoundClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/sound_${soundEnabled ? 'enabled' : 'disabled'}.png`} />\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onMessageClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/message_${showMessage ? 'enabled' : 'disabled'}.png`} />\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onRepeatClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={'/images/other/repeat.png'} />\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.message}>\r\n                    { showMessage && this.props.avatar.message }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { avatar_img: DEFAULT_AVATAR, soundEnabled: true, showMessage: true };\r\n\r\n        this.onMessageClicked = this.onMessageClicked.bind(this);\r\n        this.onRepeatClicked = this.onRepeatClicked.bind(this);\r\n        this.onSoundClicked = this.onSoundClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTherapistAvatar();\r\n        this.speak();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        this.setTherapistAvatar();\r\n        if (prevProps.avatar.message !== this.props.avatar.message) {\r\n            this.speak();\r\n        }\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMessageClicked() {\r\n        this.setState({ showMessage: !this.state.showMessage });\r\n    }\r\n\r\n    onRepeatClicked() {\r\n        this.speak();\r\n    }\r\n\r\n    onSoundClicked() {\r\n        this.setState({ soundEnabled: !this.state.soundEnabled });\r\n    }\r\n\r\n    setTherapistAvatar() {\r\n        if (this.props.user) {\r\n            const therapists = Object.values(this.props.user.Therapists);\r\n            if (therapists.length > 0) {\r\n                const therapist = therapists[0];\r\n                const avatarVariationImage = SERVER_URL + therapist.Avatar_Variation.img_path;\r\n                if (this.state.avatar_img !== avatarVariationImage) {\r\n                    this.setState({ avatar_img: avatarVariationImage });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    speak() {\r\n        if (this.state.soundEnabled)\r\n            Speaker.speak(this.props.avatar.message);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        avatar: state.avatar,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SAvatar);","import SAvatar from './SAvatar';\r\nexport default SAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SBubbleNotification.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '@actions/ui';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDizzy, faGrinBeam } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SBubbleNotification extends Component {\r\n    render() {\r\n        const { error, message, slide } = this.props.notification;\r\n        const { parallax, windowWidth } = this.props;\r\n\r\n        const faIcon = error ? faDizzy : faGrinBeam;\r\n        const state = error ? styles.error : styles.success;\r\n\r\n        const container = windowWidth >= 768 ? \r\n                          styles.containerDesktop : styles.containerMobile;\r\n\r\n        let finalSlide = windowWidth >= 768 ? -368 : -200;\r\n        if (!slide)\r\n            finalSlide = windowWidth >= 768 ?  -1 : 0;\r\n        \r\n        const border = parallax ? '': styles.border;\r\n        \r\n        return(\r\n            <div \r\n                className={`${styles.container} ${container} ${border} flex`}\r\n                style={{ '--finalSlide': `${finalSlide}px`}}>\r\n                <div className={`flex ${styles.iconContainer} ${state}`}>\r\n                    <FontAwesomeIcon icon={faIcon} size='3x' />\r\n                </div>\r\n                <span className={styles.message}>\r\n                    { message }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { slide } = this.props.notification;\r\n        if (slide)\r\n            setTimeout(() => {\r\n                this.props.setNotification(null);\r\n            }, 6001);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setNotification\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.ui.notification,\r\n        parallax: state.ui.parallax,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps,\r\n)(SBubbleNotification);","import SBubbleNotification from './SBubbleNotification';\r\nexport default SBubbleNotification;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport styles from './SNav.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Nav,\r\n    NavbarToggler,\r\n    NavItem\r\n} from 'reactstrap';\r\n\r\nconst SNav = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () =>  {\r\n        if (props.windowWidth <= 768)\r\n            setIsOpen(!isOpen);\r\n    }\r\n\r\n    return(\r\n        <span className={styles.container}>\r\n            <NavbarToggler className={styles.toggler} onClick={toggle} />\r\n            <Collapse className={styles.collapse} isOpen={isOpen} navbar>\r\n                <Nav className={styles.nav} navbar>\r\n                    <NavItem className={styles.navItem}>\r\n                        <Link\r\n                            className={styles.link}\r\n                            onClick={toggle}\r\n                            to='/'>\r\n                            Inicio\r\n                        </Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SNav;","import SNav from './SNav';\r\nexport default SNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const PATIENT = 'paciente';\r\nexport const THERAPIST = 'terapeuta';","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMenuHeader.module.css';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SMenuHeader = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            {\r\n                props.user.profile_img ?\r\n                <img\r\n                    alt='' \r\n                    className={styles.image}\r\n                    src={`${serverURL}${props.user.profile_img}`} />\r\n                :\r\n                <div \r\n                    className={`flex ${styles.image} ${styles.thumb}`} \r\n                    style={{ backgroundColor: props.user.color }}>\r\n                    { props.user.thumbnail_alias }\r\n                </div>\r\n            }\r\n            <span className={styles.name}>\r\n                { props.user.name } { props.user.last_name }\r\n            </span>\r\n            <span className={styles.email}>\r\n                { props.user.email }\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMenuHeader;","import SMenuHeader from './SMenuHeader';\r\nexport default SMenuHeader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from './types';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const login = (credentials, role) => async (dispatch) => {\r\n    const url = `${apiURL}/auth/login`;\r\n    credentials = { ...credentials, role };\r\n\r\n    try {\r\n        const response = await axios.post(url, { credentials });\r\n        const { data: { data, message, status }, headers } = response;\r\n\r\n        /** Obtener el token */\r\n        const token = status === 200 ? headers['auth-token'] : null;\r\n        const userId = status === 200 ? data.id : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n            payload: { token }\r\n        });\r\n        localStorage.setItem(`${role}Token`, token);\r\n            \r\n        return { error, message, userId };\r\n    }\r\n    catch (err) {\r\n        return { \r\n            error: true, \r\n            message: 'Hubo un error de conexión. Inténtalo más tarde...', \r\n            userId: null \r\n        };\r\n    }\r\n}\r\n\r\nexport const logout = (role) => (dispatch) => {\r\n    dispatch({\r\n        type: role === PATIENT ? SET_PATIENT_TOKEN : SET_THERAPIST_TOKEN,\r\n        payload: { token: null }\r\n    });\r\n    localStorage.removeItem(`${role}Token`);\r\n}\r\n\r\nexport const register = (user) => async () => {\r\n    const url = `${apiURL}/auth/register`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { user });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenuLink.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '@actions/auth';\r\n\r\nclass SMenuLink extends Component {\r\n    render() {\r\n        return(\r\n            <Link\r\n                className={styles.style}\r\n                to={this.props.to}\r\n                onClick={this.onLinkClicked}>\r\n                {this.props.children}\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n        this.onLogout = this.onLogout.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        if (this.props.onClick)\r\n            this.props.onClick();\r\n        \r\n        if (this.props.type === 'logout')\r\n            this.onLogout();\r\n    }\r\n\r\n    onLogout() {\r\n        const { role } = this.props;\r\n        this.props.logout(role);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    logout,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SMenuLink);","import SMenuLink from './SMenuLink';\r\nexport default SMenuLink;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMenu.module.css';\r\nimport {\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SMenu extends Component {\r\n    render() {\r\n        const { id, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <Dropdown\r\n                className={styles.container}\r\n                isOpen={this.state.isOpen}\r\n                toggle={this.toggle}>\r\n                <DropdownToggle className={`flex ghost-btn ${styles.toggle}`}>\r\n                    <span className={styles.name}>\r\n                        { this.props.user.name }\r\n                    </span>\r\n                    {\r\n                        this.props.user.profile_img ? \r\n                        <img \r\n                            alt=''\r\n                            className={styles.image}\r\n                            src={`${serverURL}${this.props.user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.image} ${styles.thumb}`}\r\n                            style={{ backgroundColor: this.props.user.color }}>\r\n                            { this.props.user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                </DropdownToggle>\r\n\r\n                <DropdownMenu className={styles.menu}>\r\n                    <DropdownItem header>\r\n                        <SMenuHeader user={this.props.user} />\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    {\r\n                        role === THERAPIST ?\r\n                        <span>\r\n                            <DropdownItem className={styles.item}>\r\n                                <SMenuLink to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                            </DropdownItem>\r\n                        </span>\r\n                        : null\r\n                    }\r\n                    <DropdownItem className={styles.item}>\r\n                        <SMenuLink \r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    toggle() {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMenu);","import SMenu from './SMenu';\r\nexport default SMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserNav.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SMenu from './SMenu';\r\n\r\nclass SUserNav extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.linksContainer}>\r\n                    {\r\n                        role === PATIENT ?\r\n                        <span>\r\n                            <Link\r\n                                className={styles.link} \r\n                                to={`/${role}/${id}/actividades`}>\r\n                                Actividades\r\n                            </Link>\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/colecciones`}>\r\n                                Colecciones\r\n                            </Link>\r\n                        </span>\r\n                        : \r\n                        <span>\r\n                            {is_admin && <Link\r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/admin`}>\r\n                                Administrar\r\n                            </Link>}\r\n                            <Link \r\n                                className={styles.link}\r\n                                to={`/${role}/${id}/pacientes`}>\r\n                                Pacientes\r\n                            </Link>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.windowWidth >= 768 ?\r\n                    <SMenu />\r\n                    :\r\n                    <Button\r\n                        className='ghost-btn'\r\n                        onClick={this.onMenuButtonClicked}>\r\n                        {\r\n                            this.props.user.profile_img ? \r\n                            <div className={styles.uimage} />\r\n                            :\r\n                            <div\r\n                                className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                style={{ backgroundColor: this.props.user.color }}>\r\n                                { this.props.user.thumbnail_alias }\r\n                            </div>\r\n                        }\r\n                    </Button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onMenuButtonClicked = this.onMenuButtonClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMenuButtonClicked() {\r\n        this.props.showMobileMenu(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SUserNav);","import SUserNav from './SUserNav';\r\nexport default SUserNav;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SHeaderBar.module.css';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SNav from './SNav';\r\nimport SUserNav from './SUserNav';\r\n\r\nclass SHeaderBar extends Component {\r\n    render() {\r\n        const { bar } = this.props.ui;\r\n        let base = styles.bar;\r\n        if (bar === 'patient')\r\n            base = `${base} ${styles.patientBar}`;\r\n        else\r\n            base = `${base} ${styles.standardBar}`;\r\n\r\n        return(\r\n            <Navbar \r\n                className={base} \r\n                expand='lg'\r\n                fixed='top' \r\n                light>\r\n                <NavbarBrand className={styles.navbrand}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logo}\r\n                        src='/images/logo/logo.png' />\r\n                    SATReLO\r\n                </NavbarBrand>\r\n                {\r\n                    this.props.user !== null ?\r\n                    <SUserNav />\r\n                    :\r\n                    <SNav windowWidth={this.props.ui.windowWidth} />\r\n                }\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n/** Eementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SHeaderBar);","import SHeaderBar from './SHeaderBar';\r\nexport default SHeaderBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileAvatar.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from '@utils/Speaker';\r\n\r\nclass SMobileAvatar extends Component {\r\n    render() {\r\n        const { soundEnabled, showMessage } = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className='flex'>\r\n                    <div className={styles.image} />\r\n                    <p className={styles.message}>\r\n                        { showMessage && this.props.avatar.message }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className={`flex ${styles.buttons}`}>\r\n                    <Button className='ghost-btn' onClick={this.onSoundClicked}>\r\n                        <img\r\n                            alt='' \r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/sound_${soundEnabled ? 'enabled' : 'disabled'}.png`}/>\r\n                    </Button>\r\n                    <Button className={`ghost-btn ${styles.buttonMargin}`} onClick={this.onMessageClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={styles.buttonIcon}\r\n                            src={`/images/other/message_${showMessage ? 'enabled' : 'disabled'}.png`}/>\r\n                    </Button>\r\n                    <Button className='ghost-btn' onClick={this.onRepeatClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={styles.buttonIcon}\r\n                            src='/images/other/repeat.png' />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { soundEnabled: true, showMessage: true };\r\n        \r\n        this.onMessageClicked = this.onMessageClicked.bind(this);\r\n        this.onRepeatClicked = this.onRepeatClicked.bind(this);\r\n        this.onSoundClicked = this.onSoundClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.speak();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.avatar.message !== this.props.avatar.message)\r\n            this.speak();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMessageClicked() {\r\n        this.setState({ showMessage: !this.state.showMessage });\r\n    }\r\n\r\n    onRepeatClicked() {\r\n        this.speak();\r\n    }\r\n\r\n    onSoundClicked() {\r\n        this.setState({ soundEnabled: !this.state.soundEnabled });\r\n    }\r\n\r\n    speak() {\r\n        if (this.state.soundEnabled)\r\n            Speaker.speak(this.props.avatar.message);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        avatar: state.avatar\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SMobileAvatar);","import SMobileAvatar from './SMobileAvatar';\r\nexport default SMobileAvatar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SMobileMenu.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { showMobileMenu } from '@actions/ui';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nimport SMenuHeader from '@components/shared/SMenuHeader';\r\nimport SMenuLink from '@components/shared/SMenuLink';\r\n\r\nclass SMobileMenu extends Component {\r\n    render() {\r\n        const { id, is_admin, Role } = this.props.user;\r\n        const role = Role.name;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Button\r\n                    onClick={this.onAnimatedCloseClicked}\r\n                    className={`ghost-btn ${styles.btn}`}>\r\n                </Button>\r\n\r\n                <div className={`${styles.menu} ${this.state.animation}`}>\r\n                    <SMenuHeader user={this.props.user} />\r\n                    <br/>\r\n                    <div className='h-delimiter'></div>\r\n                    <div className={styles.linksContainer}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/perfil`}>\r\n                                    Perfil\r\n                                </SMenuLink>\r\n                                <SMenuLink \r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/pacientes`}>\r\n                                    Pacientes\r\n                                </SMenuLink>\r\n                                {is_admin && <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/admin`}>\r\n                                    Administrar\r\n                                </SMenuLink>}\r\n                            </span>\r\n                            :\r\n                            <span>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked} \r\n                                    to={`/${role}/${id}/actividades`}>\r\n                                    Actividades\r\n                                </SMenuLink>\r\n                                <SMenuLink\r\n                                    onClick={this.onSimpleCloseClicked}\r\n                                    to={`/${role}/${id}/colecciones`}>\r\n                                    Colecciones\r\n                                </SMenuLink>\r\n                            </span>\r\n                        }\r\n                        <SMenuLink\r\n                            role={role}\r\n                            to={`/${role}`}\r\n                            type='logout'>\r\n                            Salir\r\n                        </SMenuLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { animation: styles.menuAppear };\r\n        this.onAnimatedCloseClicked = this.onAnimatedCloseClicked.bind(this);\r\n        this.onSimpleCloseClicked = this.onSimpleCloseClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** \r\n     * Métodos encargados de cerrar el menú móvil\r\n     * Nota: Para el logout, el action showMobileMenu(false) se ubica\r\n     * en las páginas de login de cada rol debido a que el menú debe \r\n     * cerrarse antes de cambiar el usuario de la app a null, esto \r\n     * con el fin de evitar conflictos.\r\n     */\r\n    onAnimatedCloseClicked() {\r\n        this.setState({ animation: styles.menuDissapear }, () => {\r\n            setTimeout(() => {\r\n                this.props.showMobileMenu(false)\r\n            }, 210);\r\n        })\r\n    }\r\n\r\n    onSimpleCloseClicked() {\r\n        this.props.showMobileMenu(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SMobileMenu);","import SMobileMenu from './SMobileMenu';\r\nexport default SMobileMenu;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nexport const getDatesDifference = (startDate, endDate) => {\r\n    const start = DateTime.fromISO(startDate);\r\n    const end = DateTime.fromISO(endDate);\r\n    const diff = end.diff(start, [ 'minutes' ]).toObject();\r\n\r\n    return diff;\r\n}\r\n\r\nexport const getFormattedDate = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    return luxDate.setLocale('co').toLocaleString(DateTime.DATE_FULL);\r\n}\r\n\r\nexport const getDateBoundaries = (date) => {\r\n    const luxDate = DateTime.fromISO(date);\r\n    const startDate = luxDate.startOf('month').toISODate();\r\n    const endDate = luxDate.endOf('month').toISODate();\r\n    \r\n    return { startDate, endDate };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SEmpty.module.css';\r\n\r\nconst SEmpty = (props) => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <p className={styles.text} style={{ color: props.color ? props.color: 'darkgray' }}>\r\n                { props.children }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SEmpty;","import SEmpty from './SEmpty';\r\nexport default SEmpty;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst SSpinner = (props) => {\r\n    return(\r\n        <div\r\n            style={{\r\n                marginTop: '30px',\r\n                padding: '5px',\r\n                textAlign: 'center',\r\n                width: '100%' \r\n            }}>\r\n            <Spinner color={props.color} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSpinner;","import SSpinner from './SSpinner';\r\nexport default SSpinner;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SComments.module.css';\r\nimport  { getFormattedDate } from '@utils/date&time';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SComments extends Component {\r\n  render() {\r\n    return(\r\n      <div className={`${styles.container}`}>\r\n        {\r\n          this.state.loading ?\r\n          <SSpinner />\r\n          :\r\n          this.state.comments && this.state.comments.length > 0 ?\r\n          this.state.comments.map((comment, i) => {\r\n            const date = comment.date.split('T')[0];\r\n            return(\r\n              <div className={styles.commentContainer} key={i}>\r\n                <div className={styles.date}>\r\n                  Comentario enviado el {getFormattedDate(date)}\r\n                </div>\r\n                <div className={styles.comment}>\r\n                  {comment.comment}\r\n                </div>\r\n                { comment.audio && <audio src={`${SERVER_URL}${comment.audio}`} \r\n                                          type='video.webm'\r\n                                          controls /> }\r\n              </div>\r\n            );\r\n          })\r\n          : \r\n          <SEmpty>\r\n            No se encontraron comentarios para esta actividad.\r\n          </SEmpty>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { comments: null, loading: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCommentsFromSessions();\r\n  }\r\n\r\n  /** Métodos extra */\r\n  getCommentsFromSessions() {\r\n    this.setState({ loading: true });\r\n\r\n    /** Obtener los mensajes a partir de las sesiones */\r\n    const sessions = Object.values(this.props.data);\r\n    let comments = [];\r\n    sessions.forEach(session => {\r\n      const { audio, comment, date_end } = session;\r\n      if (audio || (comment && comment.trim() !== ''))\r\n        comments.push({ audio, comment, date: date_end });\r\n    });\r\n\r\n    this.setState({ comments, loading: false });\r\n  }\r\n}\r\n\r\nexport default SComments;","import SComments from './SComments';\r\nexport default SComments;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    REMOVE_ACTIVITY,\r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY,\r\n    SET_SELECTED_SESSION, \r\n    SET_SESSIONS,\r\n    UPDATE_ACTIVITY,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear una actividad */\r\nexport const createActivity = (configuration) => async () => {\r\n    const url = `${apiURL}/assembler/`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { configuration });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Crear la sesion de una actividad */\r\nexport const createActivitySession = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/session`;\r\n    const sessionData = {\r\n        date_start: new Date(),\r\n        id_activity_user: activityUserId\r\n    };\r\n\r\n    try {\r\n        const response = await axios.post(url, { session: sessionData });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { data, error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la información de una actividad */\r\nexport const getActivity = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activity = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_ACTIVITY, \r\n            payload: { activity }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener actividades */\r\nexport const getActivities = (patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${patientId}/activities`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const activities = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_ACTIVITIES, \r\n            payload: { activities }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener las sesiones de la actividad de un usuario */\r\nexport const getSessions = (activityUserId) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activityUserId}/sessions`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const sessions = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SESSIONS, \r\n            payload: { sessions }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}\r\n\r\nexport const removeActivity = (activityId) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activityId}`;\r\n\r\n    try {\r\n        const response = await axios.delete(url);\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        if (!error) {\r\n            dispatch({\r\n                type: REMOVE_ACTIVITY,\r\n                payload: { id: activityId }\r\n            });\r\n        }\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setActivity = (activity) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_ACTIVITY, \r\n        payload: { activity }\r\n    });\r\n}\r\n\r\nexport const setActivities = (activities) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_ACTIVITIES,\r\n        payload: { activities }\r\n    });\r\n}\r\n\r\nexport const setSession = (session) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_SESSION, \r\n        payload: { session }\r\n    });\r\n}\r\n\r\nexport const setSessions = (sessions) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SESSIONS, \r\n        payload: { sessions }\r\n    });\r\n}\r\n\r\nexport const updateActivity = (activity) => async (dispatch) => {\r\n    const url = `${apiURL}/activity/${activity.id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { activity });\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        if (!error) {\r\n            dispatch({\r\n                type: UPDATE_ACTIVITY,\r\n                payload: { activity: data }\r\n            });\r\n        }\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const updateActivitySession = (session) => async (dispatch) => {\r\n    const { id } = session;\r\n    const url = `${apiURL}/session/${id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { session });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Subir un audio */\r\nexport const uploadAudioFile = (audioFile, userId) => async() => {\r\n  const url = `${apiURL}/plugin/upload-audio`;\r\n\r\n  try {\r\n    const form = new FormData();\r\n    form.append('file', audioFile, userId);\r\n\r\n    const response = await axios.post(url, form, {\r\n      headers: { \"Content-Type\": 'multipart/form-data' }\r\n    });\r\n    const { data: { data, message, status }} = response;\r\n    const error = status !== 200;\r\n\r\n    return { data, error, message };\r\n  }\r\n  catch (err) {\r\n    return { error: true, message: err };\r\n  }\r\n}\r\n\r\n/** Subir una imagen */\r\nexport const uploadProfileImage = (image, name) => async () => {\r\n  const url = `${apiURL}/plugin/upload-profile-image`;\r\n\r\n  try {\r\n    const form = new FormData();\r\n    form.append('file', image, name);\r\n\r\n    const response = await axios.post(url, form, {\r\n      headers: { \"Content-Type\": 'multipart/form-data;' }\r\n    });\r\n    const { data: { data, message, status }} = response;\r\n    const error = status !== 200;\r\n\r\n    return { data, error, message };\r\n  }\r\n  catch (err) {\r\n    return { error: true, message: err };\r\n  }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Button, FormGroup, Spinner } from 'reactstrap';\r\n\r\nconst SSubmitField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Button\r\n                className={props.className}\r\n                style={{ minWidth: 90 }}\r\n                onClick={(e) => { props.onClick(e); }}>\r\n                {\r\n                    props.loading ?\r\n                    <Spinner color='light' size='sm' />\r\n                    :\r\n                    <span>{props.children}</span>\r\n                }\r\n            </Button>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSubmitField;","import SSubmitField from './SSubmitField';\r\nexport default SSubmitField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SNewComment.module.css';\r\nimport { Button, Form, FormFeedback, FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { updateActivitySession } from '@actions/activity';\r\nimport { uploadAudioFile } from '@actions/plugin';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SNewComment extends Component {\r\n    render() {\r\n        const recordState = this.state.audio ? styles.recorded : \r\n                            this.state.recording ? styles.recording : styles.notRecording;\r\n        return(\r\n            <Form>\r\n                <FormGroup className='mt-2'>\r\n                    <Input \r\n                        type='textarea'\r\n                        onChange={this.onTextChanged}\r\n                        placeholder='Escribe tu comentario aquí...' \r\n                        rows='8' \r\n                        style={{ resize: 'none' }}\r\n                        invalid={this.state.error !== null} />\r\n                    {this.state.error && \r\n                      <FormFeedback>{this.state.error}</FormFeedback>}\r\n                </FormGroup>\r\n                <p className={styles.microphoneText}>\r\n                    Si quieres puedes grabar tu comentario. Para hacerlo, presiona el micrófono y habla.\r\n                </p>\r\n                <div className={`flex ${styles.recorderContainer}`}>\r\n                    <Button className='ghost-btn' onClick={this.onRecordAudioClicked}>\r\n                        <img \r\n                            alt=''\r\n                            className={`${styles.microphone} ${recordState}`}\r\n                            src='/images/other/microphone.png' />\r\n                    </Button>\r\n                    { this.state.audio && <audio src={URL.createObjectURL(this.state.audio)}\r\n                                                 style={{ marginLeft: 7 }}\r\n                                                 type='video.webm'\r\n                                                 controls /> }\r\n                </div>\r\n                <div className='flex mt-4' style={{ justifyContent: 'center' }}>\r\n                    <SSubmitField\r\n                        className='primary-btn w-100'\r\n                        loading={this.state.loading}\r\n                        onClick={this.onSaveClicked}>\r\n                        Guardar\r\n                    </SSubmitField>\r\n                    <FormGroup>\r\n                        <Button \r\n                            className='simple-btn ml-2'\r\n                            onClick={this.onCancelClicked}>\r\n                            Cancelar\r\n                        </Button>\r\n                    </FormGroup>\r\n                </div>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audio: null,\r\n            comment: '',\r\n            error: null,\r\n            loading: false,\r\n            recording: false,\r\n        };\r\n\r\n        this.onCancelClicked = this.onCancelClicked.bind(this);\r\n        this.onTextChanged = this.onTextChanged.bind(this);\r\n        this.onRecordAudioClicked = this.onRecordAudioClicked.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onCancelClicked() {\r\n        this.props.onCancelClicked();\r\n    }\r\n\r\n    onTextChanged(e) {\r\n        this.setState({ comment: e.target.value, error: null });\r\n    }\r\n\r\n    async onRecordAudioClicked() {\r\n        if (!this.state.recording) {\r\n            this.setState({ audio: null });\r\n            /** Iniciar los componentes para obtener el audio */\r\n            this.audioChunks = [];\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            this.recorder = new MediaRecorder(stream);\r\n            this.recorder.ondataavailable = e => {\r\n                this.audioChunks.push(e.data);\r\n            }\r\n            this.recorder.start(100);\r\n        }\r\n        else {\r\n            const blob = new Blob(this.audioChunks, { type: 'audio/mpeg' });\r\n            this.setState({ audio: blob });\r\n            this.recorder.stop();\r\n        }\r\n\r\n        this.setState({ recording: !this.state.recording });\r\n    }\r\n\r\n    async onSaveClicked() {\r\n        if (this.state.comment.trim() === '' && !this.state.audio)\r\n            this.setState({ error: 'Escribe o graba un comentario para poder guardarlo.' });\r\n        else {\r\n            this.setState({ loading: true });\r\n\r\n            const { session, user } = this.props;\r\n            const { audio, comment } = this.state;\r\n\r\n            // Si el comentario tiene una grabación, enviar el archivo al servidor para\r\n            // obtener el path que se guardará en la sesión\r\n            let audioError = false;\r\n            let audioPath = null;\r\n            if (audio) {\r\n                const response = await this.props.uploadAudioFile(audio, user.id);\r\n                let audioError = response.error;\r\n                if (!audioError)\r\n                    audioPath = response.data.path;\r\n            }\r\n\r\n            // Guardar el comentario actualizando la sesión            \r\n            const { error } = await this.props.updateActivitySession({\r\n                id: session, audio: audioPath, comment\r\n            });\r\n            \r\n            const saveError = error || (audioError && comment.trim() === '');\r\n            // Mostrar notificación de la acción de guardar el comentario\r\n            const message = saveError ?\r\n                            'Error al realizar la acción: guardar el comentario' :\r\n                            'Se realizó exitosamente la acción: guardar el comentario';\r\n            this.props.setNotification({ error, message, slide: true });\r\n            // Cerrar la ventana modal\r\n            this.setState({ comment: '', loading: false });\r\n            this.props.onCancelClicked();\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  setNotification,\r\n  updateActivitySession,\r\n  uploadAudioFile,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  mapActionsToProps\r\n)(SNewComment);","import SNewComment from './SNewComment';\r\nexport default SNewComment;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getUser = (id, toUpdate = false) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const user = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({\r\n            type: toUpdate ? SET_TO_UPDATE : SET_USER,\r\n            payload: { user }\r\n        });\r\n\r\n        return { error, message, user };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err, user: null };\r\n    }\r\n}\r\n\r\nexport const getUsers = (query = null) => async (dispatch) => {\r\n    let url = `${apiURL}/user`;\r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n    \r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const users = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_USERS, \r\n            payload: { users }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const recoverPassword = (email, role) => async () => {\r\n    const url = `${apiURL}/user/recover/pwd`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { email, role });\r\n        const { data: { message, status }} = response;\r\n\r\n        const error = status !== 200;\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { \r\n            error: true, \r\n            message: 'Hubo un error de conexión. Inténtalo más tarde...' \r\n        };\r\n    }\r\n}\r\n\r\nexport const updateUser = (user, userId) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${user.id}`;\r\n\r\n    try {\r\n        const response = await axios.put(url, { user });\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        /** Actualizar en el store solamente si es el \r\n          * usuario logueado\r\n          */\r\n        if (!error && user.id === userId)\r\n            dispatch({ \r\n                type: SET_USER, \r\n                payload: { user: data }\r\n            });\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_USER, \r\n        payload: { user }\r\n    });\r\n}\r\n\r\nexport const setUsers = (users) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_USERS,\r\n        payload: { users }\r\n    });\r\n}\r\n\r\nexport const setToUpdate = (user) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_TO_UPDATE, \r\n        payload: { user }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n * \r\n * @description Archivo encargado de realizar acciones relaionadas al usuario\r\n */\r\n\r\nexport const buildRandomColor = () => {\r\n    const hex = '0123456789ABCDEF'\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++)\r\n        color += hex[Math.floor(Math.random() * 16)];\r\n\r\n    return color;\r\n}\r\n\r\nexport const buildUserAlias = (name, last_name) => {\r\n    const firstLetter = name.charAt(0);\r\n    const secondLetter = last_name.charAt(0);\r\n    return (firstLetter + secondLetter).toUpperCase();\r\n}\r\n\r\nexport const checkEmail = (email) => {\r\n    const emailRegex = /[a-zA-Z0-9.+_-]+@[a-z]+\\.[a-z]+/;\r\n    return emailRegex.test(email);\r\n}\r\n\r\nexport const checkUserFields = (state, update) => {\r\n    let user = Object.assign({}, state);\r\n\r\n    let hasErrors = false;\r\n    /** Verificar que los campos no estén vacíos */\r\n    if (user.name.value.trim() === '') {\r\n        user.name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    if (user.last_name.value.trim() === '') {\r\n        user.last_name.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.email.value.trim() === '') {\r\n        user.email.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.id.value.trim() === '') {\r\n        user.id.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    if (user.username.value.trim() === '') {\r\n        user.username.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n    }\r\n    \r\n    let checkPassword = true;\r\n    if (!update && user.password.value.trim() === '') {\r\n        user.password.error = 'Este campo es obligatorio.';\r\n        hasErrors = true;\r\n        checkPassword= false;\r\n    }\r\n    \r\n    /** Verificar que el campo email sea un email correcto */\r\n    const emailRegex = /[a-zA-Z0-9.+_-]+@[a-z]+\\.[a-z]+/;\r\n    if (!emailRegex.test(user.email.value.trim())) {\r\n        user.email.error = 'Debes ingresar un email válido.';\r\n        hasErrors = true;\r\n    }\r\n\r\n    /** Verificar el campo contraseña para el paciente */\r\n    if (checkPassword) {\r\n        if (user.password.value.trim() !== '' && user.id_role.value === 1) {\r\n            /** Verificar que la contraseña sólo contenga comas */\r\n            const pwdRegex = /[ `!@#$%^g*()_+\\-=[\\]{};':\"\\\\|.<>/?~]/;\r\n            if (pwdRegex.test(user.password.value.trim())) {\r\n                user.password.error = 'La contraseña del paciente no puede ' +\r\n                                      'tener ningún caracter especial exceptuando ' +\r\n                                      'la coma (,).';\r\n                hasErrors = true; \r\n            }\r\n            else {\r\n                /** Verificar que la contraseña tenga 4 palabras */\r\n                const words = user.password.value.trim().split(',');\r\n                if (words.length !== 4) {\r\n                    user.password.error = 'La contraseña del paciente debe tener ' +\r\n                                          '4 palabras separadas por coma (,).';\r\n                    hasErrors = true;\r\n                }\r\n                else {\r\n                    /** Verificar que las palabras pertenezcan al conjunto */\r\n                    const wordsSet = ['árbol', 'corazón', 'flor', 'nube', 'sol'];\r\n                    let notInSet = false;\r\n                    words.forEach(word => {\r\n                        if (!wordsSet.includes(word)) notInSet = true;\r\n                    });\r\n\r\n                    if (notInSet) {\r\n                        user.password.error = 'La contraseña del paciente debe ' + \r\n                                              'tener palabras pertenecientes ' + \r\n                                              'al conjunto descrito.';\r\n                        hasErrors = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return { hasErrors, user };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormFeedback, FormGroup, FormText, Input, Label } from 'reactstrap';\r\n\r\nconst SInputField = (props) => {\r\n    const type = props.name === 'email' ? 'email' : 'text';\r\n    \r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            {props.form === 'admin' && props.name === 'password' && \r\n            <FormText>\r\n                Recuerda que la contraseña para el paciente debe \r\n                contener cuatro palabras del conjunto árbol, corazón,\r\n                flor, nube y sol, separadas por coma y sin espacios. Ej.: \r\n                árbol,flor,nube,sol.\r\n            </FormText>}\r\n            <Input\r\n                disabled={props.disabled}\r\n                type={type}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}\r\n                invalid={props.error !== null} />\r\n            {props.error && <FormFeedback>{props.error}</FormFeedback>}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SInputField;","import SInputField from './SInputField';\r\nexport default SInputField;","import React, { Component } from 'react';\r\nimport styles from './SPasswordRecover.module.css';\r\nimport { Form } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { recoverPassword } from '@actions/user';\r\nimport { checkEmail } from '@utils/user';\r\n\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nclass SPasswordRecover extends Component {\r\n  render() {\r\n    return(\r\n      <div className={styles.container}>\r\n        <div className={styles.infoText}>\r\n          Para recuperar tu contraseña debes ingresar el correo electrónico \r\n          que tu administrador te asignó. En caso de no recordar tu correo \r\n          electrónico, o en caso de algún problema, comunícate con el \r\n          administrador del sistema.\r\n        </div>\r\n        <Form>\r\n          <SInputField \r\n            error={this.state.error} \r\n            onChange={this.onEmailChange}\r\n            type='email'\r\n            value={this.state.email}>\r\n              Ingresa aquí el correo electrónico\r\n          </SInputField>\r\n          <div className={`flex ${styles.btnContainer}`}>\r\n            {\r\n              this.state.done ?\r\n              <p className={styles.doneMessage}>\r\n                Se ha enviado un correo con una contraseña provisional. Recuerda que es \r\n                recomendable cambiarla lo antes posible. Ya puedes cerrar esta ventana.\r\n              </p>\r\n              :\r\n              <SSubmitField \r\n                className='primary-btn'\r\n                loading={this.state.loading}\r\n                onClick={this.onSendClicked}>\r\n                Enviar\r\n              </SSubmitField>\r\n            }\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { done: false, email: '', error: null, loading: false };\r\n\r\n    this.onEmailChange = this.onEmailChange.bind(this);\r\n    this.onSendClicked = this.onSendClicked.bind(this);\r\n  }\r\n\r\n  onEmailChange(e) {\r\n    this.setState({ email: e.target.value, error: null });\r\n  }\r\n\r\n  async onSendClicked(e) {\r\n    e.preventDefault();\r\n\r\n    // Verificar posibles errores\r\n    const { email } = this.state;\r\n    let error = null;\r\n    if (email.trim() === '')\r\n      error = 'El email es obligatorio.';\r\n    else if (!checkEmail(email))\r\n      error = 'Debes ingresar un email válido.';\r\n\r\n    // Si hay algún error, mostrarlo. Sino enviar petición al servidor\r\n    if (error)\r\n      this.setState({ error });\r\n    else {\r\n      this.setState({ loading: true });\r\n\r\n      const response = await this.props.recoverPassword(email, this.props.role);\r\n      const { error, message } = response;\r\n      let done = false;\r\n      let errorMsg = null;\r\n      if (error) \r\n        errorMsg = message;\r\n      else\r\n        done = true;\r\n\r\n      this.setState({ done, email: '', error: errorMsg, loading: false });\r\n    }\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n  recoverPassword\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(SPasswordRecover);","import SPasswordRecover from './SPasswordRecover';\r\nexport default SPasswordRecover;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SVideo.module.css';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SVideo = (props) => {\r\n    const absolute = props.absolute ? styles.absolute : '';\r\n    const width = props.width ? props.width : '100%';\r\n\r\n    return(\r\n        <div \r\n            className={`${styles.container} ${absolute}`}\r\n            style={{'--width': width }}>\r\n            <video \r\n                src={`${serverURL}${props.src}`}\r\n                className={styles.video}\r\n                controls>\r\n\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SVideo;","import SVideo from './SVideo';\r\nexport default SVideo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SModal.module.css';\r\nimport { \r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport SComments from '@components/shared/SComments';\r\nimport SNewComment from './SNewComment';\r\nimport SPasswordRecover from '@components/shared/SPasswordRecover';\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nclass SModal extends Component {\r\n    render() {\r\n        return(\r\n            <Modal \r\n                centered={true}\r\n                contentClassName={styles.modal}\r\n                isOpen={this.props.ui.modal !== null}\r\n                size='lg'\r\n                toggle={this.closeModal}>\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    <span className={styles.title}>\r\n                        { this.props.ui.modal.title }\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody className={styles.body}>\r\n                    {\r\n                        this.props.ui.modal.type === 'comments' ?\r\n                        <SComments data={this.props.ui.modal.data} />\r\n                        :\r\n                        this.props.ui.modal.type === 'new_comment' ?\r\n                        <SNewComment \r\n                          onCancelClicked={this.closeModal}\r\n                          session={this.props.ui.modal.session} />\r\n                        :\r\n                        this.props.ui.modal.type === 'forgot_password' ? \r\n                        <SPasswordRecover \r\n                            role={this.props.ui.modal.role}\r\n                            type={this.props.ui.modal.type} />\r\n                        :\r\n                        <SVideo src={this.props.ui.modal.videoUrl} />\r\n                    }\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    closeModal() {\r\n        this.props.setModal(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SModal);","import SModal from './SModal';\r\nexport default SModal;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setNotification,\r\n    setParallax, \r\n    showAvatar \r\n} from '@actions/ui';\r\nimport { getUser } from '@actions/user';\r\nimport { \r\n    setCheckServerStatus, \r\n    setConnectedId, \r\n    setConnectSocket \r\n} from '@actions/connection';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nclass SProtectedRoute extends Component {\r\n    render() {\r\n        const { component: Component, ...rest } = this.props;\r\n        const { role } = this.state;\r\n\r\n        return(\r\n            <Route {...rest} render={(props) => (\r\n                this.hasToken(role) ?\r\n                <Component {...props} />\r\n                :\r\n                <Redirect to={`/${role}`} />\r\n            )} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { role: this.getRoleFromPath() };\r\n        this.hasToken = this.hasToken.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { role } = this.state;\r\n        this.showAvatar(role);\r\n        this.setBar(role);\r\n        this.setParallax(role);\r\n        this.checkServerStatus(true);\r\n                \r\n        if (this.hasToken(role) && this.props.user === null) {\r\n            /** \r\n             * Obtener el parámetro relacionado al id del usuario \r\n             * de acuerdo al rol\r\n             */\r\n            const { computedMatch } = this.props;\r\n            const letter = role === PATIENT ? 'p' : 't';\r\n            const id = computedMatch.params[`${letter}id`];\r\n            \r\n            const { error, user } = await this.props.getUser(id);\r\n            if (!error) this.connectSocket(role, user.id);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disconnectSocket();\r\n        this.checkServerStatus(false);\r\n        this.props.setNotification(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    checkServerStatus(check) {\r\n        this.props.setCheckServerStatus(check);\r\n    }\r\n\r\n    connectSocket(role, userId) {\r\n        if (role === PATIENT) {\r\n            this.props.setConnectedId(userId);\r\n            this.props.setConnectSocket(true);\r\n        }\r\n    }\r\n\r\n    disconnectSocket() {\r\n        this.props.setConnectSocket(false);\r\n    }\r\n\r\n    getRoleFromPath() {\r\n        const { path } = this.props;\r\n        const role = path.split('/')[1];\r\n        return role;\r\n    }\r\n\r\n    hasToken(role) {\r\n        const token = this.props.auth[`${role}Token`];\r\n        if (token) {\r\n            if (!axios.defaults.headers.common['Auth-Token'])\r\n                axios.defaults.headers.common['Auth-Token'] = token;\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setBar(role) {\r\n        const bar = role === PATIENT ? 'patient' : 'standard';\r\n        this.props.setBar(bar);\r\n    }\r\n\r\n    setParallax(role) {\r\n        const parallax = role === PATIENT;\r\n        this.props.setParallax(parallax);\r\n    }\r\n\r\n    /** Mandar a mostrar avatar dependiendo del rol */\r\n    showAvatar(role) {\r\n        const show = role === PATIENT ? true : false;\r\n        this.props.showAvatar(show);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    setBar,\r\n    setCheckServerStatus,\r\n    setConnectedId,\r\n    setConnectSocket,\r\n    setNotification,\r\n    setParallax,\r\n    showAvatar\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProtectedRoute);","import SProtectedRoute from './SProtectedRoute';\r\nexport default SProtectedRoute;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarInfo.module.css';\r\n\r\nconst DEFAULT_AVATAR = process.env.REACT_APP_DEFAULT_AVATAR;\r\n\r\nconst SAvatarInfo = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <div className={`${styles.sides} ${styles.avatarSide}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src={DEFAULT_AVATAR} />                    \r\n                </div>\r\n                <div className={styles.sides}>\r\n                    <p className={styles.title}>\r\n                        ¡Avatar para apoyar las terapias!\r\n                    </p>\r\n                    <p className={styles.description}>\r\n                        Cómo terapeuta puedes personalizar un avatar con el que\r\n                        tu paciente podrá interactuar mientras realiza sus \r\n                        actividades asignadas\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarInfo;","import SAvatarInfo from './SAvatarInfo';\r\nexport default SAvatarInfo;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SDevelop.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SDevelop = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={`flex ${styles.innerContainer}`}>\r\n                <p className={styles.text}>\r\n                    Ideado y desarrollado con \r\n                    <FontAwesomeIcon \r\n                        className={styles.icon}\r\n                        icon={faHeart} />\r\n                    por un equipo interdisciplinar de\r\n                </p>\r\n                <div className={`flex ${styles.logoContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_incs.png' />\r\n                    <img\r\n                        alt=''\r\n                        className={styles.logoImage}\r\n                        src='/images/landing/logo_pujc.png' /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SDevelop;","import SDevelop from './SDevelop';\r\nexport default SDevelop;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeature.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst SFeature = (props) => {\r\n    return(\r\n        <Col sm='12' md='4'>\r\n            <div className={`flex ${styles.container}`}>\r\n                <img \r\n                    alt=''\r\n                    className={styles.logo}\r\n                    src={props.feature.logo} />\r\n                <div className={styles.infoContainer}>\r\n                    <div className={styles.title}>\r\n                        {props.feature.title}\r\n                    </div>\r\n                    <div className={styles.description}>\r\n                        {props.feature.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default SFeature;","import SFeature from './SFeature';\r\nexport default SFeature;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFeatures.module.css';\r\nimport { Row } from 'reactstrap';\r\n\r\nimport SFeature from './SFeature';\r\n\r\nconst SFeatures = (props) => {\r\n    return(\r\n        <div>\r\n            <div className={styles.title}>\r\n                Si eres {props.role}\r\n            </div>\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={styles.innerContainer}>\r\n                    <Row noGutters>\r\n                        {\r\n                            props.features.map((feature) => {\r\n                                return(\r\n                                    <SFeature\r\n                                        feature={feature}\r\n                                        key={feature.id} />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFeatures;","import SFeatures from './SFeatures';\r\nexport default SFeatures;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SFooterBar.module.css';\r\n\r\nconst SFooterBar = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.logo}>\r\n                    SATReLO 2<br />\r\n                    <span className={styles.copyright}>\r\n                        &copy; Copyright 2019-2020\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SFooterBar;","import SFooterBar from './SFooterBar';\r\nexport default SFooterBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SHero.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SVideo from '@components/shared/SVideo';\r\n\r\nconst SHero = () => {\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.outerContainer}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={styles.title}>\r\n                        La Aplicación de Apoyo a la Rehabilitación \r\n                        del Lenguaje Oral\r\n                    </div>\r\n                    <div className={styles.subtitle}>\r\n                        Generación de actividades personalizadas para atender \r\n                        las necesidades particulares de los pacientes\r\n                    </div>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Link className={styles.link} to='/paciente'>\r\n                            <Button \r\n                                className={`secondary-btn ${styles.btn}`}\r\n                                size='lg'>\r\n                            \r\n                                Ingresa como paciente\r\n                            </Button>\r\n                        </Link>\r\n                        <Link className={styles.link} to='terapeuta'>\r\n                            <Button\r\n                                className={`primary-btn ${styles.btn}`} \r\n                                size='lg'>\r\n                                    Ingresa como terapeuta\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <SVideo absolute={true} width='700px' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SHero;","import SHero from './SHero';\r\nexport default SHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SMobile.module.css';\r\n\r\nconst SMobile = () => {\r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <div className={styles.innerContainer}>\r\n                <p className={styles.title}>\r\n                    ¡En todos tus dispositivos!\r\n                </p>\r\n                <p className={styles.description}>\r\n                    SATReLO está cuidadosamente diseñado para que se vea y funcione\r\n                    bien en todos tus dispositivos, ya sean computadores, tablets o \r\n                    smartphones.\r\n                </p>\r\n                <div className={`flex ${styles.imageContainer}`}>\r\n                    <img \r\n                        alt=''\r\n                        className={styles.image}\r\n                        src='images/landing/mobile.png' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMobile;","import SMobile from './SMobile';\r\nexport default SMobile;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport let featuresData = {\r\n    therapist: {\r\n        role: 'terapeuta',\r\n        features: [\r\n            {\r\n                description: `Configura y genera actividades personalizadas\r\n                                de acuerdo a las necesidades del paciente`,\r\n                id: 1,\r\n                logo: '/images/landing/settings.png',\r\n                title: 'Configura actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Asigna las actividades generadas al paciente \r\n                                correspondiente`,\r\n                id: 2,\r\n                logo: '/images/landing/user.png',\r\n                title: 'Asígnalas al paciente',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Recibe retroalimentación del progreso del paciente\r\n                                en las actividades`,\r\n                id: 3,\r\n                logo: '/images/landing/feedback.png',\r\n                title: 'Recibe retroalimentación',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    },\r\n    patient: {\r\n        role: 'paciente',\r\n        features: [\r\n            {\r\n                description: `Realiza las actividades asignadas por el\r\n                                terapeuta`,\r\n                id: 1,\r\n                logo: '/images/landing/game.png',\r\n                title: 'Juega las actividades',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Gana puntos a medida que completas las\r\n                                actividades asignadas`,\r\n                id: 2,\r\n                logo: '/images/landing/score.png',\r\n                title: 'Acumula puntos',\r\n                type: 'feature'\r\n            },\r\n            {\r\n                description: `Intercambia los puntos en la tienda por\r\n                                coleccionables`,\r\n                id: 3,\r\n                logo: '/images/landing/collection.png',\r\n                title: 'Completa la colección',\r\n                type: 'feature'\r\n            }\r\n        ]\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SLandingPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SavatarInfo from '@components/landing/SAvatarInfo';\r\nimport SDevelop from '@components/landing/SDevelop';\r\nimport SFeatures from '@components/landing/SFeatures';\r\nimport SFooterBar from '@components/shared/SFooterBar';\r\nimport SHero from '@components/landing/SHero';\r\nimport SMobile from '@components/landing/SMobile';\r\n\r\nimport { featuresData } from '@data/features';\r\n\r\nclass SLandingPage extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12' className={styles.container}>\r\n                    <SHero />\r\n                    <div className={styles.mainPhrase}>\r\n                        ¿Cómo ayuda SATReLO en las terapias de\r\n                        rehabilitación?\r\n                        <p className={styles.mainIdea}>\r\n                            SATReLO ayuda en la mecanización de la \r\n                            estructuración del lenguaje oral y escrito\r\n                            por medio de la realización de actividades a \r\n                            modo de juegos\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.features}>\r\n                        <p className={styles.featuresTitle}>\r\n                            ¿Cómo funciona?\r\n                        </p>\r\n                        <SFeatures \r\n                            {...this.state.featuresData.therapist} />\r\n                        <SFeatures\r\n                            {...this.state.featuresData.patient} />\r\n                    </div>\r\n                    <SavatarInfo />\r\n                    <SMobile />\r\n                    <SDevelop />\r\n                    <SFooterBar />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = { ...this.state, featuresData };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setUser,\r\n    setBar,\r\n    setParallax,\r\n    showAvatar,\r\n    showMobileMenu\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SLandingPage);\r\n","import SLandingPage from './SLandingPage';\r\nexport default SLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getAvatarVariation = (variationData) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variation`;\r\n\r\n    try {\r\n        const response = await axios.get(url, { params: { ...variationData }});\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const variation = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATION, \r\n            payload: { variation }\r\n        });\r\n\r\n        return { data, error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getAvatarVariations = (gender, userAvatar) => async (dispatch) => {\r\n    const url = `${apiURL}/avatar/variations/${gender}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, status, message }} = response;\r\n        \r\n        let variations = status === 200 ? data : { 1: { id: 1, id_avatar: 1 }};\r\n        const error = status !== 200;\r\n\r\n        if (!error && userAvatar) {\r\n            variations = Object.values(variations);\r\n            /** Buscar y eliminar el avatar con el mismo id \r\n              * del avatar del usuario\r\n              */\r\n            let index = 0;\r\n            variations.forEach((variation, i) => {\r\n                if (userAvatar.id === variation.id)\r\n                    index = i;\r\n            });\r\n            variations.splice(index, 1);\r\n            /** Reemplazar el avatar del usuario\r\n              * colocándolo en el primer lugar del arreglo  \r\n              */\r\n            variations.unshift(userAvatar);\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n        }\r\n\r\n        dispatch({ \r\n            type: SET_AVATAR_VARIATIONS, \r\n            payload: { variations }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };   \r\n    }\r\n}\r\n\r\nexport const setAvatarVariation = (variation) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_VARIATION, \r\n        payload: { variation }\r\n    });\r\n}\r\n\r\nexport const setAvatarVariations = (variations) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_AVATAR_VARIATIONS,\r\n        payload: { variations }\r\n    });\r\n}\r\n\r\nexport const setMessage = (message) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_AVATAR_MESSAGE, \r\n        payload: { message }\r\n    });\r\n}","import React from 'react';\r\nimport styles from './SInfoPanel.module.css';\r\n\r\nconst SInfoPanel = (props) => {\r\n  return(\r\n    <div className={styles.container}>\r\n      <div className={styles.label}>\r\n        Nombres y apellidos\r\n      </div>\r\n      <div className={styles.infoText}>\r\n        { props.user.name } { props.user.last_name }\r\n      </div>\r\n\r\n      <div className={styles.label}>\r\n        Correo electrónico\r\n      </div>\r\n      <div className={styles.infoText}>\r\n        { props.user.email }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SInfoPanel;","import SInfoPanel from './SInfoPanel';\r\nexport default SInfoPanel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SAvatarItem.module.css';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst SAvatarItem = (props) => {\r\n    const { item } = props;\r\n    const avatarPath = SERVER_URL + item.img_path;\r\n    \r\n    return(\r\n        <div className={`flex ${styles.container}`}>\r\n            <img \r\n                alt=''\r\n                className={styles.image}\r\n                src={avatarPath} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SAvatarItem;","import SAvatarItem from './SAvatarItem';\r\nexport default SAvatarItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKINS_OWNED,\r\n    SET_USER_SKIN_OWNED,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getCollections = () => async (dispatch) => {\r\n    const url = `${apiURL}/collection`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collections = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTIONS, \r\n            payload: { collections }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getCollectable = (collectionId, collectableId) => async (dispatch) => {\r\n    const url = `${apiURL}/collection/${collectionId}/collectable/${collectableId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const collectable = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_COLLECTABLE, \r\n            payload: { collectable }\r\n        });\r\n        \r\n        return { data, error, message }; \r\n    }\r\n    catch (err) {\r\n        return { data: null, error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Función para verificar si un usuario tiene un aspecto o no */\r\nexport const getPatientSkin = (userId, skinData) => async (dispatch) => {\r\n    const { skinId } = skinData;\r\n    const url = `${apiURL}/patient/${userId}/skin/${skinId}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const { single } = skinData;\r\n            dispatch({\r\n                type: single ? SET_USER_SKIN_OWNED : SET_USER_SKINS_OWNED, \r\n                payload: { data: skinData } \r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setCollections = (collections) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_COLLECTIONS, \r\n        payload: { collections }\r\n    });\r\n}\r\n\r\nexport const setCollectable = (collectable) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_COLLECTABLE,\r\n        payload: { collectable }\r\n    });\r\n}\r\n\r\n/** Función para asociar aspectos al usuario */\r\nexport const setPatientSkins = (userId, skinData) => async (dispatch) => {\r\n    const url = `${apiURL}/patient/${userId}/skin`;\r\n    const { skins } = skinData;\r\n\r\n    try {\r\n        const response = await axios.post(url, { skins });\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            delete skinData.skins;\r\n            /** Agregar aspecto desde la lista de coleccionables */\r\n            if (skinData.single) {\r\n                dispatch({\r\n                    type: SET_USER_SKIN_OWNED, \r\n                    payload: { data: skinData }\r\n                });\r\n            }\r\n            /** Agregar aspectos desde la lista de aspectos */\r\n            else {\r\n                skins.forEach(skin => {\r\n                    skinData.skinId = skin.id;\r\n                    dispatch({\r\n                        type: SET_USER_SKINS_OWNED, \r\n                        payload: { data: skinData }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };       \r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSkinItem.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\nimport { updateUser } from '@actions/user';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SSkinItem extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <img\r\n                    alt=''\r\n                    className={styles.collectableImg}\r\n                    src={SERVER_URL + this.props.img_path} />\r\n                <p className={styles.alt}>\r\n                    { this.props.name }\r\n                </p>\r\n                {\r\n                    this.props.owned ?\r\n                    <div className={styles.owned}>\r\n                        Ya tienes este ítem\r\n                    </div>\r\n                    :\r\n                    this.checkPrice() ?\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`primary-btn ${styles.btn}`}\r\n                            onClick={this.onBuyClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>\r\n                                    Comprar por { this.state.price } puntos\r\n                                </span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                    :\r\n                    <div className={styles.cannotBuy}>\r\n                        Necesitas { this.state.price } puntos.\r\n                        Aún no puedes comprar este ítem\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loading: false,\r\n            price: this.props.price + this.props.collectable.price \r\n        };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkUserSkin();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        /**\r\n         * Si el coleccionable cambió quiere decir que se detectó que\r\n         * uno de sus aspectos pertenece al usuario, por lo que el \r\n         * coleccionable en general es propiedad de usuario. Si esto\r\n         * es así el precio es solamente el del aspecto.\r\n         */\r\n        if (prevProps.collectable !== this.props.collectable)\r\n            this.updatePrice();       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        let data = {\r\n            collectableId: this.props.collectable.id,\r\n            collectionId: this.props.collectable.id_collection,\r\n            single: false,\r\n        }\r\n        if (check) data.skinId = this.props.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkins(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        /** Actualizar el puntaje del usuario para realizar la compra */\r\n        const { user } = this.props;\r\n        const newScore = user.score - this.state.price;\r\n        await this.props.updateUser({ id: user.id, score: newScore }, user.id);\r\n\r\n        await this.props.setPatientSkins(this.props.userId, data);        \r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    checkPrice() {\r\n        return this.props.user.score >= this.state.price;\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        const { user } = this.props;\r\n        if (user.score >= this.state.price) {\r\n            let _skins = [{ id: this.props.id }];\r\n            /**\r\n             * Si el precio del aspecto es menor al precio calculado en el\r\n             * estado de este componente, entonces el coleccionable no es \r\n             * propiedad del usuario por lo que se debe agregar el aspecto\r\n             * por defecto a los aspectos para comprar.\r\n             */\r\n            if (this.props.price < this.state.price) {\r\n                const Skins = Object.values(this.props.collectable.Skins);\r\n                Skins.forEach(skin => {\r\n                    if (skin.is_default && skin.id !== this.props.id) {\r\n                        _skins.push({ id: skin.id });\r\n                    }\r\n                });\r\n            }\r\n            this.buySkins(_skins);\r\n        }\r\n    }\r\n\r\n    updatePrice() {\r\n        if (this.props.price !== this.state.price)\r\n            this.setState({ price: this.props.price });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable, \r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatientSkin,\r\n    setPatientSkins,\r\n    updateUser,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SSkinItem);","import SSkinItem from './SSkinItem';\r\nexport default SSkinItem;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SCarousel.module.css';\r\nimport {\r\n    Carousel,\r\n    CarouselControl,\r\n    CarouselItem,\r\n} from 'reactstrap';\r\n\r\nimport SAvatarItem from './SAvatarIem';\r\nimport SSkinItem from './SSkinItem';\r\n\r\nclass SCarousel extends Component {\r\n    render() {\r\n        const { kind } = this.props;\r\n        let base = styles.style;\r\n        if (kind !== 'avatar')\r\n            base = `${base} ${styles.border}`;\r\n\r\n        return(\r\n            <Carousel\r\n                className={base}\r\n                activeIndex={this.state.activeIndex}\r\n                interval={false}\r\n                next={this.next}\r\n                previous={this.previous}>\r\n                \r\n                {this.buildItems()}\r\n\r\n                <CarouselControl\r\n                    direction='prev'\r\n                    onClickHandler={this.previous} />\r\n                <CarouselControl \r\n                    direction='next'\r\n                    onClickHandler={this.next} />\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0,\r\n            animating: false,\r\n        };\r\n        this.animateItem = this.animateItem.bind(this);\r\n        this.buildItems = this.buildItems.bind(this);\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    animateItem(animate) {\r\n        this.setState({ animating: animate });\r\n    }\r\n\r\n    /** Construir los items que component el Carousel */\r\n    buildItems() {\r\n        return this.props.items.map((item) => {\r\n            return(\r\n                <CarouselItem\r\n                    key={item.id}\r\n                    onExiting={() => { this.animateItem(true); }}\r\n                    onExited={() => { this.animateItem(false); }}>\r\n                    {\r\n                        this.props.kind === 'avatar' ?\r\n                        <SAvatarItem item={item} />\r\n                        :\r\n                        <SSkinItem \r\n                            {...item} \r\n                            userId={this.props.userId} />\r\n                    }\r\n                </CarouselItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    goToIndex(newIndex) {\r\n        if (this.state.animating)\r\n            return\r\n        this.setState({ activeIndex: newIndex });\r\n        this.onCarouselChanged(newIndex);\r\n    }\r\n\r\n    next() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === this.props.items.length - 1 ?\r\n                        0 : this.state.activeIndex + 1;\r\n        this.setState({ activeIndex : nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    previous() {\r\n        if (this.state.animating)\r\n            return\r\n        \r\n        let nextIndex = this.state.activeIndex === 0 ?\r\n                        this.props.items.length - 1 : this.state.activeIndex - 1;\r\n        this.setState({ activeIndex: nextIndex });\r\n        this.onCarouselChanged(nextIndex);\r\n    }\r\n\r\n    onCarouselChanged(index) {\r\n        const selected = this.props.items[index];\r\n        this.props.onCarouselChanged(selected);\r\n    }\r\n}\r\n\r\nexport default SCarousel;","import SCarousel from './SCarousel';\r\nexport default SCarousel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst SContainer = (props) => {\r\n    let padding = 20;\r\n    if (props.padding !== undefined) padding = props.padding;\r\n     \r\n    return(\r\n        <div style={{\r\n            border: '1px solid #E0E0E0',\r\n            borderRadius: '3px',\r\n            boxShadow: '3px 3px 10px -3px #E0E0E0',\r\n            padding: `15px ${padding}px`,\r\n            width: '100%'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SContainer;","import SContainer from './SContainer';\r\nexport default SContainer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const options = {\r\n    eye: { \r\n        id: 1,\r\n        name: 'Ojos', \r\n        dbalias: 'eye',\r\n        icon: '/images/other/eye_icon.png' \r\n    },\r\n    hair: { \r\n        id: 2, \r\n        name: 'Cabello', \r\n        dbalias: 'hair',\r\n        icon: '/images/other/hair_icon.png'\r\n    },\r\n    torso: { \r\n        id: 3,\r\n        name: 'Torso', \r\n        dbalias: 'torso',\r\n        icon: '/images/other/torso_icon.png'\r\n    },\r\n};\r\n\r\nexport const eye = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                colorHex: '#62ABDF',\r\n                name: 'Azul'\r\n            },\r\n            brown: {\r\n                id: 2,\r\n                button: 'brown',\r\n                colorHex: '#55392F',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de ojos'\r\n    }\r\n};\r\n\r\nexport const hair = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            black: {\r\n                id: 1,\r\n                button: 'black',\r\n                colorHex: '#030405',\r\n                name: 'Negro'\r\n            },\r\n            blonde: {\r\n                id: 2,\r\n                button: 'blonde',\r\n                colorHex: '#FCD860',\r\n                name: 'Rubio'\r\n            },\r\n            brown: {\r\n                id: 3,\r\n                button: 'brown',\r\n                colorHex: '#9D4427',\r\n                name: 'Café'\r\n            }\r\n        },\r\n        title: 'Color de cabello'\r\n    }\r\n};\r\n\r\nexport const torso = {\r\n    colors: {\r\n        kind: 'rounded',\r\n        name: 'colors',\r\n        options: {\r\n            blue: {\r\n                id: 1,\r\n                button: 'blue',\r\n                colorHex: '#1C3351',\r\n                name: 'Azul'\r\n            },\r\n            green: {\r\n                id: 2,\r\n                button: 'green',\r\n                colorHex: '#279599',\r\n                name: 'Verde'\r\n            },\r\n            purple: {\r\n                id: 3,\r\n                button: 'purple',\r\n                colorHex: '#612747',\r\n                name: 'Morado'\r\n            }\r\n        },\r\n        title: 'Color del torso'\r\n    }\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STACustomizer.module.css';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport { options, eye, hair, torso } from '@data/customizer';\r\n\r\nclass STACustomizer extends Component {\r\n    render() {\r\n        return(\r\n            <SContainer padding={0}>\r\n                <div className={`${styles.container} ${styles.header}`}>\r\n                    <Row noGutters>\r\n                        {this.buildOptions()}\r\n                    </Row>\r\n                </div>                \r\n                {this.buildSections()}\r\n            </SContainer>\r\n        );\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { options, eye, hair, torso, option: 'eye' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onSectionOptionClicked = this.onSectionOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Métodos de construcción de la UI */\r\n    buildOptions() {\r\n        const options = Object.values(this.state.options);\r\n        return options.map(option => {\r\n            let styleClass = `ghost-btn ${styles.btn}`;\r\n            if (option.dbalias === this.state.option)\r\n                styleClass = `${styleClass} ${styles.selected}`;\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={styleClass}\r\n                        name={option.dbalias}\r\n                        onClick={this.onOptionClicked}\r\n                        style={{ \r\n                            backgroundImage: `url(${option.icon})`, \r\n                            backgroundSize: 'contain' }}>                        \r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSections() {\r\n        const { option } = this.state;\r\n        const sections = Object.values(this.state[option]);\r\n        return sections.map((section, i) => {\r\n            return( \r\n                <div className={styles.container} key={i}>\r\n                    <div className={styles.title}>\r\n                        {section.title}\r\n                    </div>\r\n                    <Row noGutters>\r\n                        {this.buildSectionsOptions(section)}\r\n                    </Row>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildSectionsOptions(section) {\r\n        const { kind, name } = section;\r\n        const options = Object.values(section.options);\r\n        return options.map(option => {\r\n            let styleClass = `ghost-btn ${styles.btn} ${styles[kind]}`;\r\n            if (option.selected) styleClass = `${styleClass} ${styles.selected}`;\r\n\r\n            let inStyle = {};\r\n            if (option.colorHex)\r\n                inStyle = { \"--btnColor\": option.colorHex, backgroundColor: option.colorHex };\r\n\r\n            return(\r\n                <Col xs='2' className={styles.col} key={option.id}>\r\n                    <Button\r\n                        className={styleClass}\r\n                        name={`${name}-${option.button}-${option.name}`}\r\n                        onClick={this.onSectionOptionClicked}\r\n                        style={inStyle}>\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n\r\n    /** Eventos */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n\r\n    onSectionOptionClicked(e) {\r\n        const { name } = e.target;\r\n        /** Obtener el nombre de la sección y el nombre del botón */\r\n        const names = name.split('-');\r\n        const section = names[0];\r\n        const sectionOpt = names[1];\r\n        const optionName = names[2];\r\n\r\n        /** Marcar como seleccionado en el estado */\r\n        const { option } = this.state;\r\n        let options = this.state[option];\r\n        let soptions = Object.values(options[section].options);\r\n        soptions.forEach(soption => {\r\n            soption.selected = soption.button === sectionOpt ? true : false;\r\n        });\r\n\r\n        this.setState({ [option]: options });\r\n\r\n        /** Mandar a traer la imagen con las características seleccionadas */\r\n        this.props.onOptionSelected({ \r\n            option, section, selected: optionName \r\n        });\r\n    }\r\n}\r\n\r\nexport default STACustomizer;","import STACustomizer from './STACustomizer';\r\nexport default STACustomizer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STAvatarPanel.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getAvatarVariation, \r\n    getAvatarVariations\r\n} from '@actions/avatar';\r\nimport { getUser, updateUser } from '@actions/user';\r\n\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport STACustomizer from './STACustomizer';\r\n\r\nclass STAvatarPanel extends Component {\r\n    render() {\r\n        let { variations } = this.props;\r\n        variations = variations ? Object.values(variations) : [];\r\n        \r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                <Col className={styles.carousel} sm='12' md='7'>\r\n                    {variations && <SCarousel \r\n                        items={variations}\r\n                        kind='avatar'\r\n                        onCarouselChanged={this.onCarouselChanged} />}\r\n                </Col>\r\n                <Col sm='12' md='5'>\r\n                    <STACustomizer\r\n                        onOptionSelected={this.onOptionSelected} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { current: null, eye: null, hair: null, torso: null };\r\n        this.onCarouselChanged = this.onCarouselChanged.bind(this);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user) this.getVariations();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user && !this.props.variations) \r\n            this.getVariations();\r\n\r\n        if (this.props.variations) {\r\n            const variations = Object.values(this.props.variations);\r\n            if (this.state.current !== variations[0])\r\n                this.setState({ current: variations[0] });\r\n        }\r\n    }\r\n\r\n    /** Métodos extra */\r\n    /** Obtener una variación determinada */\r\n    async getVariation() {\r\n        let state = Object.assign({}, this.state);\r\n        let current = Object.assign({}, state.current);\r\n        delete state.current;\r\n        /** Construir el data para el request */\r\n        const keys = Object.keys(state);\r\n        let data = { id_avatar: current.id_avatar };\r\n        keys.forEach(key => {\r\n            const value = this.state[key];\r\n            if (value) data[key] = value;\r\n        });\r\n        /** Borrar los valores que no se necesitan en current */\r\n        delete current.id;\r\n        delete current.img_path;\r\n        delete current.thumbnail_path;\r\n        data = { ...current, ...data };\r\n        /** Realizar el request para obtener la variación */\r\n        const response = await this.props.getAvatarVariation(data);\r\n        const variationData = response.data;\r\n\r\n        /** Guardar la variación del avatar en el usuario */\r\n        const userData = { \r\n            id: this.props.user.id,\r\n            id_avatar_variation: variationData.id \r\n        };\r\n        await this.props.updateUser(userData, this.props.user.id);\r\n        await this.props.getUser(this.props.user.id); // Actualizar el usuario de manera confiable\r\n    }\r\n\r\n    /** Obtener una variación dependiendo del género */\r\n    async getVariations() {\r\n        const { Avatar_Variation, gender } = this.props.user;\r\n        await this.props.getAvatarVariations(gender, Avatar_Variation);\r\n    }\r\n\r\n    onCarouselChanged(selected) {\r\n        if (selected !== this.state.current)\r\n            this.setState({ current: selected });\r\n    }\r\n\r\n    onOptionSelected(data) {\r\n        /** Actualizar el valor de la opción seleccionada en el estado */\r\n        const { option, section, selected } = data;\r\n        let current = this.state[option];\r\n        if (current) \r\n            current[section] = selected;\r\n        else\r\n            current = { [section]: selected };\r\n        \r\n        this.setState({ [option]: current }, () => {\r\n            this.getVariation();\r\n        });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        variations: state.avatar.variations\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getAvatarVariation,\r\n    getAvatarVariations,\r\n    getUser,\r\n    updateUser\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STAvatarPanel);","import STAvatarPanel from './STAvatarPanel';\r\nexport default STAvatarPanel;","import STLayout from './STLayout';\r\nexport default STLayout;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nconst STLayout = (props) => {\r\n    /** Calcular el tamaño del layout dependiendo del page */\r\n    const xlSize = props.page === 'feedback' ? '10' : '9';\r\n    const mt = props.mt ? props.mt : 62;\r\n\r\n    return(\r\n        <div className={`flex ${styles.outerContainer}`}>\r\n            <Row \r\n                className={`justify-content-center ${styles.rowContainer}`} \r\n                noGutters>\r\n                <Col\r\n                    xs='12' \r\n                    sm='12' \r\n                    md='12' \r\n                    lg='12' \r\n                    xl={xlSize}>\r\n                    <div \r\n                        className={styles.container}\r\n                        style={{ '--mt': `${mt}px`, '--pt': `${props.pt}px` }}>\r\n                        { props.children }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default STLayout;","import SUserHero from './SUserHero';\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SUserHero.module.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL; \r\n\r\nclass SUserHero extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n\r\n                </div>\r\n                <div className={`flex ${styles.userContainer}`}>\r\n                    <Row \r\n                        className={`justify-content-center ${styles.row}`} \r\n                        noGutters>\r\n                        <Col className={`flex ${styles.col}`} xs='12' xl='9'>\r\n                            {\r\n                                user && user.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${user.profile_img}`} />\r\n                                :\r\n                                user && user.thumbnail_alias ?\r\n                                <div \r\n                                    className={`flex ${styles.alias}`}\r\n                                    style={{ backgroundColor: user.color }}>\r\n                                    {user.thumbnail_alias}\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div className={styles.uname}>\r\n                                {user && \r\n                                <span>{user.name} {user.last_name}</span>}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SUserHero;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SProfilePage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setAvatarVariations } from '@actions/avatar';\r\n\r\nimport SInfoPanel from '@components/shared/SInfoPanel';\r\nimport STAvatarPanel from '@components/therapist/STAvatarPanel';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\nclass SProfilePage extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        let role = null;\r\n        if (user) role = user.Role.name;\r\n\r\n        /** Estilos de los botones */\r\n        const base = `ghost-btn ${styles.btn}`;\r\n        const { option } = this.state;\r\n\r\n        const btnAvatar = option === 'avatar' ? `${base} ${styles.selected}` : base;\r\n        const btnInfo = option === 'info' ? `${base} ${styles.selected}` : base;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={user} />\r\n                <STLayout mt={298}>\r\n                    <div className={styles.options}>\r\n                        {\r\n                            role === THERAPIST ?\r\n                            <span className={`flex ${styles.optContainer}`}>\r\n                                <Button\r\n                                    className={btnInfo}\r\n                                    name='info'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Información\r\n                                </Button>\r\n                                <Button\r\n                                    className={btnAvatar}\r\n                                    name='avatar'\r\n                                    onClick={this.onOptionClicked}>\r\n                                    Avatar\r\n                                </Button>\r\n                            </span>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.state.option === 'avatar' ?\r\n                        <STAvatarPanel />\r\n                        :\r\n                        <SInfoPanel user={user} />\r\n                    }\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { option: 'avatar' };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setAvatarVariations(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setAvatarVariations\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SProfilePage);","import SProfilePage from './SProfilePage';\r\nexport default SProfilePage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivity.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createActivitySession, setActivity } from '@actions/activity';\r\nimport { setFullScreen, setModal, setNotification } from '@actions/ui';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPActivity extends Component {\r\n    render() {\r\n        const { activity, id } = this.props;\r\n        if (this.state.session) {\r\n            const path = `/paciente/${id}/actividades/${activity.id}` +\r\n                          `/sesiones/${this.state.session.id}`;\r\n            return <Redirect to={path} push />\r\n        }\r\n\r\n        const date = activity.date_from.split('T')[0];\r\n        const { logo_path } = activity.Activity;\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <img \r\n                    alt=''\r\n                    className={styles.gameImage}\r\n                    src={SERVER_URL + logo_path} />\r\n                <div className={styles.gameContainer}>\r\n                    <div className='flex'>\r\n                        <p className={styles.gameTitle}>\r\n                            { activity.Activity.name }\r\n                        </p>\r\n                        <p style={{ fontWeight: 600, marginBottom: 0 }}>\r\n                            { this.getFormattedDate(date) }\r\n                        </p>\r\n                    </div>\r\n                    {activity.Syntactic_Structure && <p style={{ fontWeight: 600 }}>\r\n                        {activity.Syntactic_Structure.name}\r\n                    </p>}\r\n                    <p className={styles.gameDescription}>\r\n                        { activity.Activity.description }\r\n                    </p>\r\n\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button \r\n                            className={`simple-btn ${styles.btn}`}\r\n                            onClick={this.onTutorialClicked}>\r\n                            Tutorial\r\n                        </Button>\r\n                        <Button \r\n                            className={`${styles.btn} pdf-btn`}\r\n                            onClick={this.onPlayClicked}>\r\n                            { \r\n                                this.state.loading ? \r\n                                <Spinner color='light' size='sm' />\r\n                                :\r\n                                <span>Jugar</span>\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false,\r\n          session: null, \r\n        };\r\n\r\n        this.onPlayClicked = this.onPlayClicked.bind(this);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    async onPlayClicked() {\r\n        this.setState({ loading: true });\r\n        /** Crear una nueva sesión de juego */\r\n        const { activity } = this.props;\r\n        const response = await this.props.createActivitySession(activity.id);\r\n        const { data, error, message } = response;\r\n\r\n        this.setState({ loading: false });\r\n        if (error)\r\n            this.props.setNotification({ error, message, slide: true });\r\n        else {\r\n            this.setState({ session: data }, () => {\r\n                this.props.setActivity(activity);\r\n                this.props.setFullScreen(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    onTutorialClicked() {\r\n        const { tutorial_path } = this.props.activity.Mechanic;\r\n        const modal = {\r\n            title: 'Video tutorial',\r\n            type: 'video',\r\n            videoUrl: tutorial_path\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createActivitySession,\r\n    setActivity,\r\n    setFullScreen,\r\n    setModal,\r\n    setNotification,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPActivity);","import SPactivity from './SPActivity';\r\nexport default SPactivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintianer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLayout.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SPLayout extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n        \r\n        return(\r\n            <div className={`flex ${styles.outerContainer}`}>\r\n                <Row className={styles.rowContainer} noGutters>\r\n                    <Col\r\n                        xs='12' \r\n                        sm='12' \r\n                        md={{ size: 7, offset: 5 }}\r\n                        style={{ '--vOffset': `${vOffset}px` }}>\r\n                        <div className={styles.container}>\r\n                            { this.props.children }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SPLayout);","import SPLayout from './SPLayout';\r\nexport default SPLayout;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const messages = {\r\n    activities: [\r\n        'Elige la opción jugar de una de las actividades ' +\r\n        'para comenzar a divertirnos.'\r\n    ],\r\n    collectable: [\r\n        'También puedes cambiar tus puntos por diferentes ' +\r\n        'aspectos. !Colecciónalos todos!'\r\n    ],\r\n    collections: [\r\n        '!Aquí puedes cambiar tus puntos por la colección ' +\r\n        'que más te guste!'        \r\n    ],\r\n    landing: [\r\n        '¡Bienvenido a SATReLO! Es hora de jugar. ' +\r\n        'Para iniciar ingresa tu nombre y clave.',\r\n        '¡Hola! Vamos a divertirnos juntos. Para ' +\r\n        'iniciar ingresa tu nombre y clave.',\r\n    ],\r\n};","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPActivitiesPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPActivity from '@components/patient/SPActivity';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { activities } = messages;\r\n\r\nclass SPActivitiesPage extends Component {\r\n    render() {\r\n        const { pid } = this.props.match.params;\r\n        let { activities } = this.props;\r\n        activities = activities ? Object.values(activities) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <p className={styles.title}>\r\n                    Mis actividades\r\n                </p>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        activities && activities.length > 0 ?\r\n                        activities.map((activity) => {\r\n                            return(\r\n                                <SPActivity\r\n                                    activity={activity}\r\n                                    id={pid} \r\n                                    key={activity.id} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty color='white'>\r\n                            Aún no tienes actividades asignadas...\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.user) {\r\n            /** Enviar mensaje al avatar */\r\n            let message = activities[Math.floor(Math.random() * activities.length)];\r\n            message = `!${this.props.user.name}! ${message}`;\r\n\r\n            if (message !== this.props.avatar.message)\r\n                this.props.setMessage(message);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        avatar: state.avatar,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    setActivities,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPActivitiesPage);","import SPActivitiesPage from './SPActivitiesPage';\r\nexport default SPActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectableInfoPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollectable, setCollectable } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SCarousel from '@components/shared/SCarousel';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collectable } = messages;\r\n\r\nclass SPCollectableInfoPage extends Component {\r\n    render() {\r\n        const { collectable } = this.props;\r\n\r\n        return(\r\n            <SPLayout>\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='light' />\r\n                    :\r\n                    collectable ?\r\n                    <div className={styles.container}>\r\n                        <div className='flex'>\r\n                            <div className={styles.title}>\r\n                                { collectable.name }\r\n                            </div>\r\n                            <div className={`flex ${styles.score}`}>\r\n                                <div>Tienes {this.props.user && this.props.user.score}</div>\r\n                                <img \r\n                                    alt=''\r\n                                    className={styles.scoreIcon}\r\n                                    src='/images/other/star.png' />\r\n                            </div>\r\n                        </div>\r\n                        <SCarousel \r\n                            items={Object.values(collectable.Skins)}\r\n                            onCarouselChanged={this.onCarouselChanged}\r\n                            userId={this.state.userId} />\r\n                        <p className={styles.descriptionTitle}>\r\n                            Resumen\r\n                        </p>\r\n                        <p className={styles.description}>\r\n                            { this.state.currentSkin && \r\n                                this.state.currentSkin.summary }\r\n                        </p>\r\n                    </div>\r\n                    :\r\n                    <SEmpty color='white'>\r\n                        No se encontró información del coleccionable.\r\n                    </SEmpty>\r\n                }\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currentSkin: null, loading: true, userId: null \r\n        };\r\n\r\n        this.onCarouselChanged = this.onCarouselChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collectable[Math.floor(Math.random() * collectable.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectableInfo();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollectable(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectableInfo() {\r\n        this.setState({ loading: true });\r\n        let { id, cid } = this.props.match.params;\r\n\r\n        const response = await this.props.getCollectable(id, cid);\r\n        const { data, error } = response;\r\n        const skins = Object.values(data.Skins);\r\n        const skin = error ? null : skins[0];\r\n\r\n        this.setState({ currentSkin: skin, loading: false });\r\n    }\r\n\r\n    onCarouselChanged(itemSelected) {\r\n        this.setState({ currentSkin: itemSelected });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectable: state.collection.collectable,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollectable,\r\n    setCollectable,\r\n    setMessage,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectableInfoPage);","import SPCollectableInfoPage from './SPCollectableInfoPage';\r\nexport default SPCollectableInfoPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectable.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPatientSkin, setPatientSkins } from '@actions/collection';\r\nimport { updateUser } from '@actions/user';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPCollectable extends Component {\r\n    render() {\r\n        const { userId } = this.props;\r\n        const { collectable } = this.props;\r\n        const { id, id_collection } = collectable;\r\n        const cid = id_collection;\r\n        const { img_path } = collectable.Skins;\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <Link \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    to={`/paciente/${userId}/colecciones/${cid}/coleccionable/${id}`}>\r\n                </Link>\r\n                <img\r\n                    alt='' \r\n                    className={styles.collectableImg}\r\n                    src={SERVER_URL + img_path} />\r\n                <div className={styles.info}>\r\n                    <p className={styles.name}>\r\n                        { collectable.name }\r\n                    </p>\r\n                    <p className={styles.points}>\r\n                        Necesitas { collectable.price } puntos\r\n                    </p>\r\n                </div>\r\n                {\r\n                    collectable.Skins.owned ?\r\n                    <div className={styles.owned}>\r\n                        Adquirido\r\n                    </div>\r\n                    :\r\n                    this.checkPrice() ?\r\n                    <Button \r\n                        className={`primary-btn ${styles.btnBuy}`}\r\n                        onClick={this.onBuyClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='' size='sm' /> \r\n                            : <span>Comprar</span>\r\n                        }\r\n                    </Button>\r\n                    :\r\n                    <div className={styles.cannotBuy}>\r\n                        Aún no puedes comprar este ítem\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n        this.onBuyClicked = this.onBuyClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.userId) this.checkUserSkin();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildData(check) {\r\n        const { collectable } = this.props;\r\n        let data = { \r\n            collectableId: collectable.id,\r\n            collectionId: collectable.id_collection,\r\n            single: true\r\n        };\r\n        if (check) data.skinId = collectable.Skins.id;\r\n        return data;\r\n    }\r\n\r\n    async buySkin(skins) {\r\n        let data = this.buildData(false);\r\n        data.skins = skins;\r\n\r\n        this.setState({ loading: true });\r\n        /** Actualizar el puntaje del usuario para realizar la compra */\r\n        const { collectable, user } = this.props;\r\n        const newScore = user.score - collectable.price;\r\n        await this.props.updateUser({ id: user.id, score: newScore }, user.id);\r\n\r\n        await this.props.setPatientSkins(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    checkPrice() {\r\n        const { collectable, user } = this.props;\r\n        return user.score >= collectable.price;\r\n    }\r\n\r\n    async checkUserSkin() {\r\n        const data = this.buildData(true);\r\n        \r\n        this.setState({ loading: true });\r\n        await this.props.getPatientSkin(this.props.userId, data);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onBuyClicked() {\r\n        const { collectable, user } = this.props;\r\n        if (user.score >= collectable.price) {\r\n            const skin = this.props.collectable.Skins;\r\n            this.buySkin([skin]);\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatientSkin,\r\n    setPatientSkins,\r\n    updateUser,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectable);","import SPCollectable from './SPCollectable';\r\nexport default SPCollectable;","import SPCollection from './SPCollection';\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPCollection.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SPCollectable from './SPCollectable';\r\n\r\nconst SPCollection = (props) => {\r\n    const collectables = Object.values(props.Collectables);\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <p className={styles.title}>\r\n                Colección de {props.name}\r\n            </p>\r\n\r\n            <Row className={styles.rowContainer} noGutters>\r\n                {collectables && collectables.map((collectable) => {\r\n                    return(\r\n                        <Col \r\n                            className={styles.col}\r\n                            sm='12' \r\n                            md='4' \r\n                            key={collectable.id}>\r\n                            <SPCollectable\r\n                                collectable={collectable}\r\n                                userId={props.userId} />\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SPCollection;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPCollectionsPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { getCollections, setCollections } from '@actions/collection';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SPCollection from '@components/patient/SPCollection';\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { collections } = messages;\r\n\r\nclass SPCollectionsPage extends Component {\r\n    render() {\r\n        let { collections } = this.props;\r\n        collections = collections ? Object.values(collections) : [];\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div className={styles.container}>\r\n                    <div className='flex'>\r\n                        <div className={styles.title}>Colecciones</div>\r\n                        <div className={`flex ${styles.score}`}>\r\n                            <div>Tienes {this.props.user && this.props.user.score}</div>\r\n                            <img\r\n                                alt=''\r\n                                className={styles.scoreIcon}\r\n                                src='/images/other/star.png' />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='light' />\r\n                        :\r\n                        collections &&\r\n                        collections.length > 0 ?\r\n                        collections.map((collection) => {\r\n                            return(\r\n                                <SPCollection\r\n                                    {...collection}\r\n                                    key={collection.id}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        :\r\n                        <SEmpty color='white'>\r\n                            No se encontraron colecciones.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, userId: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = collections[Math.floor(Math.random() * collections.length)];\r\n        this.props.setMessage(message);\r\n        \r\n        this.setState({ userId: this.props.match.params.pid }, () => {\r\n            this.getCollectionsList();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCollections(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getCollectionsList() {\r\n        this.setState({ loading: true });\r\n        await this.props.getCollections();\r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collections: state.collection.collections,\r\n        user: state.user.user\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getCollections,\r\n    setCollections,\r\n    setMessage,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPCollectionsPage);","import SPCollectionsPage from './SPCollectionsPage';\r\nexport default SPCollectionsPage;","import SPPassButton from './SPPassButton';\r\nexport default SPPassButton;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './SPPassButton.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SPPassButton = (props) => {\r\n    let btn = props.kind === 'delete' ? styles.btnInv : styles.btn;\r\n    if (props.kind === 'not')\r\n        btn = `${btn} ${styles.bgWhite}`;\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${btn}`}\r\n            onClick={() => {\r\n                if (props.kind === 'delete')\r\n                    props.onDeletePassClicked();\r\n                else if (props.kind === 'select')\r\n                    props.onPassButtonClicked({\r\n                        name: props.name,\r\n                        src: props.src\r\n                    });\r\n            }}\r\n            style={{ cursor: props.kind === 'not' ? 'default' : 'pointer'}}>\r\n            {\r\n                props.kind === 'delete' ?\r\n                <FontAwesomeIcon \r\n                    icon={faTrash}\r\n                    size='2x' \r\n                    style={{ color: 'black' }} />\r\n                :\r\n                !props.src || (props.src && props.src.trim() === '') ?\r\n                <div className={styles.icon} />\r\n                :\r\n                <img\r\n                    alt=''\r\n                    className={styles.icon} \r\n                    src={props.src} />\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default SPPassButton; ","import SPassword from './SPassword';\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPassword.module.css';\r\n\r\nimport SPPassButton from './SPPassButton';\r\n\r\nclass SPassword extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.passwordOptions.map((po) => {\r\n                        return(\r\n                            <SPPassButton\r\n                                key={po.id}\r\n                                {...po}\r\n                                onPassButtonClicked={\r\n                                    this.onPasswordOptionClicked\r\n                                } />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    {this.state.optionsSelected.map((os) => {\r\n                        return(\r\n                            <SPPassButton key={os.id} {...os} />\r\n                        );\r\n                    })}\r\n                    <SPPassButton \r\n                        kind='delete'\r\n                        onDeletePassClicked={this.onDeleteButtonClicked} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passwordOptions: [\r\n                { id: 1, kind: 'select', name: 'árbol', src: '/images/pwd/tree.png' },\r\n                { id: 2, kind: 'select', name: 'corazón', src: '/images/pwd/heart.png' },\r\n                { id: 3, kind: 'select', name: 'flor', src: '/images/pwd/flower.png' },\r\n                { id: 4, kind: 'select', name: 'nube', src: '/images/pwd/cloud.png' },\r\n                { id: 5, kind: 'select', name: 'sol', src: '/images/pwd/sun.png' },\r\n            ],\r\n            optionsSelected: [\r\n                { id: 1, kind: 'not', name: '', src: '' },\r\n                { id: 2, kind: 'not', name: '', src: '' },\r\n                { id: 3, kind: 'not', name: '', src: '' },\r\n                { id: 4, kind: 'not', name: '', src: '' }\r\n            ]\r\n        };\r\n\r\n        this.onDeleteButtonClicked = this.onDeleteButtonClicked.bind(this);\r\n        this.onPasswordOptionClicked = this.onPasswordOptionClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDeleteButtonClicked() {\r\n        let { optionsSelected } = this.state;\r\n        /** Limpiar las asociaciones */\r\n        optionsSelected.forEach(option => {\r\n            option.name = '';\r\n            option.src = '';\r\n        });\r\n        this.setState({ optionsSelected });\r\n    }\r\n\r\n    onPasswordOptionClicked(selected) {\r\n        let { optionsSelected } = this.state;\r\n        /** Asociar el nombre y el src seleccionado */\r\n        let added = false;\r\n        optionsSelected.forEach(option => {\r\n            if (!added && option.name.trim() === '') {\r\n                option.name = selected.name;\r\n                option.src = selected.src;\r\n                added = true;\r\n            }\r\n        });\r\n        this.setState({ optionsSelected }, () => {\r\n            /** Obtener las nombres de las opciones seleccionadas */\r\n            const words = this.state.optionsSelected.filter((option) => {\r\n                return option.name.trim() !== '';\r\n            }).map((option) => { \r\n                return option.name; \r\n            });\r\n            /** Enviar la lista de palabras hacia el componente padre */\r\n            this.props.setPassword(words);\r\n        });\r\n    }\r\n}\r\n\r\nexport default SPassword;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPLogin.module.css';\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport { PATIENT } from '@data/roles';\r\n\r\nimport SPassword from '@components/shared/SPassword';\r\n\r\nclass SPLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a las actividades */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/paciente/${userId}/actividades`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                {this.state.error && <div className={styles.error}>\r\n                    {this.state.error}\r\n                </div>}\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Escribe tu nombre de usuario\r\n                        </Label>\r\n                        <Input\r\n                            bsSize='lg'\r\n                            onChange={this.onInputChanged}\r\n                            placeholder='Por ejemplo, mvsierra' \r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>\r\n                            Marca tu clave\r\n                        </Label>\r\n                        <SPassword setPassword={this.setPassword} />\r\n                        <Button\r\n                            className={`ghost-btn ${styles.btnForgot}`}\r\n                            onClick={this.onForgotClicked}>\r\n                            ¿Olvidaste tu clave?\r\n                        </Button>\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`primary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='light' size='sm' /> \r\n                            : \r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            loading: false,\r\n            password: null,\r\n            userId: null,\r\n            username: ''\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onForgotClicked = this.onForgotClicked.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onInputChanged(e) {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    onForgotClicked(e) {\r\n        e.preventDefault();\r\n        const modal = {\r\n            title: 'Recuperación de la clave',\r\n            type: 'forgot_password',\r\n            role: 1,\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, PATIENT);\r\n        let { error, message, userId } = response;\r\n        if (error) error = message;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password) {\r\n                if (password.length === 4)\r\n                    this.onLogin(username, password.join());\r\n                else\r\n                    this.setState({ error: 'La clave debe tener 4 elementos'});\r\n            }\r\n            else\r\n                this.setState({\r\n                    error: 'El usuario y la clave son obligatorios'\r\n                });\r\n        }\r\n    }\r\n\r\n    setPassword(words) {\r\n        this.setState({ password: words });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login,\r\n    setModal\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SPLogin);","import SPLogin from './SPLogin';\r\nexport default SPLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMessage } from '@actions/avatar';\r\nimport { \r\n    setBar,\r\n    setParallax, \r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport SPLayout from '@components/layout/SPLayout';\r\nimport SPLogin from '@components/patient/SPLogin';\r\n\r\nimport { messages } from '@data/messages';\r\nconst { landing } = messages;\r\n\r\n/** Página Landing del paciente */\r\nclass SPLandingPage extends Component {\r\n    render() {\r\n        const vOffset = this.props.ui.vOffset + 60;\r\n\r\n        return(\r\n            <SPLayout>\r\n                <div \r\n                    className='flex' \r\n                    style={{\r\n                        alignItems: 'center',\r\n                        height: `calc(100vh - ${vOffset}px)`,\r\n                        justifyContent: 'center' \r\n                    }}>\r\n                    <SPLogin />\r\n                </div>\r\n            </SPLayout>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Enviar mensaje al avatar */\r\n        const message = landing[Math.floor(Math.random() * landing.length)];\r\n        this.props.setMessage(message);\r\n\r\n        this.props.setBar('patient');\r\n        this.props.setParallax(true);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(true);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setMessage,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPLandingPage);","import SPLandingPage from './SPLandingPage';\r\nexport default SPLandingPage;","import SFullScreen from './SFullScreen';\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass SFullScreen extends Component {\r\n    render() {\r\n        return(\r\n            <div \r\n                onKeyDown={this.onKeyHandler}\r\n                ref={this.fullRef}\r\n                tabIndex={0}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fullScreen: false };\r\n        this.fullRef = React.createRef();\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onKeyHandler = this.onKeyHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('fullscreenchange', this.onClosed);\r\n        document.addEventListener('mozfullscreenchange', this.onClosed);\r\n        document.addEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.fullScreen !== this.state.fullScreen) {\r\n            if (this.props.fullScreen)\r\n                this.enterFullScreen();\r\n            else\r\n                this.exitFullScreen();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('fullscreenchange', this.onClosed);\r\n        document.removeEventListener('mozfullscreenchange', this.onClosed);\r\n        document.removeEventListener('webkitfullscreenchange', this.onClosed);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async enterFullScreen() {\r\n        if (this.fullRef.current.requestFullRequest) {\r\n            await this.fullRef.current.requestFullRequest();\r\n        }\r\n        else if (this.fullRef.current.mozRequestFullScreen) {\r\n            await this.fullRef.current.mozRequestFullScreen();\r\n        }\r\n        else if (this.fullRef.current.webkitRequestFullScreen) {\r\n            await this.fullRef.current.webkitRequestFullScreen();\r\n        }\r\n\r\n        this.setState({ fullScreen: true });\r\n        this.props.onChange(true);\r\n    }\r\n\r\n    async exitFullScreen() {\r\n        const isFull = document.fullscreenElement || \r\n                       document.mozFullScreenElement ||\r\n                       document.webkitFullScreenElement;\r\n        \r\n        if (isFull) {\r\n            if (document.exitFullscreen) {\r\n                await document.exitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                await document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullScreen) {\r\n                await document.webkitExitFullScreen();\r\n            }\r\n        }\r\n\r\n        this.setState({ fullScreen: false });\r\n        this.props.onChange(false);\r\n    }\r\n\r\n    onClosed() {\r\n        const full = document.fullscreenElement ||\r\n                     document.mozFullScreenElement ||\r\n                     document.webkitFullScreenElement;\r\n        if (!full && this.state.fullScreen)\r\n            this.props.onClosed();\r\n    }\r\n\r\n    onKeyHandler(event) {\r\n        if (event.keyCode === 8) event.preventDefault();\r\n    }\r\n}\r\n\r\nexport default SFullScreen;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SPPlayPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport SFullScreen from '@components/shared/SFullScreen';\r\nimport { getActivity, updateActivitySession } from '@actions/activity';\r\nimport { setFullScreen, setModal, showAvatar } from '@actions/ui';\r\nimport { getUser } from '@actions/user';\r\n\r\nconst FILE_SERVER_URL = process.env.REACT_APP_FILE_SERVER;\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SPPlayPage extends Component { \r\n    render() {        \r\n        const { activity, user } = this.props;\r\n        let gamePath = null;\r\n        if (activity && user) {\r\n            const { sid } = this.props.match.params;\r\n            const { build_path } = activity;\r\n            gamePath = `${FILE_SERVER_URL}/${build_path}/index.html` +\r\n                        `?portal=paciente` +\r\n                        `&session=${sid}` +\r\n                        `&score=${user.score}` +\r\n                        `&token=${this.props.auth.pacienteToken}` +\r\n                        `&file_server=${FILE_SERVER_URL}` + \r\n                        `&server=${SERVER_URL}`;\r\n            \r\n            // Agregar al path el avatar asociado al terapeuta\r\n            if (user.Therapists) {\r\n                const therapists = Object.values(user.Therapists);\r\n                if (therapists.length > 0) {\r\n                    const avatarURL = therapists[0].Avatar_Variation.img_path;\r\n                    gamePath += `&avatar=${avatarURL}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return(\r\n            <SFullScreen\r\n                fullScreen={this.props.ui.fullScreen}\r\n                onClosed={this.onClosed}\r\n                onChange={this.onChange}>\r\n                <div className={`flex ${styles.container}`}> \r\n                    <iframe \r\n                        height={window.outerHeight}\r\n                        src={gamePath}\r\n                        title='game'\r\n                        width={window.outerWidth}></iframe>\r\n                </div>\r\n            </SFullScreen>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClosed = this.onClosed.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.ui.fullScreen) this.redirectBack();\r\n\r\n        this.hideAvatar();\r\n        if (this.props.activity === null) {\r\n            const { aid } = this.props.match.params\r\n            this.props.getActivity(aid);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.hideAvatar();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.showAvatar(true);\r\n\r\n        /** Guardar fecha y hora de finalización de la sesión */\r\n        const { sid } = this.props.match.params;\r\n        const session = { date_end: new Date(), id: sid };\r\n        this.props.updateActivitySession(session);\r\n        \r\n        /** Abrir modal para enviar un comentario */\r\n        const modal = {\r\n          title: 'Comenta sobre el desempeño del paciente en el juego',\r\n          type: 'new_comment',\r\n          session: sid\r\n        };\r\n        this.props.setModal(modal);\r\n\r\n        /** Actualizar el usuario para ver reflejado el cambio del puntaje */\r\n        const { user } = this.props;\r\n        this.props.getUser(user.id);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    hideAvatar() {\r\n        if (this.props.ui.showAvatar)\r\n            this.props.showAvatar(false);\r\n    }\r\n\r\n    onClosed() {\r\n        this.redirectBack();\r\n    }\r\n\r\n    onChange(fullScreen) {\r\n        if (!fullScreen) this.redirectBack();\r\n    }\r\n\r\n    redirectBack() {\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    getUser,\r\n    setFullScreen,\r\n    setModal,\r\n    showAvatar,\r\n    updateActivitySession,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        auth: state.auth,\r\n        ui: state.ui,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SPPlayPage);","import SPPlayPage from './SPPlayPage';\r\nexport default SPPlayPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Crear la asociación entre un terapeuta y un paciente */\r\nexport const createPatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient`;\r\n\r\n    try {\r\n        const response = await axios.post(url, { data: { pid: patientId }});\r\n        const { data: { data, message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = data[patientId];\r\n            dispatch({ \r\n                type: SET_PATIENT,\r\n                payload: { association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener la informaión de único paciente por medio de su id */\r\nexport const getPatient = (id) => async (dispatch) => {\r\n    const url = `${apiURL}/user/${id}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status}} = response;\r\n\r\n        const patient = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_SELECTED_PATIENT, \r\n            payload: { patient }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener pacientes */\r\nexport const getPatients = (userId = null, query = null) => async (dispatch) => {\r\n    let url = userId ? \r\n                /** Pacientes de un usuario terapeuta */\r\n                `${apiURL}/therapist/${userId}/patient`\r\n                :\r\n                /** Todos los pacientes */\r\n                `${apiURL}/patient`; \r\n    \r\n    if (query)\r\n        url = `${url}?search=${query}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const patients = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_PATIENTS, \r\n            payload: { patients }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }  \r\n}\r\n\r\n/** Remover la asociación entre un terapeuta y un paciente */\r\nexport const removePatient = (therapistId, patientId) => async (dispatch) => {\r\n    const url = `${apiURL}/therapist/${therapistId}/patient/${patientId}`;\r\n\r\n    try {\r\n        const response = await axios.delete(url);\r\n        const { data: { message, status }} = response;\r\n        const error = status !== 200;\r\n\r\n        if (status === 200) {\r\n            const association = {\r\n                _id_therapist: therapistId,\r\n                _id_patient: patientId,\r\n            }\r\n            dispatch({ \r\n                type: REMOVE_PATIENT, \r\n                payload: { _association: association }\r\n            });\r\n        }\r\n        \r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const setPatient = (patient) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_SELECTED_PATIENT, \r\n        payload: { patient }\r\n    });\r\n}\r\n\r\nexport const setPatients = (patients) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_PATIENTS,\r\n        payload: { patients }\r\n    });\r\n}","/**\r\n * @author Martin Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivityButtons.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentAlt, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport  { removeActivity, updateActivity } from '@actions/activity';\r\nimport { setModal, setNotification } from '@actions/ui';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STActivityButtons extends Component {\r\n    render() {\r\n        const { Activities_Sessions } = this.props.activity;\r\n        const sessions = Object.values(Activities_Sessions);\r\n\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <Button\r\n                    className={`pdf-btn ${styles.btn}`}\r\n                    onClick={this.onPDFClicked}\r\n                    size='sm'>\r\n                    PDF Ficha\r\n                </Button>\r\n                <div className='flex'>\r\n                    <Button \r\n                        className={`ghost-btn ${styles.comments} ${styles.mr}`}\r\n                        onClick={this.onCommentsClicked}\r\n                        size='sm'>\r\n                        <FontAwesomeIcon \r\n                            icon={faCommentAlt} size='2x' />\r\n                    </Button>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        onClick={this.onTutorialClicked}\r\n                        size='sm'>\r\n                        Tutorial\r\n                    </Button>\r\n                    <Button\r\n                        className={`simple-btn ${styles.btn} ${styles.ml}`}\r\n                        onClick={this.onReassignClicked}\r\n                        size='sm'>\r\n                        Reasignar\r\n                    </Button>\r\n                    {sessions.length === 0 && <Button\r\n                        className={`ghost-btn ${styles.delete} ${styles.ml}`}\r\n                        onClick={this.onDeleteClicked}\r\n                        size='sm'>\r\n                        <FontAwesomeIcon \r\n                            icon={faTimesCircle} size='2x' />\r\n                    </Button>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCommentsClicked = this.onCommentsClicked.bind(this);\r\n        this.onDeleteClicked = this.onDeleteClicked.bind(this);\r\n        this.onPDFClicked = this.onPDFClicked.bind(this);\r\n        this.onReassignClicked = this.onReassignClicked.bind(this);\r\n        this.onTutorialClicked = this.onTutorialClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onCommentsClicked() {\r\n        const modal = {\r\n            title: 'Comentarios',\r\n            type: 'comments',\r\n            data: this.props.activity.Activities_Sessions\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onDeleteClicked() {\r\n        const { id } = this.props.activity;\r\n        const response = await this.props.removeActivity(id);\r\n        const { error, message } = response;\r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onPDFClicked() {\r\n        const { pdf_path } = this.props.activity.Mechanic;\r\n        const file = `${serverURL}${pdf_path}`;\r\n        window.open(file);\r\n    }\r\n\r\n    async onReassignClicked() {\r\n        const { id } = this.props.activity;\r\n        const today = new Date();\r\n        let weekLater = new Date();\r\n        weekLater.setDate(weekLater.getDate() + 7);\r\n        const activityData = {\r\n            id,\r\n            date_from: today,\r\n            date_to: weekLater\r\n        };\r\n        const response = await this.props.updateActivity(activityData);\r\n        const { error, message } = response;\r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onTutorialClicked() {\r\n        const { tutorial_path } = this.props.activity.Mechanic;\r\n        let modal = { \r\n            title: 'Video tutorial', \r\n            type: 'video',\r\n            videoUrl: tutorial_path,\r\n        }\r\n        this.props.setModal(modal);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    removeActivity,\r\n    setModal,\r\n    setNotification,\r\n    updateActivity,\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STActivityButtons);","import STActivityButtons from './STActivityButtons';\r\nexport default STActivityButtons;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst structures = {\r\n    1: { letter: 'S', color: '#FF7043' },\r\n    2: { letter: 'AD', color: '#42A5F5' },\r\n    3: { letter: 'V', color: '#26A69A' }\r\n}\r\n\r\nconst SSyntacticCircle = (props) => {\r\n    const sid = props.id;\r\n    const structure = structures[sid];\r\n\r\n    let bgColor = 'darkgray';\r\n    if (structure.letter === props.letter)\r\n        bgColor = structure.color;\r\n\r\n    return(\r\n        <div style={{\r\n            alignItems: 'center',\r\n            backgroundColor: `${bgColor}`,\r\n            borderRadius: '50%',\r\n            color: 'white',\r\n            display: 'flex',\r\n            fontWeight: '600',\r\n            height: 37,\r\n            justifyContent: 'center',\r\n            width: 37\r\n        }}>\r\n            {props.letter}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SSyntacticCircle;","import STSyntacticCircle from './SSyntacticCircle';\r\nexport default STSyntacticCircle;","import STActivity from './STActivity';\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivity.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFormattedDate } from '@utils/date&time';\r\n\r\nimport STActivityButtons from './STActivityButtons';\r\nimport STSynctaticCircle from './STSyntacticCircle';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STActivity extends Component {\r\n    render() {\r\n        const aid = this.props.activity.id;\r\n        const date = this.props.activity.date_from.split('T')[0];\r\n        const sid = this.props.activity.Syntactic_Structure ? \r\n                    this.props.activity.Syntactic_Structure.id : null;\r\n\r\n        const { pid, tid } = this.props;\r\n\r\n        const { logo_path } = this.props.activity.Activity;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <img\r\n                        alt=''\r\n                        className={styles.aimage}\r\n                        src={SERVER_URL + logo_path} />\r\n                    <div className={styles.rightContainer}>\r\n                        <div className={`flex ${styles.nameContainer}`}>\r\n                            <div className={styles.title}>\r\n                                { this.props.activity.Activity.name }\r\n                            </div>\r\n                            <div className={styles.date}>\r\n                                { this.getFormattedDate(date) }\r\n                            </div>\r\n                        </div>\r\n                        {sid && <div className={`flex ${styles.syntContainer}`}>\r\n                                <STSynctaticCircle letter='S' id={sid} />\r\n                                <STSynctaticCircle letter='AD' id={sid} />\r\n                                <STSynctaticCircle letter='V' id={sid} />\r\n                            </div>\r\n                        }\r\n                        <div className={styles.description}>\r\n                            { this.props.activity.Activity.description }\r\n                        </div>\r\n                        <Link \r\n                            to={\r\n                                `/terapeuta/${tid}/pacientes/${pid}/` + \r\n                                `actividades/${aid}/evolución`\r\n                            }\r\n                            className={`ghost-btn ${styles.btnEvolution}`}>\r\n                            Ver evolución\r\n                        </Link>\r\n                        <STActivityButtons activity={this.props.activity} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getFormattedDate = (date) => {\r\n        return getFormattedDate(date);\r\n    }\r\n}\r\n\r\nexport default STActivity;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STActivitiesPage.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getActivities, setActivities } from '@actions/activity';\r\nimport { getPatient, setPatient } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport STActivity from '@components/therapist/STActivity';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport SUserHero from '@components/shared/SUserHero';\r\n\r\nclass STActivitiesPage extends Component {\r\n    render() {\r\n        let { activities, patient, user } = this.props;\r\n        const id = user ? user.id : null;\r\n        const pid = patient ? patient.id : null;\r\n\r\n        activities = activities ? Object.values(activities) : [];\r\n        \r\n        /** Obtener ids del route path */\r\n        const { tid } = this.props.match.params;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <SUserHero user={patient} />\r\n                <STLayout pt={0} mt={298}>\r\n                    <div className={`flex ${styles.titleContainer}`}>\r\n                        <div className={styles.title}>\r\n                            Actividades asignadas\r\n                        </div>\r\n                        <div className={`flex ${styles.btnContainer}`}>\r\n                            <Link\r\n                                className={styles.link}\r\n                                to={\r\n                                    `/terapeuta/${tid}/pacientes/${pid}` +\r\n                                    `/actividades/histórico`\r\n                                }>\r\n                                <Button \r\n                                    className={`primary-btn left ${styles.btn}`}>\r\n                                    Histórico\r\n                                </Button>\r\n                            </Link>\r\n                            <Link\r\n                                className={styles.link}\r\n                                to={`/terapeuta/${id}/pacientes/${pid}/configuracion`}>\r\n                                <Button className={`secondary-btn ${styles.btn}`}>\r\n                                    Agregar actividad\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.listContainer}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <SSpinner color='primary' />\r\n                            :\r\n                            activities && activities.length > 0 ?\r\n                            activities.map((activity) => {\r\n                                return(\r\n                                    <STActivity\r\n                                        activity={activity} \r\n                                        key={activity.id}\r\n                                        pid={pid}\r\n                                        tid={tid} />\r\n                                );\r\n                            })\r\n                            :\r\n                            <SEmpty>\r\n                                Este paciente aún no tiene actividades asignadas.\r\n                                Recuerda que puedes asignarle una actividad\r\n                                seleccionando la opción Agregar actividad.\r\n                            </SEmpty>\r\n                        }\r\n                    </div>\r\n                </STLayout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { pid } = this.props.match.params;\r\n        /** Obtener las actividades del paciente */\r\n        this.setState({ loading: true });\r\n        await this.props.getActivities(pid);        \r\n        this.setState({ loading: false });\r\n        \r\n        /** Obtener la información del paciente */\r\n        await this.props.getPatient(pid);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivities(null);\r\n        this.props.setPatient(null);\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activities: state.activity.activities,\r\n        patient: state.patient.patient,\r\n        user: state.user.user,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivities,\r\n    getPatient,\r\n    setActivities,\r\n    setPatient\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STActivitiesPage);","import STActivitiesPage from './STActivitiesPage';\r\nexport default STActivitiesPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STOption.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst STOption = (props) => {\r\n    const selected = props.option.selected ? styles.selected : '';\r\n\r\n    return(\r\n        <Button \r\n            className={`ghost-btn ${styles.container}`}\r\n            onClick={() => {\r\n                onOptionClicked(props);\r\n            }}>\r\n            <div className={`flex ${styles.inner} ${selected}`}>\r\n                <div className={styles.name}>\r\n                    { props.option.name }\r\n                </div>\r\n                <FontAwesomeIcon\r\n                    icon={faCheckCircle}\r\n                    size='2x' />\r\n            </div>\r\n        </Button>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionClicked = (props) => {\r\n    props.onOptionSelected(props.option);\r\n}\r\n\r\nexport default STOption;","import STOption from './STOption';\r\nexport default STOption;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './STField.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STOption from './STOption';\r\n\r\nconst STField = (props) => {\r\n    let { options } = props;\r\n    options = options ? Object.values(options) : [];\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>\r\n                { props.title }\r\n            </div>\r\n            <div className={styles.subtitle}>\r\n                { props.subtitle }\r\n            </div>\r\n            {\r\n                props.loading ?\r\n                <SSpinner color='primary' />\r\n                :\r\n                options && options.length > 0 ?\r\n                <Row className={styles.optionRow} noGutters>\r\n                    {options.map(option => {\r\n                        return(\r\n                            <Col\r\n                                className={styles.optionCol}\r\n                                key={option.id} \r\n                                sm={{ size: 12 }}\r\n                                md={{ size: 4 }}>\r\n                                <STOption\r\n                                    onOptionSelected={(option) => {\r\n                                        onOptionSelected(props, option);\r\n                                    }} \r\n                                    option={option} />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row> \r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n/** Métodos extra */\r\nconst onOptionSelected = (props, option) => {\r\n    props.onOptionSelected(option);\r\n}\r\n\r\nexport default STField;","import STField from './STField';\r\nexport default STField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions\r\n} from '@actions/dynamic';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STDynamicField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props} \r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar configuraciones y selecciones */\r\n        const fields = [\r\n            'mechanic',\r\n            'situations',\r\n            'times',\r\n            'reader'\r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetDynamicOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildDynamic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetDynamicOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        /** Setear la opción seleccionada */\r\n        this.props.setDynamicSelectedOptions({\r\n            fieldId: this.props.id,\r\n            optionId: option.id\r\n        });\r\n\r\n        /** Obtener las opciones del siguiente field */\r\n        if (this.props.next) {\r\n            let data = { fieldId: this.props.next };\r\n            /** \r\n             * Verificar si el siguiente field requiere los ids\r\n             * de las opciones elegidas anteriormente\r\n             */\r\n            const field = this.props.dynamic[this.props.next];\r\n            if (field.required) {\r\n                const requiredIds = this.getRequiredIds(field.required);\r\n                data.required = requiredIds;\r\n            }\r\n\r\n            this.getOptions(data);\r\n        }\r\n        else\r\n            this.props.showCreateActivityButton(true);\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getDynamicOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.dynamic[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildDynamic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getDynamicOptions,\r\n    resetDynamicOptions,\r\n    setDynamicSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STDynamicField);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS,\r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener las opciones para un field en particular */\r\nexport const getDynamicOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    if (fieldId === 'mechanic' || fieldId === 'situations') {\r\n        let url = `${apiURL}`;\r\n        if (fieldId === 'mechanic') {\r\n            url = `${url}/dynamic/mechanics`;\r\n        }\r\n        else {\r\n            const { mechanicId } = fieldData.required;\r\n            url = `${url}/dynamic/mechanics/${mechanicId}/situations`;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_DYNAMIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };                            \r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n    else { \r\n        let options;\r\n        if (fieldId === 'times') {\r\n            options = {\r\n                1: { id: 1, name: 'Presente' },\r\n                /*2: { id: 2, name: 'Pasado' },\r\n                3: { id: 3, name: 'Futuro' }*/\r\n            };\r\n        }\r\n        else if (fieldId === 'reader') {\r\n            options = {\r\n                1: { id: 1, name: 'Si' },\r\n                2: { id: 2, name: 'No' }\r\n            };\r\n        }\r\n\r\n        dispatch({\r\n            type: SET_DYNAMIC_OPTIONS,\r\n            payload: { fieldId, options }\r\n        });\r\n    }\r\n}\r\n\r\n/** Resetear las opciones seleccionadas */\r\nexport const resetDynamicOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_DYNAMIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Setear las opciones seleccionadas */\r\nexport const setDynamicSelectedOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_DYNAMIC_SELECTED_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}","import STDynamicField from './STDynamicField';\r\nexport default STDynamicField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STDynamicField from './STDynamicField';\r\n\r\nclass STDynamic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STDynamicField {...this.props.dynamic.mechanic} />\r\n                <STDynamicField {...this.props.dynamic.situations} />\r\n                <STDynamicField {...this.props.dynamic.times} />\r\n                <STDynamicField {...this.props.dynamic.reader} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STDynamic);","import STDynamic from './STDynamic';\r\nexport default STDynamic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_STATIC_SELECTED_OPTION,\r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Agregar una opción seleccionada (solo para multichoice) */\r\nexport const addStaticSelectedOption = (fieldData) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_STATIC_SELECTED_OPTION,\r\n        payload: fieldData\r\n    });\r\n}\r\n\r\n/** Obtener la información de las siguientes opciones */\r\nexport const getStaticOptions = (fieldData) => async (dispatch) => {\r\n    const { fieldId } = fieldData;\r\n\r\n    let url = null;\r\n    if (fieldId === 'category')\r\n        url = `${apiURL}/static/categories`\r\n\r\n    else if (fieldId === 'subcategory') {\r\n        const { categoryId } = fieldData.required;\r\n        url = `${apiURL}/static/categories/${categoryId}/subcategories`;\r\n    }\r\n\r\n    else if (fieldId === 'sintactic')\r\n        url = `${apiURL}/static/structures`;\r\n        \r\n    else if (fieldId === 'vocabulary' || fieldId === 'mechanic') {\r\n        const { subcategoryId, sintacticId } = fieldData.required;\r\n        const sid = subcategoryId;\r\n        const stid = sintacticId;\r\n        url = `${apiURL}/static/subcategories/${sid}/structures/${stid}`;\r\n\r\n        if (fieldId === 'vocabulary')\r\n            url = `${url}/vocabularies`;\r\n        else\r\n            url = `${url}/mechanics`;\r\n    }\r\n    \r\n    if (url) {\r\n        /** Realizar el request */\r\n        try {\r\n            const response = await axios.get(url);\r\n            const { data: { data, message, status }} = response;\r\n\r\n            const options = status === 200 ? data : null;\r\n            const error = status !== 200;\r\n\r\n            dispatch({\r\n                type: SET_STATIC_OPTIONS,\r\n                payload: { fieldId, options }\r\n            });\r\n\r\n            return { error, message };\r\n        }\r\n        catch (err) {\r\n            return { error: true, message: err };\r\n        }\r\n    }\r\n}\r\n\r\n/** Resetear las opciones */\r\nexport const resetStaticOptions = (fieldData) => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_STATIC_OPTIONS, \r\n        payload: fieldData \r\n    });\r\n}\r\n\r\n/** Marcar como opción seleccionada */\r\nexport const setStaticSelectedOptions = (optionData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_STATIC_SELECTED_OPTIONS, \r\n        payload: optionData \r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions, \r\n    setStaticSelectedOptions\r\n} from '@actions/static';\r\nimport {\r\n    showCreateActivityButton\r\n} from '@actions/ui';\r\n\r\nimport STField from '@components/therapist/STField';\r\n\r\nclass STStaticField extends Component {\r\n    render() {\r\n        return(\r\n            <STField \r\n                {...this.props}\r\n                onOptionSelected={this.onOptionSelected} />\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Obtener las opciones si es el primer field */\r\n        if (this.props.first)\r\n            this.getOptions({ fieldId: this.props.id });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        /** Limpiar todas las opciones y selecciones configuradas */\r\n        const fields = [ \r\n            'category', \r\n            'subcategory', \r\n            'sintactic', \r\n            'vocabulary',\r\n            'mechanic' \r\n        ];\r\n        fields.forEach(field => {\r\n            this.props.resetStaticOptions({ fieldId: field });\r\n        });\r\n        \r\n        this.props.showCreateActivityButton(false);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildStatic(option) {\r\n        /** Resetear las opciones relacionadas */\r\n        const { reset } = this.props;\r\n        if (reset)\r\n            reset.forEach(r => {\r\n                this.props.resetStaticOptions({ fieldId: r });\r\n            });\r\n        \r\n        /** Esconder el botón encargado de mandar a crear la actividad */\r\n        this.props.showCreateActivityButton(false);\r\n\r\n        let getNextOptions = true;\r\n        if (this.props.multichoice) {\r\n            /** Adicionar opciones seleccionadas */\r\n            this.props.addStaticSelectedOption({\r\n                fieldId: this.props.id,\r\n                optionId: option.id\r\n            });\r\n\r\n            getNextOptions = this.checkMinimun();\r\n        }\r\n        else {\r\n            /** Setear opciones como seleccionadas */\r\n            this.props.setStaticSelectedOptions({ \r\n                fieldId: this.props.id, \r\n                optionId: option.id \r\n            });\r\n        }\r\n\r\n        /** Pedir la información del siguiente field */\r\n        if (getNextOptions) {\r\n            if (this.props.next) {\r\n                let data = { fieldId: this.props.next };\r\n                /** \r\n                 * Verificar si el próximo field requiere ids\r\n                 * de las opciones elegidas\r\n                 */\r\n                const field = this.props.static[this.props.next];\r\n                if (field.required) {\r\n                    const requiredIds = this.getRequiredIds(field.required);\r\n                    data.required = requiredIds;\r\n                }\r\n                \r\n                this.getOptions(data);\r\n            }\r\n            else\r\n                this.props.showCreateActivityButton(true);\r\n        }\r\n    }\r\n\r\n    /** Chequear si se cumple el mínimo de selecciones necesarias */\r\n    checkMinimun() {\r\n        let { options } = this.props;\r\n        options = Object.values(options);\r\n        let selected = 0;\r\n        options.forEach(option => {\r\n            if (option.selected) selected += 1;\r\n        });\r\n\r\n        return selected >= this.props.minimum;\r\n    }\r\n\r\n    async getOptions(data) {\r\n        await this.props.getStaticOptions(data);\r\n    }\r\n\r\n    /** Obtener los ids de los fields requeridos */\r\n    getRequiredIds(required) {\r\n        let rIds = {};\r\n        required.forEach(r => {\r\n            const rField = this.props.static[r];\r\n            const options = Object.values(rField.options);\r\n            options.forEach(option => {\r\n                if (option.selected)\r\n                    rIds[`${rField.id}Id`] = option.id;\r\n            });\r\n        });\r\n\r\n        return rIds;\r\n    }\r\n\r\n    onOptionSelected(option) {\r\n        this.buildStatic(option);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    addStaticSelectedOption,\r\n    getStaticOptions,\r\n    resetStaticOptions,\r\n    setStaticSelectedOptions,\r\n    showCreateActivityButton,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STStaticField);","import STStaticField from './STStaticField';\r\nexport default STStaticField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STStaticField from './STStaticField';\r\n\r\nclass STStatic extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <STStaticField {...this.props.static.category} />\r\n                <STStaticField {...this.props.static.subcategory} />\r\n                <STStaticField {...this.props.static.sintactic} />\r\n                <STStaticField {...this.props.static.vocabulary} />\r\n                <STStaticField {...this.props.static.mechanic} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        static: state.static,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STStatic);","import STStatic from './STStatic';\r\nexport default STStatic;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STConfigurationPage.module.css';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createActivity } from '@actions/activity';\r\nimport {\r\n    buildConfiguration,\r\n    resetConfiguration\r\n} from '@actions/configuration';\r\nimport { getPatient } from '@actions/patient';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport STDynamic from '@components/therapist/STDynamic';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STStatic from '@components/therapist/STStatic';\r\n\r\nclass STConfigurationPage extends Component {\r\n    render() {\r\n        if (this.state.redirect) {\r\n            const { tid, pid } = this.props.match.params;\r\n            const url = `/terapeuta/${tid}/pacientes/${pid}/actividades`;\r\n            return <Redirect to={url} push />\r\n        }\r\n\r\n        /** Definir las clases para los botones */\r\n        const buttonStatic = `primary-btn-outline left ${styles.btn} \r\n                                ${this.state.option === 'static' ?\r\n                                styles.btnSelected : ''}`;\r\n\r\n        const buttonDynamic = `primary-btn-outline ${styles.btn} \r\n                                ${this.state.option === 'dynamic' ? \r\n                                styles.btnSelected : ''}`;\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>\r\n                    Configurar una nueva actividad\r\n                </div>\r\n                <div className={`flex ${styles.btnContainer}`}>\r\n                    <Button\r\n                        className={buttonStatic}\r\n                        color='primary'\r\n                        name='static'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción estática\r\n                    </Button>\r\n                    <Button\r\n                        className={buttonDynamic}\r\n                        color='primary'\r\n                        name='dynamic'\r\n                        onClick={this.onOptionClicked}\r\n                        outline>\r\n                        Descripción dinámica\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    {\r\n                        this.state.option === 'static' ?\r\n                        <STStatic />\r\n                        :\r\n                        <STDynamic />\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.ui.showCreateActivityButton ?\r\n                    <div className={styles.createContainer}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.create}`}\r\n                            onClick={this.onCreateActivityClicked}>\r\n                            {\r\n                                this.state.loading ?\r\n                                <Spinner color='dark' size='sm' />\r\n                                :\r\n                                <span>Crear actividad</span>\r\n                            }\r\n                        </Button>\r\n                    </div> : null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading: false, \r\n          option: 'static',\r\n          patient: null, \r\n          redirect: false \r\n        };\r\n        this.onCreateActivityClicked = this.onCreateActivityClicked.bind(this);\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.patient === null) {\r\n            const { pid } = this.props.match.params;\r\n            await this.props.getPatient(pid);\r\n        }\r\n        this.setState({ patient: this.props.patient });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetConfiguration();\r\n    }\r\n\r\n    /** Métodos */\r\n    async prepareAndCreateActivity() {\r\n        this.setState({ loading: true });\r\n\r\n        const fields = this.state.option === 'static' ?\r\n                       this.props.static : this.props.dynamic;\r\n\r\n        /** Resetear cualquier configuración previa */\r\n        this.props.resetConfiguration();\r\n        /** Construir la configuración */\r\n        const configuration = this.props.buildConfiguration(\r\n            { fields }, this.state.patient\r\n        );\r\n\r\n        /** Crear la actividad */\r\n        const response = await this.props.createActivity(configuration);\r\n        const { error, message } = response;\r\n\r\n        this.setState({ loading: false, redirect: true });        \r\n        this.props.setNotification({ error, message, slide: true });\r\n    }\r\n\r\n    onCreateActivityClicked() {\r\n        if (!this.state.loading)\r\n            this.prepareAndCreateActivity();\r\n    }\r\n\r\n    onOptionClicked(e) {\r\n        this.setState({ option: e.target.name });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dynamic: state.dynamic,\r\n        patient: state.patient.patient,\r\n        static: state.static,\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    buildConfiguration,\r\n    createActivity,\r\n    getPatient,\r\n    resetConfiguration,\r\n    setNotification,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STConfigurationPage);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from './types';\r\n\r\nexport const buildConfiguration = (fieldsData, patient) => (dispatch) => {\r\n    const fields = fieldsData.fields;\r\n    const keys = Object.keys(fields);\r\n\r\n    let configuration = {};\r\n    /** Construir la configuración con las opciones seleccionadas */\r\n    keys.forEach(key => {\r\n        const field = fields[key];\r\n        let options = field.options;\r\n        options = Object.values(options);\r\n\r\n        options.forEach(option => {\r\n            /** Verificar que la opción se haya seleccionado */\r\n            if (option.selected) {\r\n                /** Verificar si el field admite múltiples selecciones */\r\n                if (field.multichoice) {\r\n                    /** Verificar si el field ya existe en la configuración */\r\n                    if (configuration[key])\r\n                        /** Si ya existe entonces se anexa la opción */\r\n                        configuration[key].push(option)\r\n                    else\r\n                        /** Si no existe entonces se crea un nuevo array\r\n                         * teniendo como primer elemento la opción\r\n                         */\r\n                        configuration[key] = [option];\r\n                }\r\n                else\r\n                    configuration[key] = option;\r\n            }\r\n        });\r\n    });\r\n\r\n    /** Anexar a la configuración la información del paciente */\r\n    configuration.patient = patient;\r\n\r\n    dispatch({ \r\n        type: SET_CONFIGURATION, \r\n        payload: { configuration }\r\n    });\r\n    \r\n    return configuration;\r\n}\r\n\r\nexport const resetConfiguration = () => (dispatch) => {\r\n    dispatch({ \r\n        type: RESET_CONFIGURATION \r\n    });\r\n}","import STConfigurationPage from './STConfigurationPage';\r\nexport default STConfigurationPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport axios from 'axios';\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from './types';\r\n\r\nconst apiURL = process.env.REACT_APP_API_URL;\r\n\r\n/** Obtener niveles */\r\nexport const getLevels = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/levels` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/levels`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener matches */\r\nexport const getMatches = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) { \r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/matches` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/matches`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener phrases */\r\nexport const getPhrases = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;    \r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/phrases` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/phrases`;\r\n    }    \r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\nexport const getSecuences = (_data, historical = false) => async (dispatch) => {\r\n    let url = apiURL;\r\n    if (historical) {\r\n        const { pid, startDate, endDate, mid } = _data;\r\n        url = `${url}/feedback/historical/${pid}/${mid}/secuences` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n    }\r\n    else {\r\n        const { id } = _data;\r\n        url = `${url}/feedback/${id}/secuences`;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n\r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n\r\n        dispatch({\r\n            type: SET_FEEDBACK_DATA,\r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };\r\n    }\r\n}\r\n\r\n/** Obtener sesiones para histórico de tiempos */\r\nexport const getSessions = (_data) => async (dispatch) => {\r\n    const { pid, startDate, endDate, mid } = _data;\r\n    const url = `${apiURL}/feedback/historical/${pid}/${mid}/sessions` +\r\n                `?start=${startDate}&end=${endDate}`;\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        const { data: { data, message, status }} = response;\r\n        \r\n        const feedData = status === 200 ? data : null;\r\n        const error = status !== 200;\r\n        \r\n        dispatch({ \r\n            type: SET_FEEDBACK_DATA, \r\n            payload: { feedData }\r\n        });\r\n\r\n        return { error, message };\r\n    }\r\n    catch (err) {\r\n        return { error: true, message: err };        \r\n    };\r\n}\r\n\r\nexport const setFeedData = (feedData) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATA, \r\n        payload: { feedData }\r\n    });\r\n}\r\n\r\nexport const setFeedDate = (feedDate) => (dispatch) => {\r\n    dispatch({ \r\n        type: SET_FEEDBACK_DATE, \r\n        payload: { feedDate }\r\n    });\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SDatePicker.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setFeedDate } from '@actions/feedback';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport es from 'date-fns/locale/es';\r\nregisterLocale('es', es);\r\n\r\nclass SDatePicker extends Component {\r\n    render() {\r\n        const { form } = this.props;\r\n        let showMonthYear = true;\r\n        let showYearDropdown = false;\r\n        let style = styles.input;\r\n        let dateFormat = \"MMMM 'de' yyyy\";\r\n        if (form) {\r\n            showMonthYear = false;\r\n            showYearDropdown = true;\r\n            style = styles.completeInput;\r\n            dateFormat = \"dd/MM/yyyy\";\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <DatePicker\r\n                    className={style}\r\n                    dateFormat={dateFormat}\r\n                    locale='es'\r\n                    onChange={this.onDateChanged}\r\n                    popperPlacement='top-end'\r\n                    ref={this.pickerRef}\r\n                    selected={this.state.date}\r\n                    showMonthYearPicker={showMonthYear}\r\n                    showFullMonthYearPicker\r\n                    showYearDropdown={showYearDropdown}\r\n                    scrollableYearDropdown\r\n                    withPortal />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: null };\r\n        this.pickerRef = React.createRef();\r\n        this.onDateChanged = this.onDateChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /** Deshabilitar el teclado */\r\n        if (this.pickerRef && this.pickerRef.current.input)\r\n            this.pickerRef.current.input.readOnly = true;\r\n        \r\n        const { date, feedDate, form } = this.props;\r\n        this.setState({ date: form ? date : feedDate });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date)\r\n            this.setState({ date: this.props.date });\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onDateChanged(date) {\r\n        this.setState({ date });\r\n        const { form, name } = this.props;\r\n        if (form)\r\n            this.props.onChange({ target: { value: date, name }});\r\n        else\r\n            this.props.setFeedDate(date);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedDate: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setFeedDate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SDatePicker);","import SDatePicker from './SDatePicker';\r\nexport default SDatePicker;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { getDatesDifference } from './date&time';\r\n\r\nconst structuresData = {\r\n    Pronombre: { color: 'rgba(248, 196, 113, 0.8)', title: 'Pronombre'},\r\n    Sustantivo: { color: 'rgba(240, 178, 122, 0.8)', title: 'Sustantivo' },\r\n    Adjetivo: { color: 'rgba(127, 179, 213, 0.8)', title: 'Adjetivo' },\r\n    Verbo: { color: 'rgba(115, 198, 182, 0.8)', title: 'Verbo' },\r\n    Artículo: { color: 'rgba(241, 148, 138, 0.8)', title: 'Artículo' },\r\n    Conjunción: { color: 'rgba(247, 220, 111, 0.8)', title: 'Conjunción' },\r\n    Preposición: { color: 'rgba(39, 174, 96, 0.8)', title: 'Preposición' },\r\n};\r\n\r\n/** Funciones públicas */\r\n\r\n/** Construir data para stackbar de palabras */\r\nexport const buildWordHitsData = (data, kind, color) => {\r\n    /** Obtener sólo los registros pertenecientes al tipo correcto */\r\n    const feeds = Object.values(data);\r\n    let records = [];\r\n    feeds.forEach(feed => {\r\n        if (feed.kind === kind) \r\n            records.push(feed);\r\n    });\r\n\r\n    /** Construir los labels a partir de las palabras */\r\n    let labels = [];\r\n    records.forEach(record => {\r\n        if (!labels.includes(record.word)) \r\n            labels.push(record.word);\r\n    });\r\n\r\n    /** Construir porcentajes de aciertos y desaciertos por cada palabra */\r\n    let hits = [];\r\n    let misses = [];\r\n    labels.forEach((label, i) => {\r\n        let wordTotal = 0;\r\n        let hitTotal = 0;\r\n        records.forEach(record => {\r\n            if (record.word === label) {\r\n                /** Contar el número de aciertos */\r\n                if (record.checked) hitTotal += 1;\r\n                wordTotal += 1;\r\n            }            \r\n        });\r\n\r\n        /** Cálculo de porcentajes */\r\n        const hitsPercentage = Math.floor((hitTotal * 100) / wordTotal);\r\n        const missesPercentage = 100 - hitsPercentage;\r\n\r\n        /** Agregar los porcentajes a sus respectivos arrays */\r\n        hits.push(hitsPercentage);\r\n        misses.push(missesPercentage);\r\n        labels[i] = `${label}(${wordTotal})`;\r\n    });\r\n\r\n    /** retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Aciertos',\r\n            data: hits,\r\n            backgroundColor: color\r\n        }, {\r\n            label: 'Desaciertos',\r\n            data: misses,\r\n            backgroundColor: 'rgba(229, 231, 233, 0.7)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Construir data para linebar de palabras */\r\nexport const buildMatchErrorsData = (data, word) => {\r\n    /** Obtener los registros del tipo correcto */\r\n    const matches = Object.values(data);\r\n    let records = [];\r\n    matches.forEach(match => {\r\n        if (match.variable === word)\r\n            records.push(match);\r\n    });\r\n\r\n    /** Construir data */\r\n    let labels = []; /** Apariciones de la variable */\r\n    let occurrence = 1;\r\n    let attempts = [];\r\n    let errors = 0;\r\n    records.forEach(record => {\r\n        /** Verificar si el registro actual fue un match correcto */\r\n        if (record.is_good) {\r\n            /** Si es correcto (orden del siguiente código):\r\n              * a. Guardar una ocurrencia.\r\n              * b. Guardar los errores por intento.\r\n              * c. Sumar la ocurrencia para la siguiente verificación.\r\n              * d. Resetear los errores.\r\n              */\r\n            labels.push(occurrence);\r\n            attempts.push(errors);\r\n\r\n            occurrence += 1;\r\n            if (errors > 0) errors = 0;\r\n        }\r\n        else\r\n            /** Contar el error para la misma ocurrencia */\r\n            errors += 1;\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de errores',\r\n            data: attempts,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** */\r\nexport const buildPhrasesSummary = (groupedPhrases) => {\r\n    /** Contar el porcetaje de frases 100% correctas */\r\n    let hits = 0;\r\n    groupedPhrases.forEach(phrase => {\r\n        if (phrase.percentage === 100)\r\n            hits += 1;\r\n    });\r\n\r\n    /** Calcular porcentajes */\r\n    const totalPhrases = groupedPhrases.length;\r\n    const hitsPercentage = Math.floor((hits * 100) / totalPhrases);\r\n    const errorPencetage = 100 - hitsPercentage;\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        chartData: {\r\n            labels: [ 'Correctas', 'Incorrectas' ],\r\n            datasets: [{\r\n                label: '',\r\n                data: [ hitsPercentage, errorPencetage ],\r\n                backgroundColor: [\r\n                    '#73C6B6',\r\n                    '#E5E7E9'\r\n                ]\r\n            }]\r\n        },\r\n        hits,\r\n        total: totalPhrases\r\n    };\r\n}\r\n\r\n/** Construir los datos de los tiempos a partir de las sesiones */\r\nexport const buildTimes = (data) => {\r\n    const sessions = Object.values(data);\r\n\r\n    let labels = [];\r\n    let minutes = [];\r\n    sessions.forEach(session => {\r\n        /** Obtener la diferencia de tiempos en minutos */\r\n        const diff = getDatesDifference(session.date_start, session.date_end);\r\n\r\n        minutes.push(Math.round(diff.minutes));\r\n        labels.push(`ID ${session.id}`);\r\n    });\r\n\r\n    /** Retornar chartData */\r\n    return {\r\n        labels,\r\n        datasets: [{\r\n            label: 'Curva de tiempo',\r\n            data: minutes,\r\n            backgroundColor: 'rgba(241, 148, 138, 0.5)',\r\n            borderColor: 'rgba(241, 148, 138, 1.0)'\r\n        }]\r\n    };\r\n}\r\n\r\n/** Obtener estructuras trabajadas */\r\nexport const getStructures = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Construir el objeto de estructuras */\r\n    let structures = {};\r\n    phrases.forEach(phrase => {\r\n        /** Incluir el tipo de estructura siempre y cuando no\r\n          * esté presente en el array\r\n          */\r\n        const keys = Object.keys(structures);\r\n        const { kind } = phrase;\r\n        if (!keys.includes(kind))\r\n            structures[kind] = structuresData[kind];\r\n    });\r\n\r\n    /** Retornar como un array */\r\n    return Object.values(structures);\r\n}\r\n\r\n/** Obtener el vocabulario trabajado */\r\nexport const getWords = (matchesData) => {\r\n    const matches = Object.values(matchesData);\r\n\r\n    /** Construir el array de palabras */\r\n    let words = [];\r\n    matches.forEach(match => {\r\n        if (!words.includes(match.variable))\r\n            words.push(match.variable);\r\n    });\r\n\r\n    return words;\r\n}\r\n\r\n/** Agrupar las frases */\r\nexport const groupPhrases = (phrasesData) => {\r\n    const phrases = Object.values(phrasesData);\r\n\r\n    /** Agrupar frases con su porcentage de palabras correctas */\r\n    let grouped = [];\r\n    if (phrases.length > 0) {\r\n        let lastPhrase = phrases.shift();\r\n        let words = [ lastPhrase ];\r\n        let hits = lastPhrase.checked ? 1 : 0;\r\n        phrases.forEach((phrase, i) => {\r\n            if (phrase.id_phrase === lastPhrase.id_phrase) {\r\n                words.push(phrase);\r\n                /** Contabilizar correctas */\r\n                if (phrase.checked) hits += 1;\r\n                /** Si el phrase es el último, agregar registro al \r\n                 * array de frases agrupadas\r\n                 */\r\n                if (i === (phrases.length - 1)) {\r\n                    const record = buildRecord(words, hits);\r\n                    grouped.push(record);\r\n                }\r\n            }\r\n            else if (phrase.id_phrase !== lastPhrase.id_phrase) {\r\n                /** Agregar nuevo registro al array de frases agrupadas */\r\n                const record = buildRecord(words, hits);\r\n                grouped.push(record);\r\n\r\n                /** Resetear valores */\r\n                lastPhrase = phrase;\r\n                words = [ lastPhrase ];\r\n                hits = lastPhrase.checked ? 1 : 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    return grouped;\r\n}\r\n\r\n/** Funciones privadas */\r\n\r\n/** Construir un registro */\r\nconst buildRecord = (words, hits) => {\r\n    /** Calcular el porcentaje de palabras correctas */\r\n    const totalWords = words.length;\r\n    const percentage = Math.floor((hits * 100) / totalWords);\r\n    /** Ordenar el array de words */\r\n    words.sort((a, b) => {\r\n        return a.order_phrase > b.order_phrase ? 1 : -1;\r\n    });\r\n\r\n    return { percentage, words };\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nconst chartOptions = {\r\n    doughnut: () => {\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        const label = data.labels[tooltipItem.index];\r\n                        const value = data.datasets[0].data[tooltipItem.index];\r\n                        return `${value}% de ${label.toLowerCase()}`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    line: (metric) => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Apariciones del vocabulario' : 'Sesiones'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: metric === 'match' ? \r\n                                    'Número de errores' : 'Minutos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: metric === 'match' ? 1 : 10,\r\n                        max: metric === 'match' ? 10 : 60\r\n                    }\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let label = tooltipItem.yLabel;\r\n                        label = label + `${metric === 'match' ?\r\n                                ' error(es)' : ' minuto(s)'}`;\r\n                                    \r\n                        return label;\r\n\r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        if (metric === 'match') {\r\n                            const label = tooltipItems[0].yLabel;\r\n                            return `${label} error(es) de ${label + 1} intento(s)`\r\n                        }\r\n                        else {\r\n                            const label = tooltipItems[0].xLabel;\r\n                            return `Sesión ${label}`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    stackBar: () => {\r\n        return {\r\n            legend: {\r\n                align: 'end',\r\n                labels: {\r\n                    boxWidth: 10,\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Palabras asociadas'\r\n                    },\r\n                    stacked: true\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: '% de aciertos/desaciertos'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        steps: 10,\r\n                        stepSize: 10,\r\n                        max: 100\r\n                    },\r\n                    stacked: true\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: true,\r\n                mode: 'single',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let yLabel = data.datasets[tooltipItem.datasetIndex].label;\r\n                        return tooltipItem.yLabel + '% de ' +\r\n                                yLabel.toLowerCase();\r\n                                \r\n                    },\r\n                    title: (tooltipItems, data) => {\r\n                        const split = tooltipItems[0].xLabel.split('(');\r\n                        const word = split[0];\r\n                        const right = split[1];\r\n                        const total = parseInt(right.split(')')[0], 10);\r\n                        const part = Math.round((tooltipItems[0].yLabel) * total / 100);\r\n\r\n                        return `${word}(${part} de ${total})`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default chartOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { buildPhrasesSummary } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { doughnut } = charts;\r\n\r\nclass STDoughnut extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm}\r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n\r\n                    <Doughnut \r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n\r\n                    <div className={styles.percentage}>\r\n                        {this.state.percentage}%\r\n                    </div>\r\n                    <p className={styles.description}>\r\n                        {this.state.description}\r\n                    </p>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            description: '',\r\n            options: doughnut(),\r\n            percentage: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        const { chartData, hits, total } = buildPhrasesSummary(data);\r\n        /** Obtener porcentaje de correctas */\r\n        const { datasets } = chartData;\r\n        const percentage = datasets[0].data[0];\r\n\r\n        const description = `El paciente pronunció correctamente ${hits} ` +\r\n                            `de un total de ${total} frases`;\r\n\r\n        this.setState({ \r\n            chartData,\r\n            description,\r\n            percentage,\r\n        });\r\n    }\r\n}\r\n\r\nexport default STDoughnut;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { getDatesDifference } from '@utils/date&time';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STLevel extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return(\r\n            <Col\r\n                sm={this.props.sm}\r\n                md={this.props.md}\r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <div className='flex'>\r\n                        <div style={{ width: '100%' }}>\r\n                            <div className='flex'>\r\n                                <div className={styles.title}>\r\n                                    Nivel {data.level}\r\n                                </div>\r\n                                <div className={styles.title}>\r\n                                    Sesión {data.id_session}\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.score}>{data.score}</div>\r\n                            <div className={styles.subtitle}>Puntos ganados</div>\r\n                            <div className={`${styles.score} ${styles.mt20}`}>\r\n                                {this.setLevelTime()}\r\n                            </div>\r\n                            <div className={styles.subtitle}>\r\n                                Minutos para terminar nivel\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevelTime() {\r\n        const { date_start, date_end } = this.props.data;\r\n        const diff = getDatesDifference(date_start, date_end).minutes;\r\n        return diff ? Math.round(diff) : 0;\r\n    }\r\n}\r\n\r\nexport default STLevel;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { \r\n    buildMatchErrorsData, \r\n    buildTimes \r\n} from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { line } = charts;\r\n\r\nclass STLine extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {\r\n                            this.props.metric === 'match' ?\r\n                            <span>{this.props.title}</span>\r\n                            :\r\n                            <span>Tiempos en minutos</span>\r\n                        }\r\n                    </p>\r\n\r\n                    <Line\r\n                        data={this.state.chartData}\r\n                        options={this.state.options}\r\n                        height={this.props.height} />\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: line(this.props.metric)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, metric, title } = this.props;\r\n        if (data) {\r\n            const chartData = metric === 'match' ? \r\n                                buildMatchErrorsData(data, title)\r\n                                :\r\n                                buildTimes(data);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STLine;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nclass STPhrases extends Component {\r\n    render() {\r\n        return(\r\n            <Col sm='12' md='7' className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        Palabras correctas por frases\r\n                    </p>\r\n\r\n                    {this.state.phrases.map((phrase, i) => {\r\n                        return (\r\n                            <div className='flex' key={i}>\r\n                                <div className={`flex ${styles.wordsContainer}`}>\r\n                                    {phrase.words.map((word, j) => {\r\n                                        return(\r\n                                            <div\r\n                                                className={styles.word} \r\n                                                key={j}\r\n                                                style={{\r\n                                                    color: word.checked ?\r\n                                                    'black': '#F1948A'\r\n                                                }}>\r\n                                                {word.word}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div className={styles.phrasePercentage}>\r\n                                    {phrase.percentage}%\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </SContainer>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phrases: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ phrases: this.props.data });\r\n    }\r\n}\r\n\r\nexport default STPhrases;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Charts.module.css';\r\nimport { Col } from 'reactstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { buildWordHitsData } from '@utils/feedback';\r\n\r\nimport SContainer from '@components/shared/SContainer';\r\n\r\nimport charts from '@data/charts';\r\nconst { stackBar } = charts;\r\n\r\nclass STStackBar extends Component {\r\n    render() {\r\n        return(\r\n            <Col \r\n                sm={this.props.sm} \r\n                md={this.props.md} \r\n                lg={this.props.lg} \r\n                className={styles.container}>\r\n                <SContainer>\r\n                    <p className={styles.title}>\r\n                        {this.props.title}\r\n                    </p>\r\n                    <Bar\r\n                        data={this.state.chartData}\r\n                        options={this.state.options} \r\n                        height={this.props.height} />\r\n                </SContainer>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            options: stackBar()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { color, data, title } = this.props;\r\n        if (data) {\r\n            const chartData = buildWordHitsData(data, title, color);\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n}\r\n\r\nexport default STStackBar;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @mintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getWords } from '@utils/feedback';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\nimport SEmpty from '@components/shared/SEmpty';\r\n\r\nclass STInGame extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.words && this.state.words.length > 0 ?\r\n                    <Row noGutters>\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Emparejamiento de vocabulario\r\n                            </div>\r\n                        </Col>\r\n                        {this.state.words.map((word, i) => {\r\n                            return <STLine\r\n                                        sm='12'\r\n                                        md='4'\r\n                                        data={this.state.matchesData}\r\n                                        height={230}\r\n                                        key={i}\r\n                                        metric='match'\r\n                                        title={word} />\r\n                        })}\r\n                    </Row>\r\n                    :\r\n                    <SEmpty>\r\n                        No existe información suficiente que permita construir la información \r\n                        solicitada.\r\n                    </SEmpty>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { matchesData: null, words: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const matchesData = feedData.Matches_Feeds;\r\n        if (matchesData) {\r\n            const words = getWords(matchesData);\r\n            this.setState({ matchesData, words });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STInGame);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport STLevel from '@components/therapist/charts/STLevel';\r\n\r\nclass STLevels extends Component {\r\n    render() {\r\n        return(\r\n            <Row noGutters>\r\n                <Col xs='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Niveles en la sesión\r\n                    </div>\r\n                </Col>\r\n                {this.state.levels.map(level => {\r\n                    return(\r\n                        <STLevel \r\n                            sm='12'\r\n                            md='6'\r\n                            lg='4'\r\n                            data={level} \r\n                            key={level.id} />\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { levels: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLevels();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setLevels();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    setLevels() {\r\n        const { Levels_Feeds } = this.props.feedData;\r\n        const { levels } = this.state;\r\n        if (Levels_Feeds && levels.length === 0) {\r\n            const levels = Object.values(Levels_Feeds);\r\n            this.setState({ levels });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STLevels);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { STLine } from '@components/therapist/charts';\r\n\r\nclass STTimes extends Component {\r\n    render() {\r\n        const { sessionsData } = this.state;\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12'>\r\n                    <div className={styles.subtitle}>\r\n                        Tiempos por sesiones de la actividad\r\n                    </div>\r\n                </Col>\r\n                {sessionsData &&\r\n                <STLine\r\n                    sm='12'\r\n                    md='6'\r\n                    data={sessionsData}\r\n                    height={200}\r\n                    metric='time' />}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { sessionsData: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const sessionsData = feedData.Sessions_Feeds;\r\n        if (sessionsData)\r\n            this.setState({ sessionsData });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STTimes);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './Feedback.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getStructures, groupPhrases } from '@utils/feedback';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport { \r\n    STDoughnut,\r\n    STPhrases,\r\n    STStackBar \r\n} from '@components/therapist/charts';\r\n\r\nclass STVocalization extends Component {\r\n    render() {\r\n        const { groupedPhrases } = this.state;        \r\n        return(\r\n            <div>\r\n                {\r\n                    groupedPhrases && groupedPhrases.length > 0 ?\r\n                    <Row noGutters>\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Frases trabajadas en la actividad\r\n                            </div>\r\n                        </Col>\r\n                        {groupedPhrases && <STDoughnut \r\n                            sm='12'\r\n                            md='5'\r\n                            data={groupedPhrases}\r\n                            height={160}\r\n                            title='Resumen de las frases' />}\r\n                        {this.props.feedback === 'evolution' && groupedPhrases &&\r\n                            <STPhrases data={groupedPhrases} />}\r\n\r\n                        <Col sm='12'>\r\n                            <div className={styles.subtitle}>\r\n                                Discriminación por estructura sintáctica\r\n                            </div>\r\n                        </Col>\r\n                        {this.state.structures.map((structure, i) => {\r\n                            return (\r\n                                <STStackBar\r\n                                    sm='12'\r\n                                    md='6'\r\n                                    lg='4'\r\n                                    color={structure.color}\r\n                                    data={this.state.phrasesData}\r\n                                    height={230}\r\n                                    key={i} \r\n                                    title={structure.title} />\r\n                            );\r\n                        })}\r\n                    </Row>\r\n                    :\r\n                    <SEmpty>\r\n                        No existe información suficiente que permita construir la información \r\n                        solicitada.\r\n                    </SEmpty>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupedPhrases: null, \r\n            phrasesData: null, \r\n            structures: [] \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { feedData } = this.props;\r\n        const phrasesData = feedData.Phrases_Feeds;\r\n        if (phrasesData) {\r\n            const groupedPhrases = groupPhrases(phrasesData);\r\n            const structures = getStructures(phrasesData);\r\n            this.setState({ \r\n                groupedPhrases,\r\n                phrasesData, \r\n                structures \r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STVocalization);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const mechanics = {\r\n    1: { \r\n        id: 1, \r\n        name: 'Dominó', \r\n        alias: 'Do', \r\n        semantic_description: 1 \r\n    },\r\n    2: {\r\n        id: 2,\r\n        name: 'Ordenando',\r\n        alias: 'Or',\r\n        semantic_description: 1\r\n    },\r\n    3: {\r\n        id: 3,\r\n        name: 'Secuencia',\r\n        alias: 'Se',\r\n        semantic_description: 2\r\n    }\r\n}","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedOptions.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STFeedOptions extends Component {\r\n    render() {\r\n        const { option } = this.state;\r\n        const base = `secondary-btn-outline ${styles.btn}`;\r\n        /** Definición de los estilos de los botones */\r\n        let btnVocal = option === 'vocalization' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnMecha = option === 'inGame' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnLevel = option === 'levels' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        let btnTimes = option === 'times' ? \r\n                         `${base} ${styles.selected}` : base;\r\n\r\n        /** Deshabilitar botones de acuerdo a la descripción semántica */\r\n        if (this.state.description === 2) {\r\n            btnVocal = `${btnVocal} ${styles.disabled}`;\r\n            btnMecha = `${btnMecha} ${styles.disabled}`;\r\n        }\r\n        \r\n        const { feedback } = this.props;\r\n        let contWidth = 400;\r\n        let btnWidth = 32.5;\r\n        if (feedback === 'historical') {\r\n            contWidth = 500;\r\n            btnWidth = 24.5;\r\n        }\r\n\r\n        return(\r\n            <div \r\n                className={`flex ${styles.btnContainer}`}\r\n                style={{ '--contWidth': `${contWidth}px` }}>\r\n                <Button\r\n                    className={btnVocal}\r\n                    name='vocalization'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    {\r\n                        this.props.windowWidth < 767 &&\r\n                        feedback === 'historical' ?\r\n                        <span className={styles.span}>\r\n                            Vocaliza...\r\n                        </span>\r\n                        :\r\n                        <span className={styles.span}>\r\n                            Vocalización\r\n                        </span>\r\n                    }\r\n                </Button>\r\n                <Button\r\n                    className={btnMecha}\r\n                    name='inGame'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Juego\r\n                </Button>\r\n                <Button\r\n                    className={btnLevel}\r\n                    name='levels'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Niveles\r\n                </Button>\r\n                {feedback === 'historical' && <Button\r\n                    className={btnTimes}\r\n                    name='times'\r\n                    onClick={this.onOptionClicked}\r\n                    style={{ '--btnWidth': `${btnWidth}%` }}>\r\n                    Tiempos\r\n                </Button>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { description: 1, option: 'vocalization' }\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStateValues();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mechanic !== this.props.mechanic)\r\n            this.setStateValues();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onOptionClicked(e) {\r\n        const { name } = e.target;\r\n        const { description } = this.state;\r\n        this.setState({ option: name });\r\n        this.props.onOptionClicked({ description, option: name });\r\n    }\r\n\r\n    setStateValues() {\r\n        const { feedback } = this.props;\r\n        let description = 1;\r\n        if (feedback === 'historical')\r\n            description = mechanics[this.props.mechanic].semantic_description;\r\n        else\r\n            description = this.props.activity.Mechanic.semantic_description;\r\n\r\n        const option = description === 1 ? 'vocalization' : 'levels';\r\n        this.setState({ description, option });\r\n        this.props.onOptionClicked({ description, option });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        windowWidth: state.ui.windowWidth\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STFeedOptions);","import STFeedOptions from './STFeedOptions';\r\nexport default STFeedOptions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSession.module.css';\r\nimport { Button, Col } from 'reactstrap';\r\nimport { \r\n    getDatesDifference,\r\n    getFormattedDate\r\n } from '@utils/date&time';\r\nimport { connect } from 'react-redux';\r\n\r\nclass STSession extends Component {\r\n    render() {\r\n        /** Configuración del estilo del contenedor */\r\n        const { index, session, sessionSelected } = this.props;\r\n        let container = styles.container;\r\n        let innerContainer = styles.innerContainer;\r\n\r\n        /** Aplicar estilo al primer elemento y último elemento */\r\n        if (index === 0) container = `${container} ${styles.first}`;\r\n        else if (index === 2) container = `${container} ${styles.last}`;\r\n\r\n        if (sessionSelected && session.id === sessionSelected.id)\r\n            innerContainer = `${innerContainer} ${styles.selected}`;\r\n\r\n        return(\r\n            <Col xs='12' sm='6' md='4' className={container}>                \r\n                <Button \r\n                    className={`ghost-btn ${styles.btn}`}\r\n                    onClick={this.onClicked}>\r\n                    <div className={innerContainer}>\r\n                        <div className={`flex ${styles.title}`}>\r\n                            <span>Sesión</span>\r\n                            <span>ID: {session.id}</span>\r\n                        </div>\r\n                        <div className={styles.date}>\r\n                            Registro del {this.getFormattedDate(session.date_start)}\r\n                        </div>\r\n                        <div className={styles.time}>\r\n                            {this.getDifference(\r\n                                session.date_start, \r\n                                session.date_end)} minutos\r\n                        </div>\r\n                    </div>\r\n                </Button>                \r\n            </Col>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClicked = this.onClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extras */\r\n    /** Obtener la diferencia de tiempos en minutos */\r\n    getDifference(date_start, date_end) {\r\n        const diff = getDatesDifference(date_start, date_end);\r\n        return Math.round(diff.minutes);\r\n    }\r\n\r\n    getFormattedDate(date) {\r\n        return getFormattedDate(date);\r\n    }\r\n\r\n    onClicked() {\r\n        this.props.onClicked(this.props.session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionSelected: state.activity.session\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(STSession);","import STSession from './STSession';\r\nexport default STSession;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis \r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STSessions.module.css';\r\nimport { Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setSession } from '@actions/activity';\r\n\r\nimport STSession from './STSession';\r\n\r\nclass STSessions extends Component {\r\n    render() {\r\n        return(\r\n            <Row className={styles.container} noGutters>\r\n                {\r\n                    this.props.sessions.map((session, i) => {\r\n                        return <STSession \r\n                                    index={i}\r\n                                    key={session.id}\r\n                                    onClicked={this.onSessionClicked}\r\n                                    session={session} />\r\n                    })\r\n                }                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSessionClicked = this.onSessionClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const session = this.props.sessions[0];\r\n        this.setSession(session);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onSessionClicked(session) {\r\n        this.setSession(session);\r\n    }\r\n\r\n    setSession(session) {\r\n        this.props.setSession(session);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STSessions);","import STSessions from './STSessions';\r\nexport default STSessions;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STEvolution.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getLevels, getMatches, getPhrases, getSecuences } from '@actions/feedback';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STSessions from './STSessions';\r\n\r\nclass STEvolution extends Component {\r\n    render() {        \r\n        const sessions = Object.values(this.props.sessions);\r\n        sessions.sort((a, b) => { return a.id < b.id ? 1 : -1; });\r\n        \r\n        return(\r\n            <div className={styles.container}>\r\n                <STSessions sessions={sessions} />\r\n                <STFeedOptions\r\n                    feedback='evolution'\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :                    \r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='evolution' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    <STLevels />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'vocalization' };        \r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.session !== this.props.session)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getFeedback() {\r\n        const { session } = this.props;\r\n        if (session) {\r\n            const { id } = session;\r\n            const { option } = this.state;\r\n            \r\n            this.setState({ loading: true });\r\n            if (option === 'vocalization')\r\n                await this.props.getPhrases({ id });\r\n            else if (option === 'inGame')\r\n                await this.props.getMatches({ id });\r\n            else if (option === 'levels') {\r\n                const { activity: { Mechanic: { semantic_description }}} = this.props;\r\n                if (semantic_description === 1)\r\n                    await this.props.getLevels({ id });\r\n                else\r\n                    await this.props.getSecuences({ id });\r\n            }\r\n            \r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ option: data.option }, () => this.getFeedback());\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        feedData: state.feedback.feedData,\r\n        sessions: state.activity.sessions,\r\n        session: state.activity.session\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STEvolution);","import STEvolution from './STEvolution';\r\nexport default STEvolution;","import STMechanics from './STMechanics';\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STMechanics.module.css';\r\nimport { Button, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport { mechanics } from '@data/mechanics';\r\n\r\nclass STMechanics extends Component {\r\n    render() {\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                {this.state.mechanics.map(mechanic => {\r\n                    let base = styles.btn;\r\n                    if (mechanic.id === this.state.selected)\r\n                        base = `${base} ${styles.selected}`;\r\n\r\n                    return (\r\n                        <div key={mechanic.id}>\r\n                            <Button\r\n                                className={`ghost-btn ${base}`}\r\n                                id={`utooltip${mechanic.name}`}\r\n                                name={mechanic.id}\r\n                                onClick={this.onMechanicClicked}>\r\n                                {mechanic.alias}\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                                placement='right'\r\n                                target={`utooltip${mechanic.name}`}>\r\n                                {mechanic.name}\r\n                            </UncontrolledTooltip>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            mechanics: Object.values(mechanics),\r\n            selected: 1\r\n        };\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onMechanicClicked(e) {\r\n        let { name } = e.target;\r\n        name = parseInt(name, 10);\r\n        this.setState({ selected: name });\r\n        this.props.onMechanicClicked(name);\r\n    }\r\n}\r\n\r\nexport default STMechanics;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STHistorical.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getLevels, \r\n    getMatches, \r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions \r\n} from '@actions/feedback';\r\nimport { getDateBoundaries } from '@utils/date&time';\r\n\r\nimport { \r\n    STInGame,\r\n    STLevels,\r\n    STTimes,\r\n    STVocalization \r\n} from '@components/therapist/feedback';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STFeedOptions from '@components/therapist/feedback/STFeedOptions';\r\nimport STMechanics from './STMechanics';\r\n\r\nclass STHistorical extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <STMechanics onMechanicClicked={this.onMechanicClicked} />\r\n                <STFeedOptions\r\n                    feedback='historical'\r\n                    mechanic={this.state.mid}\r\n                    onOptionClicked={this.onOptionClicked} />\r\n                {\r\n                    this.state.loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.feedData === null ?\r\n                    <SEmpty>\r\n                        No existen registros que permitan construir las\r\n                        estadísticas solicitadas.\r\n                    </SEmpty>\r\n                    :\r\n                    this.state.option === 'vocalization' ?\r\n                    <STVocalization feedback='historical' />\r\n                    :\r\n                    this.state.option === 'inGame' ?\r\n                    <STInGame />\r\n                    :\r\n                    this.state.option === 'levels' ?\r\n                    <STLevels />\r\n                    :\r\n                    <STTimes />                        \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            description: 1,\r\n            loading: false, \r\n            mid: 1,\r\n            option: 'vocalization' \r\n        };\r\n        this.onOptionClicked = this.onOptionClicked.bind(this);\r\n        this.onMechanicClicked = this.onMechanicClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { date } = this.props;\r\n        const { mid } = this.state;\r\n        if (date !== prevProps.date || mid !== prevState.mid)\r\n            this.getFeedback();\r\n    }\r\n\r\n    /** Métodos extras */\r\n    async getFeedback() {\r\n        const { date, pid } = this.props;\r\n        const { description, mid, option } = this.state;\r\n        /** Calcular las fechas límites */\r\n        const { startDate, endDate } = getDateBoundaries(date.toISOString());\r\n        const data = { pid, startDate, endDate, mid };\r\n\r\n        this.setState({ loading: true });\r\n        if (option === 'vocalization')\r\n            await this.props.getPhrases(data, true);\r\n        else if (option === 'inGame')\r\n            await this.props.getMatches(data, true);\r\n        else if (option === 'levels') {\r\n            if (description === 1)\r\n                await this.props.getLevels(data, true);\r\n            else\r\n                await this.props.getSecuences(data, true);\r\n        }\r\n        else if (option === 'times')\r\n            await this.props.getSessions(data, true);\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionClicked(data) {\r\n        this.setState({ description: data.description, option: data.option }, \r\n            () => this.getFeedback());\r\n    }\r\n\r\n    onMechanicClicked(mechanic) {\r\n        this.setState({ mid: mechanic });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        feedData: state.feedback.feedData,\r\n        date: state.feedback.feedDate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getLevels,\r\n    getMatches,\r\n    getPhrases,\r\n    getSecuences,\r\n    getSessions\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STHistorical);","import STHistorical from './STHistorical';\r\nexport default STHistorical;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STFeedbackPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getActivity,\r\n    setActivity,\r\n    setSessions,\r\n    setSession\r\n} from '@actions/activity';\r\nimport { setFeedData } from '@actions/feedback';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STEvolution from '@components/therapist/STEvolution';\r\nimport STHistorical from '@components/therapist/STHistorical';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass STFeedbackPage extends Component {\r\n    render() {\r\n        const { kind, loading } = this.state;\r\n        const title = kind === 'evolución' ?\r\n                        'Evolución por sesiones' : 'Histórico por mes'\r\n        \r\n        const { pid } = this.props.match.params;\r\n        \r\n        return(\r\n            <STLayout page='feedback' pt={50}>\r\n                <div className={`flex ${styles.container}`}>\r\n                    <div className={styles.title}>\r\n                        {title}\r\n                    </div>\r\n                    {kind === 'histórico' && <SDatePicker />}\r\n                </div>\r\n                {\r\n                    loading ?\r\n                    <SSpinner color='primary' />\r\n                    :\r\n                    this.props.sessions && kind === 'evolución' ?\r\n                    <STEvolution />\r\n                    :\r\n                    kind === 'histórico' ?\r\n                    <STHistorical pid={pid} />\r\n                    :\r\n                    null\r\n                }\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { kind: 'evolución', loading: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { aid, kind } = this.props.match.params;\r\n        if (kind === 'evolución') \r\n            this.getActivity(aid);\r\n        \r\n        this.setState({ kind });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setActivity(null);\r\n        this.props.setFeedData(null);\r\n        this.props.setSessions(null);\r\n        this.props.setSession(null);       \r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getActivity(aid) {\r\n        this.setState({ loading: true });\r\n        await this.props.getActivity(aid);\r\n        this.setFirstSessions();\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    /** Setear las tres primeras sesiones de la actividad */\r\n    setFirstSessions() {\r\n        const { activity } = this.props;\r\n        let sessions = [];\r\n        if (activity) {\r\n            sessions = Object.values(activity.Activities_Sessions);\r\n            sessions.sort((a, b) => { return a.id < b.id ? 1 : -1; });\r\n            sessions = Object.assign({}, ...sessions.slice(0, 3).map(session => {\r\n                return { [session.id]: session };\r\n            }));\r\n        }\r\n        this.props.setSessions(sessions);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activity: state.activity.activity,\r\n        sessions: state.activity.sessions\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getActivity,\r\n    setActivity,\r\n    setFeedData,\r\n    setSessions,\r\n    setSession\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STFeedbackPage);","import STFeedbackPage from './STFeedbackPage';\r\nexport default STFeedbackPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STLogin.module.css';\r\nimport { \r\n    Button, \r\n    Form, \r\n    FormGroup, \r\n    Input, \r\n    Label,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '@actions/auth';\r\nimport { setModal } from '@actions/ui';\r\n\r\nimport { THERAPIST } from '@data/roles';\r\n\r\n/** Login para el terapeuta */\r\nclass STLogin extends Component {\r\n    render() {\r\n        /** Redireccionar a los pacientes */\r\n        const { userId } = this.state;\r\n        if (userId)\r\n            return <Redirect to={`/terapeuta/${userId}/pacientes`} push />\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.title}>Ingreso</div>\r\n                {this.state.error && <div className={styles.error}>\r\n                    {this.state.error}\r\n                </div>}\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Nombre de usuario</Label>\r\n                        <Input \r\n                            name='username'\r\n                            onChange={this.onInputChanged}\r\n                            type='text' />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className={styles.label}>Contraseña</Label>\r\n                        <Input\r\n                            name='password'\r\n                            onChange={this.onInputChanged} \r\n                            type='password' />\r\n                        <Button \r\n                            className={`ghost-btn ${styles.btnForgot}`}\r\n                            onClick={this.onForgotClicked}>\r\n                            ¿Olvidaste tu contraseña?\r\n                        </Button>\r\n                    </FormGroup>\r\n                    <Button\r\n                        className={`secondary-btn ${styles.btn}`}\r\n                        onClick={this.onLoginClicked}>\r\n                        {\r\n                            this.state.loading ?\r\n                            <Spinner color='dark' size='sm' />\r\n                            :\r\n                            <span>Entrar</span>\r\n                        }\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            error: null, \r\n            loading: false,\r\n            password: '', \r\n            userId: null,\r\n            username: '',\r\n        };\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onForgotClicked = this.onForgotClicked.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onLoginClicked = this.onLoginClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos */\r\n    onInputChanged(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onForgotClicked(e) {\r\n        e.preventDefault();\r\n        const modal = {\r\n            title: 'Recuperación de la contraseña',\r\n            type: 'forgot_password',\r\n            role: 2\r\n        };\r\n        this.props.setModal(modal);\r\n    }\r\n\r\n    async onLogin(username, password) {\r\n        this.setState({ loading: true });\r\n        const credentials = { username, password };\r\n        const response = await this.props.login(credentials, THERAPIST);\r\n        let { error, message, userId } = response;\r\n        if (error) error = message;\r\n\r\n        this.setState({ error, loading: false, userId });\r\n    }\r\n\r\n    onLoginClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.state.loading) {\r\n            const { username, password } = this.state;\r\n            if (username.trim() !== '' && password.trim() !== '')\r\n                this.onLogin(username, password);\r\n            else\r\n                this.setState({ \r\n                    error: 'El usuario y la contraseña son obligatorios' \r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    login,\r\n    setModal\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STLogin);","import STLogin from './STLogin';\r\nexport default STLogin;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setBar, \r\n    setParallax,\r\n    showAvatar, \r\n    showMobileMenu \r\n} from '@actions/ui';\r\nimport { setUser } from '@actions/user';\r\n\r\nimport STLogin from '@components/therapist/STLogin';\r\n\r\n/** Página Landing del terapeuta */\r\nclass STLandingPage extends Component {\r\n    render() {\r\n        const { vOffset } = this.props.ui;\r\n\r\n        return(\r\n            <Row noGutters>\r\n                <Col sm='12' md='6'>\r\n                </Col>\r\n                <Col sm='12' md='6'>\r\n                    <div \r\n                        className='flex' \r\n                        style={{\r\n                            alignItems: 'flex-start', \r\n                            justifyContent: 'center',\r\n                            height: `calc(100vh - ${vOffset}px)`\r\n                        }}>\r\n                        <STLogin />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setBar('standard');\r\n        this.props.setParallax(false);\r\n        this.props.showMobileMenu(false);\r\n        this.props.setUser(null);\r\n        this.props.showAvatar(false);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ui: state.ui\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    setBar,\r\n    setParallax,\r\n    setUser,\r\n    showAvatar,\r\n    showMobileMenu,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STLandingPage);","import STLandingPage from './STLandingPage';\r\nexport default STLandingPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SSearch.module.css';\r\nimport { Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { getPatients } from '@actions/patient';\r\nimport { getUsers } from '@actions/user';\r\n\r\nclass SSearch extends Component {\r\n    render() {\r\n        let searchContainer = styles.searchContainer;\r\n        if (this.props.patients)\r\n            searchContainer = `${searchContainer} ${styles.marginTop}`;\r\n\r\n        return(\r\n            <div className={`flex ${searchContainer}`}>\r\n                <FontAwesomeIcon \r\n                    className={styles.searchIcon}\r\n                    icon={faSearch} />\r\n                <Input \r\n                    className={styles.search}\r\n                    type='text'\r\n                    placeholder='Busca por nombre o identificación'\r\n                    onChange={this.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async onChange({ target: { value }}) {\r\n        const { patients } = this.props;\r\n        if (patients) {\r\n            const userId = patients === 'my' ? this.props.userId : null;\r\n            await this.props.getPatients(userId, value);\r\n        }\r\n        else\r\n            await this.props.getUsers(value);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    getUsers\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SSearch);","import SSearch from './SSearch';\r\nexport default SSearch;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatient.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createPatient, removePatient } from '@actions/patient';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass STPatient extends Component {\r\n    render() {\r\n        const { userId, patient } = this.props;\r\n        const { id } = patient;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Link\r\n                    className={`ghost-btn ${styles.link}`}\r\n                    to={`/terapeuta/${userId}/pacientes/${id}/actividades`}>\r\n                    <div className={`flex ${styles.height} ${styles.padding}`}>\r\n                        <div className='flex'>\r\n                            {\r\n                                patient.profile_img ?\r\n                                <img\r\n                                    alt=''\r\n                                    className={styles.uimage}\r\n                                    src={`${serverURL}${patient.profile_img}`} />\r\n                                :\r\n                                <div\r\n                                    className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                                    style={{ backgroundColor: patient.color}}>\r\n                                    { patient.thumbnail_alias }\r\n                                </div>\r\n                            }\r\n                            <div className={styles.padding}>\r\n                                <div className={styles.uname}>\r\n                                    { patient.name }&nbsp; \r\n                                    { patient.last_name }\r\n                                </div>\r\n                                <div className={styles.uinfo}>\r\n                                    Paciente desde 2019\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Button \r\n                            className={`ghost-btn ${this.state.check}`}\r\n                            onClick={this.onAssignPatientClicked}>\r\n                            <FontAwesomeIcon \r\n                                icon={faCheckCircle} \r\n                                size='2x' />\r\n                        </Button>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { check: styles.btn };\r\n        this.onAssignPatientClicked = this.onAssignPatientClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCheck();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setCheck();\r\n    }\r\n\r\n    /** Métodos */\r\n    checkTherapist(userId, patient) {\r\n        /** \r\n         * Verificar si el terapeuta asignado es el mismo terapeuta\r\n         * logueado \r\n         */\r\n        if (patient.Therapists) {\r\n            if (patient.Therapists[userId])\r\n                return true;\r\n        }\r\n        else if (patient.Therapists_Patients) {\r\n            if (userId === patient.Therapists_Patients.id_therapist)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    async onAssignPatientClicked(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const { userId, patient } = this.props;\r\n        if (this.checkTherapist(userId, patient))\r\n            await this.props.removePatient(userId, patient.id);\r\n        else\r\n            await this.props.createPatient(userId, patient.id);\r\n    }\r\n\r\n    setCheck() {\r\n        const { userId, patient } = this.props;\r\n        const check = this.checkTherapist(userId, patient) ?\r\n                      styles.btnActive : styles.btn;\r\n\r\n        if (check !== this.state.check)\r\n            this.setState({ check });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    createPatient,\r\n    removePatient,\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(STPatient);","import STPatient from './STPatient';\r\nexport default STPatient;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './STPatientsPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPatients, setPatients } from '@actions/patient';\r\n\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\nimport STPatient from '@components/therapist/STPatient';\r\n\r\nclass STPatientsPage extends Component {\r\n    render() {\r\n        /** Definir las clases para los botones */\r\n        const buttonMy = `primary-btn-outline left ${styles.btn} \r\n                            ${this.state.option === 'my' ? \r\n                            styles.btnSelected : ''}`;\r\n\r\n        const buttonAll = `primary-btn-outline ${styles.btn} \r\n                            ${this.state.option === 'all' ?\r\n                            styles.btnSelected : ''}`;\r\n\r\n        let { patients } = this.props;\r\n        patients = patients ? Object.values(this.props.patients) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Pacientes</div>\r\n                <div className={`flex ${styles.searchContainer}`}>\r\n                    <div className={`flex ${styles.btnContainer}`}>\r\n                        <Button\r\n                            className={buttonMy}\r\n                            name='my'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Mis pacientes\r\n                        </Button>\r\n                        <Button\r\n                            className={buttonAll}\r\n                            name='all'\r\n                            onClick={this.onOptionSelected}\r\n                            outline>\r\n                            Todos los pacientes\r\n                        </Button>\r\n                    </div>\r\n                    <SSearch \r\n                        patients={this.state.option}\r\n                        userId={this.state.userId} />\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        patients && patients.length > 0 ?\r\n                        patients.map(patient => {\r\n                            return(\r\n                                <STPatient\r\n                                    key={patient.id} \r\n                                    patient={patient}\r\n                                    userId={this.state.userId} />\r\n                            );\r\n                        })\r\n                        : \r\n                        <SEmpty>\r\n                            No se encontraron pacientes. Recuerda que puedes\r\n                            asignarte pacientes en la opción Todos los pacientes.\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false, option: 'my', userId: null };\r\n        this.onOptionSelected = this.onOptionSelected.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ userId: this.props.match.params.tid }, () => {\r\n            this.getPatientsList(this.state.userId);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setPatients(null);\r\n    }\r\n\r\n    /** Métodos */\r\n    async getPatientsList(userId) {\r\n        this.setState({ loading: true });\r\n        await this.props.getPatients(userId);\r\n\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    onOptionSelected(e) {\r\n        this.setState({ option: e.target.name }, () => {\r\n            let userId = this.state.option === 'my' ? this.state.userId : null;\r\n            this.getPatientsList(userId);\r\n        });\r\n    }\r\n}\r\n\r\n/** Funciones para el store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        patients: state.patient.patients,\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getPatients,\r\n    setPatients\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(STPatientsPage);","import STPatientsPage from './STPatientsPage';\r\nexport default STPatientsPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUser.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { setToUpdate } from '@actions/user';\r\n\r\nconst serverURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nclass SAUser extends Component {\r\n    render() {\r\n        const { userId, user } = this.props;\r\n        return(\r\n            <div className={`flex ${styles.container}`}>\r\n                <div className={`flex`}>\r\n                    {\r\n                        user.profile_img ?\r\n                        <img\r\n                            alt=''\r\n                            className={styles.uimage}\r\n                            src={`${serverURL}${user.profile_img}`} />\r\n                        :\r\n                        <div\r\n                            className={`flex ${styles.uimage} ${styles.thumb}`}\r\n                            style={{ backgroundColor: user.color }}>\r\n                            { user.thumbnail_alias }\r\n                        </div>\r\n                    }\r\n                    <div className={styles.infoContainer}>\r\n                        <div className={styles.name}>\r\n                            { user.name } {user.last_name}\r\n                        </div>\r\n                        <div className={styles.identification}>\r\n                            ID { user.id }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className={`ghost-btn ${styles.btnEdit}`}\r\n                    onClick={this.onLinkClicked}\r\n                    to={`/terapeuta/${userId}/editar/${user.id}`}>\r\n                    <FontAwesomeIcon icon={faEdit} size='lg' />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLinkClicked = this.onLinkClicked.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    onLinkClicked() {\r\n        this.props.setToUpdate(this.props.user);\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapActionsToProps = {\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapActionsToProps\r\n)(SAUser);","import SAUser from './SAUser';\r\nexport default SAUser;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUsersPage.module.css';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, setUsers } from '@actions/user';\r\n\r\nimport SAUser from '@components/admin/SAUser';\r\nimport SEmpty from '@components/shared/SEmpty';\r\nimport SSearch from '@components/shared/SSearch';\r\nimport SSpinner from '@components/shared/SSpinner';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nclass SAUsersPage extends Component {\r\n    render() {\r\n        const { tid } = this.props.match.params;\r\n        let { users } = this.props;\r\n        users = users ? Object.values(users) : [];\r\n\r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>Todos los usuarios</div>\r\n                <div className={`flex ${styles.toolsContainer}`}>\r\n                    <SSearch />\r\n                    <Link to={`/terapeuta/${tid}/nuevo`}>\r\n                        <Button \r\n                            className={`secondary-btn ${styles.btnCreate}`}>\r\n                            Nuevo\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                <div className={styles.listContainer}>\r\n                    {\r\n                        this.state.loading ?\r\n                        <SSpinner color='primary' />\r\n                        :\r\n                        users.length > 0 ?\r\n                        users.map(user => {\r\n                            return <SAUser \r\n                                admin={true}\r\n                                key={user.id} \r\n                                user={user}\r\n                                userId={tid} />\r\n                        })\r\n                        :\r\n                        <SEmpty>\r\n                            No se han encontrado usuarios en el sistema.\r\n                            Recuerda que como administrador puedes crear \r\n                            usuarios nuevos\r\n                        </SEmpty>\r\n                    }\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loading: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setUsers(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    async getAllUsers() {\r\n        this.setState({ loading: true });\r\n        await this.props.getUsers();\r\n        \r\n        this.setState({ loading: false });\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUsers,\r\n    setUsers\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUsersPage);","import SAUsersPage from './SAUsersPage';\r\nexport default SAUsersPage;","import SAImageLoader from './SAImageLoader';\r\nexport default SAImageLoader;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAImageLoader.module.css';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SAImageLoader extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={`flex ${styles.innerContainer}`}>\r\n                    <div className={`flex ${styles.iconContainer}`}>\r\n                        { !this.state.encodedImage && <FontAwesomeIcon \r\n                            className={styles.icon}\r\n                            icon={faImage}\r\n                            size='3x' /> }\r\n                        <canvas\r\n                          style={{ display: this.state.encodedImage ? 'block' : 'none' }} \r\n                          ref={this.canvasRef} />\r\n                        <img \r\n                            alt=''\r\n                            className={styles.hiddenImage} \r\n                            ref={this.imageRef}\r\n                            src='' />\r\n                    </div>\r\n                </div>\r\n                <p className={styles.text}>\r\n                    Si lo deseas puedes agregar una imagen de perfil\r\n                </p>\r\n                <FormGroup>\r\n                    <Input\r\n                        className={styles.hidden}\r\n                        onChange={this.onFileChanged} \r\n                        type='file' \r\n                        id='profilePicture' />\r\n                    <Label\r\n                        className={`secondary-btn ${styles.btnFile}`} \r\n                        for='profilePicture'>\r\n                        Agregar Imagen\r\n                    </Label>\r\n                </FormGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { encodedImage: null };\r\n      this.canvasRef = React.createRef();\r\n      this.imageRef = React.createRef();\r\n\r\n      this.onFileChanged = this.onFileChanged.bind(this);\r\n      this.onFileReaderLoaded = this.onFileReaderLoaded.bind(this);\r\n      this.onImageLoaded = this.onImageLoaded.bind(this);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    \r\n    /** Método que detecta cuando hay un cambio en el input de tipo file */\r\n    onFileChanged(e) {\r\n      const file = e.target.files[0];    \r\n      if (!file) return;\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = this.onFileReaderLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de un archivo en el FileReader */\r\n    onFileReaderLoaded(e) {\r\n      this.imageRef.current.src = e.target.result;\r\n      this.imageRef.current.onload = this.onImageLoaded;\r\n    }\r\n\r\n    /** Método encargado de detectar la carga de la imagen en el tag img */\r\n    onImageLoaded(e) {\r\n      const MAX_WIDTH = 180;\r\n      const MAX_HEIGHT = 180;\r\n\r\n      /** Calcular el valor de la escala para respetar el aspect ratio */\r\n      const scale = e.target.width > e.target.height && e.target.width > MAX_WIDTH ? MAX_WIDTH / e.target.width :\r\n                    e.target.height > MAX_HEIGHT ? MAX_HEIGHT / e.target.height : \r\n                    1;\r\n\r\n      /** Asignar el tamaño del canvas */\r\n      this.canvasRef.current.width = e.target.width * scale;\r\n      this.canvasRef.current.height = e.target.height * scale;\r\n\r\n      /** Obtener el contexto 2d del canvas, dibujar la imagen y obtener imagen codificada */\r\n      const context = this.canvasRef.current.getContext('2d');\r\n      context.drawImage(e.target, 0, 0, this.canvasRef.current.width, this.canvasRef.current.height);\r\n      const encodedImage = context.canvas.toDataURL(e.target, 'image/png');\r\n\r\n      this.setState({ encodedImage }, () => { \r\n        this.canvasRef.current.toBlob((blob) => {\r\n          this.props.onImageLoaded(blob);\r\n        }); \r\n      });\r\n    }\r\n}\r\n\r\nexport default SAImageLoader;","import SCheckField from './SCheckField';\r\nexport default SCheckField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SCheckField = (props) => {\r\n    return(\r\n        <FormGroup check>\r\n            <Input \r\n                type='checkbox'\r\n                name={props.name}\r\n                checked={props.checked}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n            <Label>{props.children}</Label>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SCheckField;","import SDateField from './SDateField';\r\nexport default SDateField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Label } from 'reactstrap';\r\n\r\nimport SDatePicker from '@components/shared/SDatePicker';\r\n\r\nconst SDateField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <SDatePicker\r\n                date={props.date}\r\n                form={true}\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SDateField;","import SSelectField from './SSelectField';\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst SSelectField = (props) => {\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.children}</Label>\r\n            <Input\r\n                type='select'\r\n                name={props.name}\r\n                onChange={(e) => { props.onChange(e); }}\r\n                value={props.value}>\r\n                {props.options.map((opt, i) => {\r\n                    return <option key={i} value={opt.value}>\r\n                        {opt.title}\r\n                    </option>\r\n                })}\r\n            </Input>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SSelectField;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nexport const genders = [\r\n    { title: 'Femenino', value: 'F' },\r\n    { title: 'Masculino', value: 'M' }\r\n];\r\n\r\nexport const users = [\r\n    { title: 'Paciente', value: 1 },\r\n    { title: 'Terapeuta', value: 2 }\r\n];","import SAUserForm from './SAUserForm';\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Form, Row } from 'reactstrap';\r\n\r\nimport SCheckField from '@components/shared/form/SCheckField';\r\nimport SDateField from '@components/shared/form/SDateField';\r\nimport SInputField from '@components/shared/form/SInputField';\r\nimport SSelectField from '@components/shared/form/SSelectField';\r\nimport SSubmitField from '@components/shared/form/SSubmitField';\r\n\r\nimport { genders, users } from '@data/form';\r\nimport { checkUserFields } from '@utils/user';\r\n\r\nclass SAUserForm extends Component {\r\n    render() {\r\n        const disabled = this.props.update ? true : false;\r\n        return(\r\n            <Form>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.name.error}\r\n                            name='name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.name.value}>\r\n                            Nombre *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.last_name.error}\r\n                            name='last_name'\r\n                            onChange={this.onChange}\r\n                            value={this.state.last_name.value}>\r\n                            Apellido *\r\n                        </SInputField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField \r\n                    error={this.state.email.error} \r\n                    name='email' \r\n                    onChange={this.onChange}\r\n                    value={this.state.email.value}>\r\n                    Email *\r\n                </SInputField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField\r\n                            disabled={disabled} \r\n                            error={this.state.id.error}\r\n                            name='id'\r\n                            onChange={this.onChange}\r\n                            value={this.state.id.value}>\r\n                            Identificación *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SDateField\r\n                            date={this.state.birthday_date.value}\r\n                            name='birthday_date'\r\n                            onChange={this.onChange}>\r\n                            Fecha de nacimiento *\r\n                        </SDateField>\r\n                    </Col>\r\n                </Row>\r\n                <SSelectField\r\n                    name='gender'\r\n                    onChange={this.onChange}\r\n                    options={genders}\r\n                    value={this.state.gender.value}>\r\n                    Género *\r\n                </SSelectField>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <SInputField \r\n                            error={this.state.username.error}\r\n                            name='username'\r\n                            onChange={this.onChange}\r\n                            value={this.state.username.value}>\r\n                            Nombre de usuario *\r\n                        </SInputField>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <SSelectField\r\n                            name='id_role'\r\n                            onChange={this.onChange}\r\n                            options={users}\r\n                            value={this.state.id_role.value}>\r\n                            Tipo de usuario *\r\n                        </SSelectField>\r\n                    </Col>\r\n                </Row>\r\n                <SInputField\r\n                    error={this.state.password.error}\r\n                    form='admin'\r\n                    name='password'\r\n                    onChange={this.onChange}\r\n                    value={this.state.password.value}>\r\n                    Contraseña *\r\n                </SInputField>\r\n                <SCheckField \r\n                    name='active'\r\n                    checked={this.state.active.value}\r\n                    onChange={this.onChange}>\r\n                    ¿Este usuario está activo?\r\n                </SCheckField>\r\n                {this.state.id_role.value === 2 && <SCheckField \r\n                    name='is_admin'\r\n                    checked={this.state.is_admin.value}\r\n                    onChange={this.onChange} >\r\n                    ¿Este usuario es administrador?\r\n                </SCheckField>}\r\n                <SSubmitField\r\n                    className='secondary-btn mt-4 w-100'\r\n                    loading={this.props.loading}\r\n                    onClick={this.onSaveClicked}>\r\n                    Guardar\r\n                </SSubmitField>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: { value: true },\r\n            birthday_date: { value: new Date() },\r\n            email: { value: '', error: null },\r\n            gender: { value: 'F' },\r\n            id: { value: '', error: null },\r\n            is_admin: { value: false },\r\n            last_name: { value: '', error: null },\r\n            name: { value: '', error: null },\r\n            password: { value: '', error: null },\r\n            username: { value: '', error: null },\r\n            id_role: { value: 1 },\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSaveClicked = this.onSaveClicked.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user && this.props.user !== prevProps.user)\r\n            this.setState({...this.props.user});\r\n    }\r\n\r\n    /** Métodos extra */\r\n    buildUserData() {\r\n        const keys = Object.keys(this.state);\r\n        let userData = {};\r\n        keys.forEach(key => {\r\n            let { value } = this.state[key];\r\n            if (key === 'name' || key === 'last_name' || key === 'email' ||\r\n                key === 'id' || key === 'username' || key === 'password')\r\n                value = value.trim();\r\n\r\n            userData[key] = value;\r\n        });\r\n\r\n        return userData;\r\n    }\r\n\r\n    onChange(e) {\r\n        let { name, value } = e.target;\r\n        if (name === 'active' || name === 'is_admin')\r\n            value = !this.state[name].value;\r\n        else if (name === 'id_role') \r\n            value = parseInt(value, 10);\r\n\r\n        /** Asignar el valor y resetear el error */\r\n        let field = this.state[name];\r\n        field.value = value;\r\n        if (field.error) field.error = null;\r\n        \r\n        this.setState({ [name]: field });\r\n    }\r\n\r\n    onSaveClicked(e) {\r\n        e.preventDefault();\r\n        if (!this.props.loading) {\r\n            const { update } = this.props;\r\n            const check = checkUserFields(this.state, update);\r\n            if (!check.hasErrors) {\r\n                const userData = this.buildUserData();\r\n                this.props.onSave(userData);\r\n            }\r\n            else\r\n                this.setState({...check.user});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SAUserForm;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport styles from './SAUpdateUserPage.module.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    getUser,\r\n    updateUser,\r\n    setToUpdate \r\n} from '@actions/user';\r\nimport { register } from '@actions/auth';\r\nimport { uploadProfileImage } from '@actions/plugin';\r\nimport { setNotification } from '@actions/ui';\r\n\r\nimport SAImageLoader from '@components/admin/SAImageLoader';\r\nimport SAUserForm from '@components/admin/SAUserForm';\r\nimport STLayout from '@components/layout/STLayout';\r\n\r\nimport { buildRandomColor, buildUserAlias } from '@utils/user';\r\n\r\nclass SAUpdateUserPage extends Component {\r\n    render() {\r\n        const { uid } = this.props.match.params;\r\n        const title = uid ? 'Editar usuario' : 'Crear usuario';\r\n        const { update, user } = this.state;\r\n        \r\n        return(\r\n            <STLayout pt={50}>\r\n                <div className={styles.title}>{title}</div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.formContainer}>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <SAImageLoader onImageLoaded={this.onImageLoaded} />\r\n                            </Col>\r\n                            <Col md={8}>\r\n                                <p className={styles.userData}>\r\n                                    Datos del usuario\r\n                                </p>\r\n                                <SAUserForm \r\n                                    loading={this.state.loading}\r\n                                    onSave={this.onSave}\r\n                                    update={update}\r\n                                    user={user} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </STLayout>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { image: null, loading: false, update: false, user: null };\r\n        this.onImageLoaded = this.onImageLoaded.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { uid } = this.props.match.params;\r\n        if (this.props.toUpdate)\r\n            this.prepareUserForUpdate();\r\n        else if (uid)\r\n            this.getUserToUpdate(uid);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.toUpdate && !this.state.user)\r\n            this.prepareUserForUpdate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setToUpdate(null);\r\n    }\r\n\r\n    /** Métodos extra */\r\n    getUserToUpdate(id) {\r\n        this.props.getUser(id, true);\r\n    }\r\n\r\n    prepareUserForUpdate() {\r\n        const { toUpdate } = this.props;\r\n        const user = {\r\n            id: { value: toUpdate.id, error: null },\r\n            active: { value: toUpdate.active },\r\n            birthday_date: { value: new Date(toUpdate.birthday_date) },\r\n            email: { value: toUpdate.email, error: null },\r\n            gender: { value: toUpdate.gender },\r\n            is_admin: { value: toUpdate.is_admin },\r\n            last_name: { value: toUpdate.last_name, error: null },\r\n            name: { value: toUpdate.name, error: null },\r\n            username: { value: toUpdate.username, error: null },\r\n            id_role: { value: toUpdate.Role.id },\r\n        };\r\n        this.setState({ update: true, user });\r\n    }        \r\n\r\n    /** Eventos */\r\n    onImageLoaded(image) {\r\n      this.setState({ image });\r\n    }\r\n\r\n    async onSave(formData) {\r\n        let userData = Object.assign({}, formData);\r\n        if (userData.password.trim() === '') delete userData.password;\r\n\r\n        /** Completar algunos campos */\r\n        const alias = buildUserAlias(userData.name, userData.last_name);\r\n        userData['thumbnail_alias'] = alias;\r\n            \r\n        const { update } = this.state;\r\n        if (!update) { /** Crear usuario */\r\n            userData['color'] = buildRandomColor();\r\n            if (userData.id_role === 2)\r\n                userData['id_avatar_variation'] = 1;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n        /** Si se seleccionó una imagen, guardarla en el backend y obtener el path */\r\n        if (this.state.image) {\r\n          const blob = this.state.image;\r\n          const name = `${formData.username}.png`;\r\n          const res = await this.props.uploadProfileImage(blob, name);\r\n          if (!res.error) {\r\n            const { path } = res.data;\r\n            userData['profile_img'] = path;\r\n          }\r\n        }\r\n\r\n        const { tid } = this.props.match.params;        \r\n        const response = update ? \r\n                         await this.props.updateUser(userData, tid) \r\n                         :\r\n                         await this.props.register(userData);\r\n            \r\n        const { error, message } = response;\r\n        \r\n        this.setState({ loading: false });\r\n        this.props.setNotification({ error, message, slide: true });\r\n        this.props.history.goBack();\r\n    }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toUpdate: state.user.toUpdate\r\n    };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getUser,\r\n    register,\r\n    updateUser,\r\n    uploadProfileImage,\r\n    setNotification,\r\n    setToUpdate\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(SAUpdateUserPage);","import SAUpdateUserPage from './SAUpdateUserPage';\r\nexport default SAUpdateUserPage;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  showMobileMenu, \r\n  setFullScreen, \r\n  setNotification,\r\n  setWindowWidth, \r\n  setVOffset \r\n} from '@actions/ui';\r\nimport { ping, setConnectedId } from '@actions/connection';\r\nimport Speaker from '@utils/Speaker';\r\nimport Messenger from '@utils/Messenger';\r\nimport ServerStatus from '@utils/ServerStatus';\r\n\r\n/** Import de componentes */\r\nimport SAvatar from '@components/shared/SAvatar';\r\nimport SBubbleNotification from '@components/shared/SBubbleNotification';\r\nimport SHeaderBar from '@components/shared/SHeaderBar';\r\nimport SMobileAvatar from '@components/mobile/SMobileAvatar';\r\nimport SMobileMenu from '@components/mobile/SMobileMenu';\r\nimport SModal from '@components/shared/SModal';\r\nimport SProtectedRoute from '@components/SProtectedRoute';\r\n\r\n/** Importar pages */\r\nimport SLandingPage from '@pages/shared/SLandingPage';\r\nimport SProfilePage from '@pages/shared/SProfilePage';\r\nimport SPActivitiesPage from '@pages/patient/SPActivitiesPage';\r\nimport SPCollectableInfoPage from '@pages/patient/SPCollectableInfoPage';\r\nimport SPCollectionsPage from '@pages/patient/SPCollectionsPage';\r\nimport SPLandingPage from '@pages/patient/SPLandingPage';\r\nimport SPPlayPage from '@pages/patient/SPPlayPage';\r\nimport STActivitiesPage from '@pages/therapist/STActivitiesPage';\r\nimport STConfigurationPage from '@pages/therapist/STConfigurationPage';\r\nimport STFeedbackPage from '@pages/therapist/STFeedbackPage';\r\nimport STLandingPage from '@pages/therapist/STLandingPage';\r\nimport STPatientsPage from '@pages/therapist/STPatientsPage';\r\nimport SAUsersPage from '@pages/admin/SAUsersPage';\r\nimport SAUpdateUserPage from '@pages/admin/SAUpdateUserPage';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.ui.parallax && <div className='App-parallax-bg'></div>}\r\n        <SHeaderBar />\r\n        {\r\n          /** Bloque para mostrar el avatar */\r\n          this.props.ui.showAvatar ?\r\n            this.props.ui.windowWidth >= 768 ?\r\n            <div \r\n              className='flex avatar-container'\r\n              style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n              <SAvatar />\r\n            </div>\r\n            : <SMobileAvatar />\r\n          : null\r\n        }\r\n        { this.props.ui.modal && <SModal /> }\r\n        { /** Bloque para mostrar el menú móvil */\r\n          this.props.ui.showMobileMenu && <SMobileMenu /> }\r\n        \r\n        { /** Bloque para mostrar las notificaciones */ \r\n          this.props.ui.notification &&\r\n          <SBubbleNotification /> }\r\n        \r\n        {/** Rutas */}\r\n        <Container \r\n          className='App-container' \r\n          fluid \r\n          style={{'--vOffset': `${this.props.ui.vOffset}px`}}>\r\n          <Switch>\r\n            <Route exact path='/' component={SLandingPage} />\r\n\r\n            {/** Rutas para paciente */}\r\n            <Route\r\n              exact \r\n              path='/paciente' \r\n              component={SPLandingPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades'\r\n              component={SPActivitiesPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones'\r\n              component={SPCollectionsPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/paciente/:pid/colecciones/:id/coleccionable/:cid'\r\n              component={SPCollectableInfoPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/paciente/:pid/actividades/:aid/sesiones/:sid'\r\n              component={SPPlayPage} />\r\n\r\n            {/** Rutas para terapeuta */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/perfil'\r\n              component={SProfilePage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes/:pid/actividades'\r\n              component={STActivitiesPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/configuracion' \r\n              component={STConfigurationPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:aid/:kind'\r\n              component={STFeedbackPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/pacientes/:pid/actividades/:kind'\r\n              component={STFeedbackPage} />\r\n            <Route\r\n              exact \r\n              path='/terapeuta' \r\n              component={STLandingPage} />\r\n            <SProtectedRoute\r\n              exact \r\n              path='/terapeuta/:tid/pacientes' \r\n              component={STPatientsPage} />\r\n            \r\n            {/** Rutas relacionadas al administrador */}\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/admin'\r\n              component={SAUsersPage} />\r\n            <SProtectedRoute \r\n              exact\r\n              path='/terapeuta/:tid/nuevo'\r\n              component={SAUpdateUserPage} />\r\n            <SProtectedRoute\r\n              exact\r\n              path='/terapeuta/:tid/editar/:uid'\r\n              component={SAUpdateUserPage} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.calculateVOffset = this.calculateVOffset.bind(this);\r\n    this.setWindowSize = this.setWindowSize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.setWindowSize);\r\n    this.calculateVOffset(window.innerWidth);\r\n    Speaker.init('es-MX');\r\n    this.status = new ServerStatus(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) { \r\n      this.calculateVOffset(window.innerWidth);\r\n\r\n      const { connectSocket, checkServerStatus } = this.props.connection;\r\n      if (connectSocket !== prevProps.connection.connectSocket)\r\n        Messenger.handleConnection(this.props.connection, this);\r\n      \r\n      if (checkServerStatus !== prevProps.connection.checkServerStatus)\r\n        this.checkServerStatus(checkServerStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.setWindowSize);\r\n  }\r\n\r\n  /** Métodos extra */\r\n  calculateVOffset(windowWidth) {\r\n    const vOffset = this.props.ui.showAvatar && windowWidth < 768 ? 182 : 62;\r\n    if (!this.props.ui.vOffset || vOffset !== this.props.ui.vOffset) \r\n      this.props.setVOffset(vOffset);\r\n  }\r\n\r\n  checkServerStatus(check) {\r\n    this.status.checkServerStatus(check, false, Messenger);\r\n  }\r\n\r\n  setWindowSize() {\r\n    const windowWidth = window.innerWidth;\r\n    this.props.setWindowWidth(windowWidth);\r\n    if (windowWidth >= 768) this.props.showMobileMenu(false);\r\n    this.calculateVOffset(windowWidth);\r\n  }\r\n}\r\n\r\n/** Elementos del store */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    connection: state.connection,\r\n    ui: state.ui,\r\n  };\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  ping,\r\n  setConnectedId,\r\n  showMobileMenu,\r\n  setFullScreen,\r\n  setNotification,\r\n  setVOffset,\r\n  setWindowWidth,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(App);","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    REMOVE_ACTIVITY,\r\n    SET_ACTIVITIES,\r\n    SET_ACTIVITY, \r\n    SET_SELECTED_SESSION,\r\n    SET_SESSIONS,\r\n    UPDATE_ACTIVITY,\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    activities: null,\r\n    activity: null,\r\n    sessions: null,\r\n    session: null\r\n};\r\n\r\nconst activityReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ACTIVITY:\r\n            const activityId = action.payload.id;\r\n            let activitiesForRemoval = state.activities;            \r\n            delete activitiesForRemoval[activityId];\r\n\r\n            /** Si el objto de actividades no tiene información, igualarlo a valor nulo */\r\n            if (Object.values(activitiesForRemoval).length === 0) activitiesForRemoval = null;\r\n\r\n            return { ...state, activities: activitiesForRemoval };\r\n\r\n        case SET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload.activities\r\n            };\r\n\r\n        case SET_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                activity: action.payload.activity\r\n            };\r\n        \r\n        case SET_SESSIONS:\r\n            return {\r\n                ...state,\r\n                sessions: action.payload.sessions\r\n            };\r\n        \r\n        case SET_SELECTED_SESSION: {\r\n            return {\r\n                ...state,\r\n                session: action.payload.session\r\n            };\r\n        }\r\n\r\n        case UPDATE_ACTIVITY:\r\n            const updatedActivity = action.payload.activity;\r\n            const id = updatedActivity.id;\r\n            let activitiesForUpdate = state.activities;\r\n\r\n            activitiesForUpdate[id] = updatedActivity;\r\n\r\n            return { ...state, activities: activitiesForUpdate };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activityReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.1\r\n */\r\n\r\nimport {\r\n    SET_PATIENT_TOKEN,\r\n    SET_THERAPIST_TOKEN\r\n} from '../actions/types';\r\n\r\nimport { PATIENT, THERAPIST } from '@data/roles';\r\n\r\nconst PATIENT_TOKEN = `${PATIENT}Token`;\r\nconst THERAPIST_TOKEN = `${THERAPIST}Token`;\r\n\r\nlet initialState = {\r\n    [PATIENT_TOKEN]: localStorage.getItem(PATIENT_TOKEN) || null,\r\n    [THERAPIST_TOKEN]: localStorage.getItem(THERAPIST_TOKEN) || null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PATIENT_TOKEN:\r\n            return {\r\n                ...state,\r\n                [PATIENT_TOKEN]: action.payload.token\r\n            };\r\n\r\n        case SET_THERAPIST_TOKEN:\r\n            return {\r\n                ...state,\r\n                [THERAPIST_TOKEN]: action.payload.token\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_AVATAR_MESSAGE,\r\n    SET_AVATAR_VARIATION,\r\n    SET_AVATAR_VARIATIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    message: null,\r\n    variations: null,\r\n}\r\n\r\nconst avatarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AVATAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            };\r\n\r\n        case SET_AVATAR_VARIATION:\r\n            const { variation } = action.payload;\r\n            let variations  = Object.values(state.variations);\r\n            /** Recorrer las variaciones */\r\n            let index = 0;\r\n            variations.forEach((v, i) => {\r\n                if (variation.id === v.id && variation.id_avatar === v.id_avatar)\r\n                    index = i;\r\n            });\r\n            /** Reemplazar la variación */\r\n            variations[index] = variation;\r\n\r\n            variations = Object.assign({}, ...variations.map(v => {\r\n                return { [v.id]: v };\r\n            }));\r\n\r\n            return { ...state, variations };\r\n\r\n        case SET_AVATAR_VARIATIONS:\r\n            return {\r\n                ...state,\r\n                variations: action.payload.variations\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default avatarReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_COLLECTIONS,\r\n    SET_COLLECTABLE,\r\n    SET_USER_SKIN_OWNED,\r\n    SET_USER_SKINS_OWNED,\r\n} from \"../actions/types\";\r\n\r\nlet initialState = {\r\n    collections: null,\r\n    collectable: null,\r\n};\r\n\r\nconst collectionReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_COLLECTIONS:\r\n            return {\r\n                ...state,\r\n                collections: action.payload.collections\r\n            };\r\n\r\n        \r\n        case SET_COLLECTABLE:\r\n            return {\r\n                ...state,\r\n                collectable: action.payload.collectable\r\n            };\r\n\r\n\r\n        case SET_USER_SKIN_OWNED:\r\n            const data = action.payload.data;\r\n            const collectableId = data.collectableId;\r\n            const collectionId = data.collectionId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const collections = state.collections;\r\n            const collection = collections[collectionId];\r\n            const Collectables = collection.Collectables;\r\n            const collectable = Collectables[collectableId];\r\n            const Skins = collectable.Skins;\r\n\r\n            return {\r\n                ...state,\r\n                collections: {\r\n                    ...collections,\r\n                    [collectionId]: {\r\n                        ...collection,\r\n                        Collectables: {\r\n                            ...Collectables,\r\n                            [collectableId]: {\r\n                                ...collectable,\r\n                                Skins: {\r\n                                    ...Skins,\r\n                                    owned: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        \r\n        case SET_USER_SKINS_OWNED:\r\n            const _data = action.payload.data;\r\n            const _skinId = _data.skinId;\r\n\r\n            /** Navegar por el objeto usando los ids del data */\r\n            const _collectable = state.collectable;\r\n            const _Skins = _collectable.Skins;\r\n            const skin = _Skins[_skinId];\r\n\r\n            return {\r\n                ...state,\r\n                collectable: {\r\n                    ..._collectable,\r\n                    Skins: {\r\n                        ..._Skins,\r\n                        [_skinId]: {\r\n                            ...skin,\r\n                            owned: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default collectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_CONFIGURATION,\r\n    SET_CONFIGURATION\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    configuration: null\r\n}\r\n\r\nconst configurationReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case RESET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: null\r\n            };\r\n        \r\n        case SET_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: action.payload.configuration\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default configurationReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_CHECK_SERVER_STATUS,\r\n    SET_CONNECTED_ID, \r\n    SET_CONNECT_SOCKET \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    checkServerStatus: false,\r\n    connectedId: null,\r\n    connectSocket: false\r\n};\r\n\r\nconst connectionReducer = (state = initialState, action) => {\r\n    switch (action.type) {        \r\n        case SET_CHECK_SERVER_STATUS:\r\n            return {\r\n                ...state,\r\n                checkServerStatus: action.payload.check\r\n            };\r\n\r\n        case SET_CONNECTED_ID:\r\n            return {\r\n                ...state,\r\n                connectedId: action.payload.connectedId\r\n            };\r\n            \r\n        case SET_CONNECT_SOCKET:\r\n            return {\r\n                ...state,\r\n                connectSocket: action.payload.connectSocket\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default connectionReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    RESET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_OPTIONS,\r\n    SET_DYNAMIC_SELECTED_OPTIONS\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        first: true,\r\n        multichoice: false,\r\n        next: 'situations',\r\n        options: null,\r\n        reset: [ 'situations', 'times', 'reader' ], \r\n        subtitle: `Selecciona la mecánica de la actividad que deseas trabajar\r\n                    con tu paciente. Esta selección desbloquea las situaciones\r\n                    que se pueden trabajar en la actividad.`,\r\n        title: '1. Mecánica de la actividad',\r\n    },\r\n    situations: {\r\n        id: 'situations',\r\n        multichoice: false,\r\n        next: 'times',\r\n        options: null,\r\n        required: [ 'mechanic' ],\r\n        reset: [ 'times', 'reader' ],\r\n        subtitle: `Elige una situación particular para trabajar en la actividad.\r\n                    Esta selección desbloquea los tiempos gramaticales.`,\r\n        title: '2. Situaciones',\r\n    },\r\n    times: {\r\n        id: 'times',\r\n        multichoice: false,\r\n        next: 'reader',\r\n        options: null,\r\n        reset: [ 'reader' ],\r\n        subtitle: `Selecciona el tiempo gramatical (pasado, presente, futuro...)\r\n                    que deseas trabajar en la actividad.`,\r\n        title: '3. Tiempos gramaticales',\r\n    },\r\n    reader: {\r\n        id: 'reader',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        reset: null,\r\n        subtitle: `Selecciona si tu paciente cuenta con proceso lector o no.`,\r\n        title: '4. ¿El paciente cuenta con proceso lector?',\r\n    }\r\n}\r\n\r\nconst dynamicReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n\r\n    switch(action.type) {\r\n        case RESET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_DYNAMIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            /** Obtener la lista de opciones del field */\r\n            let options = Object.values({ ...field.options });\r\n            let optionId = action.payload.optionId;\r\n            /** Marcar como seleccionada la opción elegida */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dynamicReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_FEEDBACK_DATA,\r\n    SET_FEEDBACK_DATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    feedDate: new Date(),\r\n    feedData: null\r\n};\r\n\r\nconst feedbackReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_FEEDBACK_DATA:\r\n            return {\r\n                ...state,\r\n                feedData: action.payload.feedData\r\n            };\r\n        \r\n        case SET_FEEDBACK_DATE:\r\n            return {\r\n                ...state,\r\n                feedDate: action.payload.feedDate\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default feedbackReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    REMOVE_PATIENT,\r\n    SET_PATIENT, \r\n    SET_PATIENTS, \r\n    SET_SELECTED_PATIENT\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    patients: null,\r\n    patient: null,\r\n};\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_PATIENT:\r\n            const { _association } = action.payload;\r\n            /** Obtener los ids de la asociación */\r\n            const { _id_therapist, _id_patient } = _association;\r\n            const _patient = state.patients[_id_patient];\r\n\r\n            /** Verificar que opción está teniendo lugar */\r\n            if (_patient.Therapists_Patients) { /** my */\r\n                let _patients = { ...state.patients };\r\n                delete _patients[_id_patient];\r\n\r\n                return { ...state, patients: _patients };\r\n            }\r\n            else { /** all */\r\n                let _Therapists = { ..._patient.Therapists };\r\n                delete _Therapists[_id_therapist];\r\n                \r\n                return {\r\n                    ...state, patients: {\r\n                        ...state.patients, [_id_patient]: {\r\n                            ..._patient, 'Therapists': _Therapists\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n        \r\n        case SET_PATIENT:\r\n            const { association } = action.payload;\r\n            const { id_therapist, id_patient } = association;\r\n            const patient = state.patients[id_patient];\r\n            const { Therapists } = patient;\r\n\r\n            return {\r\n                ...state, patients: {\r\n                    ...state.patients, [id_patient]: {\r\n                        ...patient, 'Therapists': {\r\n                            ...Therapists, [id_therapist]: association\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        \r\n        case SET_PATIENTS:\r\n            return {\r\n                ...state,\r\n                patients: action.payload.patients\r\n            }\r\n\r\n        case SET_SELECTED_PATIENT:\r\n            return {\r\n                ...state,\r\n                patient: action.payload.patient\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default patientReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    ADD_STATIC_SELECTED_OPTION,   \r\n    RESET_STATIC_OPTIONS,\r\n    SET_STATIC_OPTIONS,\r\n    SET_STATIC_SELECTED_OPTIONS \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    category: {\r\n        id: 'category',\r\n        first: true,\r\n        next: 'subcategory',\r\n        multichoice: false,\r\n        options: null,\r\n        reset: [ 'subcategory', 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una categoría semántica para desbloquear la opción\r\n                    Subcategoría semántica.`,\r\n        title: '1. Categoría semántica',\r\n    },\r\n    subcategory: {\r\n        id: 'subcategory',\r\n        multichoice: false,\r\n        next: 'sintactic',\r\n        options: null,\r\n        required: [ 'category' ],\r\n        reset: [ 'sintactic', 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige una de las subcategorías semánticas asociadas a la\r\n                    categoría semántica elegida. Esta selección desbloquea la\r\n                    opción Estructura sintáctica.`,\r\n        title: '2. Subcategoría semántica',\r\n    },\r\n    sintactic: {\r\n        id: 'sintactic',\r\n        multichoice: false,\r\n        next: 'vocabulary',\r\n        options: null,\r\n        reset: [ 'vocabulary', 'mechanic' ],\r\n        subtitle: `Elige la estructura sintáctica que deseas trabajar con tu\r\n                    paciente y desbloquea el vocabulario asociado.`,\r\n        title: '3. Estructura sintáctica',\r\n    },\r\n    vocabulary: {\r\n        id: 'vocabulary',\r\n        minimum: 3,\r\n        multichoice: true,\r\n        next: 'mechanic',\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: [ 'mechanic' ],\r\n        subtitle: `Elige las palabras asociadas que quieres trabajar con tu\r\n                    paciente en la actividad (mínimo 3). Al elegir el vocabulario\r\n                    se desbloquea la mecánica de la actividad.`,\r\n        title: '4. Vocabulario asociado',\r\n    },\r\n    mechanic: {\r\n        id: 'mechanic',\r\n        multichoice: false,\r\n        next: null,\r\n        options: null,\r\n        required: [ 'subcategory', 'sintactic' ],\r\n        reset: null,\r\n        subtitle: `Elige la mecánica de la actividad que deseas trabajar con\r\n                    tu paciente.`,\r\n        title: '5. Mecánica de la actividad',\r\n    }\r\n}\r\n\r\nconst staticReducer = (state = initialState, action) => {\r\n    let field;\r\n    let fieldId;\r\n    let optionId;\r\n    let options;\r\n\r\n    switch(action.type) {\r\n        case ADD_STATIC_SELECTED_OPTION:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            optionId = action.payload.optionId;\r\n            options = { ...field.options };\r\n\r\n            /** Marcar como seleccionada o no la opción elegida */\r\n            let option = options[optionId];\r\n            option.selected = option.selected ? !option.selected: true;\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: { ...field, options }\r\n            };\r\n\r\n        case RESET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: null\r\n                }\r\n            };\r\n        \r\n        case SET_STATIC_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            field = state[fieldId];\r\n\r\n            return {\r\n                ...state,\r\n                [fieldId]: {\r\n                    ...field,\r\n                    options: action.payload.options\r\n                }\r\n            };\r\n\r\n        case SET_STATIC_SELECTED_OPTIONS:\r\n            fieldId = action.payload.fieldId;\r\n            optionId = action.payload.optionId;\r\n\r\n            field = state[fieldId];\r\n            options = Object.values({ ...field.options });\r\n            /** Remover las selecciones */\r\n            options.forEach(option => {\r\n                option.selected = option.id === optionId ? true : false;\r\n            });\r\n            /** Convertir las opciones a un objeto */\r\n            options = Object.assign({}, ...options.map((option) => {\r\n                return { [option.id]: option };\r\n            }));\r\n\r\n            return {\r\n                ...state,\r\n                [field.id]: { ...field, options } \r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staticReducer;","/**\r\n * @author Martín Vladimir Alonsos Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport {\r\n    SET_BAR,\r\n    SET_FULLSCREEN,\r\n    SET_MODAL,\r\n    SET_NOTIFICATION,\r\n    SET_PARALLAX,\r\n    SET_V_OFFSET,\r\n    SET_WINDOW_WIDTH,\r\n    SHOW_AVATAR,\r\n    SHOW_CREATE_ACTIVITY_BUTTON,\r\n    SHOW_MOBILE_MENU,\r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    bar: 'standard',\r\n    fullScreen: false,\r\n    modal: null,\r\n    notification: null,\r\n    parallax: false,\r\n    showAvatar: false,\r\n    showCreateActivityButton: false,\r\n    showMobileMenu: false,\r\n    vOffset: null,\r\n    windowWidth: window.innerWidth\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_BAR:\r\n            return {\r\n                ...state,\r\n                bar: action.payload.bar\r\n            };\r\n            \r\n        case SET_FULLSCREEN:\r\n            return {\r\n                ...state,\r\n                fullScreen: action.payload.fullScreen\r\n            };\r\n\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.payload.modal\r\n            };\r\n        \r\n        case SET_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notification: action.payload.notification\r\n            };\r\n\r\n        case SET_PARALLAX:\r\n            return {\r\n                ...state,\r\n                parallax: action.payload.parallax\r\n            };\r\n\r\n        case SET_V_OFFSET:\r\n            return {\r\n                ...state,\r\n                vOffset: action.payload.vOffset\r\n            };\r\n\r\n        case SET_WINDOW_WIDTH:\r\n            return {\r\n                ...state,\r\n                windowWidth: action.payload.width\r\n            };\r\n\r\n        case SHOW_AVATAR:\r\n            return {\r\n                ...state,\r\n                showAvatar: action.payload.show\r\n            }\r\n\r\n        case SHOW_CREATE_ACTIVITY_BUTTON:\r\n            return {\r\n                ...state,\r\n                showCreateActivityButton: action.payload.show\r\n            };\r\n        \r\n        case SHOW_MOBILE_MENU:\r\n            return {\r\n                ...state,\r\n                showMobileMenu: action.payload.show\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { \r\n    SET_USER, \r\n    SET_USERS,\r\n    SET_TO_UPDATE \r\n} from '../actions/types';\r\n\r\nlet initialState = {\r\n    user: null,\r\n    users: null,\r\n    toUpdate: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            };\r\n\r\n        case SET_TO_UPDATE:\r\n            return {\r\n                ...state,\r\n                toUpdate: action.payload.user\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { combineReducers } from 'redux';\r\n/** Imports de los reducers */\r\nimport activityReducer from './activity';\r\nimport authReducer from './auth';\r\nimport avatarReducer from './avatar';\r\nimport collectionReducer from './collection';\r\nimport configurationReducer from './configuration';\r\nimport connectionReducer from './connection';\r\nimport dynamicReducer from './dynamic';\r\nimport feedbackReducer from './feedback';\r\nimport patientReducer from './patient';\r\nimport staticReducer from './static';\r\nimport uiReducer from './ui';\r\nimport userReducer from './user';\r\n\r\n/** Combinar reducers */\r\nconst allReducers = combineReducers({\r\n    activity: activityReducer,\r\n    auth: authReducer,\r\n    avatar: avatarReducer,\r\n    collection: collectionReducer,\r\n    configuration: configurationReducer,\r\n    connection: connectionReducer,\r\n    dynamic: dynamicReducer,\r\n    feedback: feedbackReducer,\r\n    patient: patientReducer,\r\n    static: staticReducer,\r\n    ui: uiReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default allReducers;","/**\r\n * @author Martín Vladimir Alonso Sierra Galvis\r\n * @maintainer Martín Vladimir Alonso Sierra Galvis\r\n * @version 1.0.0\r\n */\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst composedEnhancers = composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\n/** Crear el store de redux */\r\nconst store = createStore(\r\n    allReducers,\r\n    composedEnhancers,\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SUserNav_container__piflN\",\"link\":\"SUserNav_link__1lXdk\",\"uimage\":\"SUserNav_uimage__JCXUR\",\"thumb\":\"SUserNav_thumb__2Xh2m\",\"linksContainer\":\"SUserNav_linksContainer__1HsbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenu_container__2Yxhb\",\"image\":\"SMenu_image__3j8T_\",\"item\":\"SMenu_item__2y48J\",\"menu\":\"SMenu_menu__1wwem\",\"name\":\"SMenu_name__2VPRa\",\"toggle\":\"SMenu_toggle__3ImI5\",\"thumb\":\"SMenu_thumb__1bxk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPCollectable_btn__3F17S\",\"btnBuy\":\"SPCollectable_btnBuy__11AV6\",\"cannotBuy\":\"SPCollectable_cannotBuy__214jT\",\"collectableImg\":\"SPCollectable_collectableImg__3cZqV\",\"container\":\"SPCollectable_container__CqgDH\",\"info\":\"SPCollectable_info__3Xpgw\",\"owned\":\"SPCollectable_owned__2OLUo\",\"name\":\"SPCollectable_name__3fJXU\",\"points\":\"SPCollectable_points__HH131\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"STActivitiesPage_container__Dkttc\",\"listContainer\":\"STActivitiesPage_listContainer__3H82W\",\"link\":\"STActivitiesPage_link__Zp_iB\",\"title\":\"STActivitiesPage_title__3hloJ\",\"titleContainer\":\"STActivitiesPage_titleContainer__15GGo\",\"btn\":\"STActivitiesPage_btn__10Nfo\",\"btnContainer\":\"STActivitiesPage_btnContainer___q4t_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STConfigurationPage_btn__2Q1aY\",\"btnContainer\":\"STConfigurationPage_btnContainer__2lvgp\",\"btnSelected\":\"STConfigurationPage_btnSelected__3TLjP\",\"container\":\"STConfigurationPage_container__1SfrO\",\"create\":\"STConfigurationPage_create__V1e0R\",\"createContainer\":\"STConfigurationPage_createContainer__ejmW4\",\"title\":\"STConfigurationPage_title__SAFHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STSession_btn__1HRAO\",\"container\":\"STSession_container__3BTNV\",\"date\":\"STSession_date__1obRt\",\"first\":\"STSession_first__305GI\",\"innerContainer\":\"STSession_innerContainer__267Re\",\"last\":\"STSession_last__9rLEC\",\"selected\":\"STSession_selected__3sDgP\",\"time\":\"STSession_time__AqmmZ\",\"title\":\"STSession_title__3nRh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Feedback_subtitle__2jAva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"SBubbleNotification_border__2HzhK\",\"container\":\"SBubbleNotification_container__1FKzp\",\"containerDesktop\":\"SBubbleNotification_containerDesktop__rEvZS\",\"slide\":\"SBubbleNotification_slide__1vY3y\",\"containerMobile\":\"SBubbleNotification_containerMobile__3rxZT\",\"slide-mobile\":\"SBubbleNotification_slide-mobile__1HxUQ\",\"error\":\"SBubbleNotification_error__30IdJ\",\"iconContainer\":\"SBubbleNotification_iconContainer__3mpCw\",\"message\":\"SBubbleNotification_message__3kJu1\",\"success\":\"SBubbleNotification_success__6BfMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"SMobileAvatar_buttons__18icT\",\"buttonIcon\":\"SMobileAvatar_buttonIcon__2LFyT\",\"buttonMargin\":\"SMobileAvatar_buttonMargin__2iV89\",\"container\":\"SMobileAvatar_container__Dg-y0\",\"image\":\"SMobileAvatar_image__kQP3-\",\"message\":\"SMobileAvatar_message__1VqAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SAvatarInfo_description__3-0RK\",\"title\":\"SAvatarInfo_title__2_kr2\",\"image\":\"SAvatarInfo_image__33PTx\",\"avatarSide\":\"SAvatarInfo_avatarSide__2ypT8\",\"container\":\"SAvatarInfo_container__1oU3a\",\"innerContainer\":\"SAvatarInfo_innerContainer__DZUKW\",\"sides\":\"SAvatarInfo_sides__2mJaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alias\":\"SUserHero_alias__30gX0\",\"col\":\"SUserHero_col__2-y6V\",\"container\":\"SUserHero_container__2HQOn\",\"header\":\"SUserHero_header__208gI\",\"row\":\"SUserHero_row__2JNLW\",\"userContainer\":\"SUserHero_userContainer__2iKG9\",\"uimage\":\"SUserHero_uimage__1pTXn\",\"uname\":\"SUserHero_uname__ahWoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPActivity_btn__31_lh\",\"btnContainer\":\"SPActivity_btnContainer__kCgAz\",\"container\":\"SPActivity_container__DgMeO\",\"gameContainer\":\"SPActivity_gameContainer__3PhTU\",\"gameDescription\":\"SPActivity_gameDescription__WhuKO\",\"gameTitle\":\"SPActivity_gameTitle__2kzT7\",\"gameImage\":\"SPActivity_gameImage__2yi6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSelected\":\"STPatientsPage_btnSelected__1YXjO\",\"listContainer\":\"STPatientsPage_listContainer__2Gd2S\",\"searchContainer\":\"STPatientsPage_searchContainer__3wZs0\",\"title\":\"STPatientsPage_title__ShvPl\",\"btn\":\"STPatientsPage_btn__3XsPy\",\"btnContainer\":\"STPatientsPage_btnContainer__2U2bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnEdit\":\"SAUser_btnEdit__31k6p\",\"container\":\"SAUser_container__3jGeH\",\"identification\":\"SAUser_identification__10yNg\",\"infoContainer\":\"SAUser_infoContainer__1c1tt\",\"name\":\"SAUser_name__2r1LZ\",\"thumb\":\"SAUser_thumb__3j8ix\",\"uimage\":\"SAUser_uimage__12AXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFile\":\"SAImageLoader_btnFile__yC3tC\",\"container\":\"SAImageLoader_container__1TFBc\",\"hidden\":\"SAImageLoader_hidden__22hCG\",\"hiddenImage\":\"SAImageLoader_hiddenImage__5cF78\",\"icon\":\"SAImageLoader_icon__gFXGj\",\"iconContainer\":\"SAImageLoader_iconContainer__1f591\",\"innerContainer\":\"SAImageLoader_innerContainer__wBoVn\",\"text\":\"SAImageLoader_text__nMsm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"SAvatar_buttons__2B6eR\",\"buttonIcon\":\"SAvatar_buttonIcon__1Rwdk\",\"container\":\"SAvatar_container__1p6Ra\",\"image\":\"SAvatar_image__f6nMg\",\"message\":\"SAvatar_message__36pWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SDevelop_container__HmJ_4\",\"innerContainer\":\"SDevelop_innerContainer__1B2tR\",\"icon\":\"SDevelop_icon__3Z57o\",\"logoImage\":\"SDevelop_logoImage__3Nyb1\",\"logoContainer\":\"SDevelop_logoContainer__2JtP6\",\"text\":\"SDevelop_text__19GGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alt\":\"SSkinItem_alt__cvVGs\",\"btn\":\"SSkinItem_btn__100ay\",\"btnContainer\":\"SSkinItem_btnContainer__1G1SF\",\"cannotBuy\":\"SSkinItem_cannotBuy__1dO63\",\"collectableImg\":\"SSkinItem_collectableImg__1L6kx\",\"container\":\"SSkinItem_container__26nnT\",\"owned\":\"SSkinItem_owned__3WvlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"STLogin_btn__3Kn5c\",\"btnForgot\":\"STLogin_btnForgot__1z5Kc\",\"container\":\"STLogin_container__2KaZ9\",\"error\":\"STLogin_error__1NxeV\",\"label\":\"STLogin_label__3ot6S\",\"title\":\"STLogin_title__zrpZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapse\":\"SNav_collapse__2uCCs\",\"container\":\"SNav_container__3BYn3\",\"link\":\"SNav_link__2b-Aa\",\"nav\":\"SNav_nav__2ju7l\",\"navItem\":\"SNav_navItem__3yLMc\",\"toggler\":\"SNav_toggler___z89_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMenuHeader_container__2AI3m\",\"email\":\"SMenuHeader_email__24phy\",\"image\":\"SMenuHeader_image__1tOAl\",\"name\":\"SMenuHeader_name__1VaY3\",\"thumb\":\"SMenuHeader_thumb__2X4El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SMobileMenu_btn__7TQ_l\",\"container\":\"SMobileMenu_container__jacuL\",\"linksContainer\":\"SMobileMenu_linksContainer__2x0sy\",\"menu\":\"SMobileMenu_menu__1s-WZ\",\"menuAppear\":\"SMobileMenu_menuAppear__nI2vG\",\"appearing\":\"SMobileMenu_appearing__1o-EH\",\"menuDissapear\":\"SMobileMenu_menuDissapear__1w5mU\",\"dissapearing\":\"SMobileMenu_dissapearing__1bsOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"microphone\":\"SNewComment_microphone__3_DNE\",\"microphoneText\":\"SNewComment_microphoneText__3dwnG\",\"notRecording\":\"SNewComment_notRecording__1vp6P\",\"recorderContainer\":\"SNewComment_recorderContainer__3VwhL\",\"recorded\":\"SNewComment_recorded__2zZxO\",\"recording\":\"SNewComment_recording__AsgWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SMobile_container__oh5ja\",\"description\":\"SMobile_description__14LjU\",\"image\":\"SMobile_image__117mR\",\"imageContainer\":\"SMobile_imageContainer__PDg_q\",\"innerContainer\":\"SMobile_innerContainer__3ytUQ\",\"title\":\"SMobile_title__1WjAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SProfilePage_btn__1Wku0\",\"container\":\"SProfilePage_container__2q-hR\",\"selected\":\"SProfilePage_selected__1AZjc\",\"options\":\"SProfilePage_options__pByhO\",\"optContainer\":\"SProfilePage_optContainer__1jqmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SPCollectableInfoPage_container__2pREu\",\"description\":\"SPCollectableInfoPage_description__n43HH\",\"descriptionTitle\":\"SPCollectableInfoPage_descriptionTitle__1RUq-\",\"score\":\"SPCollectableInfoPage_score__3U68g\",\"scoreIcon\":\"SPCollectableInfoPage_scoreIcon__1_uQE\",\"title\":\"SPCollectableInfoPage_title__1O5Jn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SPLogin_btn__2waK7\",\"btnForgot\":\"SPLogin_btnForgot__3PghZ\",\"container\":\"SPLogin_container__3hPDj\",\"error\":\"SPLogin_error__h3n93\",\"label\":\"SPLogin_label__3v4FC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SHeaderBar_bar__1eNh0\",\"logo\":\"SHeaderBar_logo__3n5pz\",\"navbrand\":\"SHeaderBar_navbrand__1-Xwa\",\"patientBar\":\"SHeaderBar_patientBar__3eQ_s\",\"standardBar\":\"SHeaderBar_standardBar__3xag7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SLandingPage_container__K3tRn\",\"features\":\"SLandingPage_features__21L35\",\"featuresTitle\":\"SLandingPage_featuresTitle__MBjjQ\",\"mainIdea\":\"SLandingPage_mainIdea__1bR4Q\",\"mainPhrase\":\"SLandingPage_mainPhrase__1dI-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SFeature_container__3-EK4\",\"description\":\"SFeature_description__3okm9\",\"infoContainer\":\"SFeature_infoContainer__zhU2k\",\"logo\":\"SFeature_logo__fkInR\",\"title\":\"SFeature_title__3GzMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SInfoPanel_container__9gJML\",\"infoText\":\"SInfoPanel_infoText__19t9A\",\"label\":\"SInfoPanel_label__2j784\"};"],"sourceRoot":""}